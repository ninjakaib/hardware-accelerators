// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module lmul_pipelined_fast_fp8_pretty(clk, rst, float_a, float_b, out4132);
    input clk;
    input rst;
    input[7:0] float_a;
    input[7:0] float_b;
    output[7:0] out4132;

    reg[7:0] tmp4128;
    reg[7:0] tmp4129;
    reg tmp4130;
    reg[8:0] tmp4131;
    reg[7:0] tmp4132;

    wire[6:0] const_772_73;
    wire[6:0] const_773_127;
    wire[6:0] const_774_127;
    wire const_775_0;
    wire const_776_0;
    wire const_777_0;
    wire[6:0] const_778_0;
    wire tmp4133;
    wire tmp4134;
    wire[6:0] tmp4135;
    wire[6:0] tmp4136;
    wire tmp4137;
    wire[6:0] tmp4138;
    wire[6:0] tmp4139;
    wire[6:0] tmp4140;
    wire[6:0] tmp4141;
    wire[6:0] tmp4142;
    wire[6:0] tmp4143;
    wire[6:0] tmp4144;
    wire[5:0] tmp4145;
    wire tmp4146;
    wire[6:0] tmp4147;
    wire[6:0] tmp4148;
    wire tmp4149;
    wire tmp4150;
    wire tmp4151;
    wire tmp4152;
    wire tmp4153;
    wire tmp4154;
    wire tmp4155;
    wire[6:0] tmp4156;
    wire tmp4157;
    wire tmp4158;
    wire tmp4159;
    wire tmp4160;
    wire tmp4161;
    wire tmp4162;
    wire tmp4163;
    wire tmp4164;
    wire tmp4165;
    wire tmp4166;
    wire tmp4167;
    wire tmp4168;
    wire tmp4169;
    wire tmp4170;
    wire tmp4171;
    wire tmp4172;
    wire tmp4173;
    wire tmp4174;
    wire tmp4175;
    wire tmp4176;
    wire tmp4177;
    wire tmp4178;
    wire tmp4179;
    wire tmp4180;
    wire tmp4181;
    wire tmp4182;
    wire tmp4183;
    wire tmp4184;
    wire tmp4185;
    wire tmp4186;
    wire tmp4187;
    wire tmp4188;
    wire tmp4189;
    wire tmp4190;
    wire tmp4191;
    wire tmp4192;
    wire tmp4193;
    wire tmp4194;
    wire tmp4195;
    wire tmp4196;
    wire tmp4197;
    wire tmp4198;
    wire tmp4199;
    wire[7:0] tmp4200;
    wire tmp4201;
    wire[7:0] tmp4202;
    wire[7:0] tmp4203;
    wire tmp4204;
    wire[8:0] tmp4205;
    wire[1:0] tmp4206;
    wire[6:0] tmp4207;
    wire tmp4208;
    wire tmp4209;
    wire[6:0] tmp4210;
    wire tmp4211;
    wire[6:0] tmp4212;
    wire[6:0] tmp4213;
    wire[7:0] tmp4214;

    // Combinational
    assign const_772_73 = 73;
    assign const_773_127 = 127;
    assign const_774_127 = 127;
    assign const_775_0 = 0;
    assign const_776_0 = 0;
    assign const_777_0 = 0;
    assign const_778_0 = 0;
    assign out4132 = tmp4132;
    assign tmp4133 = {tmp4128[7]};
    assign tmp4134 = {tmp4129[7]};
    assign tmp4135 = {tmp4128[6], tmp4128[5], tmp4128[4], tmp4128[3], tmp4128[2], tmp4128[1], tmp4128[0]};
    assign tmp4136 = {tmp4129[6], tmp4129[5], tmp4129[4], tmp4129[3], tmp4129[2], tmp4129[1], tmp4129[0]};
    assign tmp4137 = tmp4133 ^ tmp4134;
    assign tmp4138 = tmp4135 ^ tmp4136;
    assign tmp4139 = tmp4138 ^ const_772_73;
    assign tmp4140 = tmp4135 | tmp4136;
    assign tmp4141 = tmp4135 | const_772_73;
    assign tmp4142 = tmp4140 & tmp4141;
    assign tmp4143 = tmp4136 | const_772_73;
    assign tmp4144 = tmp4142 & tmp4143;
    assign tmp4145 = {tmp4139[6], tmp4139[5], tmp4139[4], tmp4139[3], tmp4139[2], tmp4139[1]};
    assign tmp4146 = {const_775_0};
    assign tmp4147 = {tmp4146, tmp4145};
    assign tmp4148 = tmp4147 ^ tmp4144;
    assign tmp4149 = {tmp4148[0]};
    assign tmp4150 = {tmp4148[1]};
    assign tmp4151 = {tmp4148[2]};
    assign tmp4152 = {tmp4148[3]};
    assign tmp4153 = {tmp4148[4]};
    assign tmp4154 = {tmp4148[5]};
    assign tmp4155 = {tmp4148[6]};
    assign tmp4156 = tmp4147 & tmp4144;
    assign tmp4157 = {tmp4156[0]};
    assign tmp4158 = {tmp4156[1]};
    assign tmp4159 = {tmp4156[2]};
    assign tmp4160 = {tmp4156[3]};
    assign tmp4161 = {tmp4156[4]};
    assign tmp4162 = {tmp4156[5]};
    assign tmp4163 = {tmp4156[6]};
    assign tmp4164 = tmp4155 & tmp4162;
    assign tmp4165 = tmp4163 | tmp4164;
    assign tmp4166 = tmp4155 & tmp4154;
    assign tmp4167 = tmp4154 & tmp4161;
    assign tmp4168 = tmp4162 | tmp4167;
    assign tmp4169 = tmp4154 & tmp4153;
    assign tmp4170 = tmp4153 & tmp4160;
    assign tmp4171 = tmp4161 | tmp4170;
    assign tmp4172 = tmp4153 & tmp4152;
    assign tmp4173 = tmp4152 & tmp4159;
    assign tmp4174 = tmp4160 | tmp4173;
    assign tmp4175 = tmp4152 & tmp4151;
    assign tmp4176 = tmp4151 & tmp4158;
    assign tmp4177 = tmp4159 | tmp4176;
    assign tmp4178 = tmp4151 & tmp4150;
    assign tmp4179 = tmp4150 & tmp4157;
    assign tmp4180 = tmp4158 | tmp4179;
    assign tmp4181 = tmp4166 & tmp4171;
    assign tmp4182 = tmp4165 | tmp4181;
    assign tmp4183 = tmp4166 & tmp4172;
    assign tmp4184 = tmp4169 & tmp4174;
    assign tmp4185 = tmp4168 | tmp4184;
    assign tmp4186 = tmp4169 & tmp4175;
    assign tmp4187 = tmp4172 & tmp4177;
    assign tmp4188 = tmp4171 | tmp4187;
    assign tmp4189 = tmp4172 & tmp4178;
    assign tmp4190 = tmp4175 & tmp4180;
    assign tmp4191 = tmp4174 | tmp4190;
    assign tmp4192 = tmp4178 & tmp4157;
    assign tmp4193 = tmp4177 | tmp4192;
    assign tmp4194 = tmp4183 & tmp4193;
    assign tmp4195 = tmp4182 | tmp4194;
    assign tmp4196 = tmp4186 & tmp4180;
    assign tmp4197 = tmp4185 | tmp4196;
    assign tmp4198 = tmp4189 & tmp4157;
    assign tmp4199 = tmp4188 | tmp4198;
    assign tmp4200 = {tmp4195, tmp4197, tmp4199, tmp4191, tmp4193, tmp4180, tmp4157, const_776_0};
    assign tmp4201 = {const_777_0};
    assign tmp4202 = {tmp4201, tmp4148};
    assign tmp4203 = tmp4200 ^ tmp4202;
    assign tmp4204 = {tmp4139[0]};
    assign tmp4205 = {tmp4203, tmp4204};
    assign tmp4206 = {tmp4131[8], tmp4131[7]};
    assign tmp4207 = {tmp4131[6], tmp4131[5], tmp4131[4], tmp4131[3], tmp4131[2], tmp4131[1], tmp4131[0]};
    assign tmp4208 = {tmp4206[1]};
    assign tmp4209 = {tmp4206[0]};
    assign tmp4210 = tmp4209 ? tmp4207 : const_778_0;
    assign tmp4211 = {tmp4206[0]};
    assign tmp4212 = tmp4211 ? const_774_127 : const_774_127;
    assign tmp4213 = tmp4208 ? tmp4212 : tmp4210;
    assign tmp4214 = {tmp4130, tmp4213};

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            tmp4128 <= 0;
            tmp4129 <= 0;
            tmp4130 <= 0;
            tmp4131 <= 0;
            tmp4132 <= 0;
        end
        else begin
            tmp4128 <= float_a;
            tmp4129 <= float_b;
            tmp4130 <= tmp4137;
            tmp4131 <= tmp4205;
            tmp4132 <= tmp4214;
        end
    end

endmodule

