// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, accum_in, adder_en, data_en, data_in, mul_en, weight_en, weight_in, out48086, out48087, out48088);
    input clk;
    input rst;
    input[7:0] accum_in;
    input adder_en;
    input data_en;
    input[7:0] data_in;
    input mul_en;
    input weight_en;
    input[7:0] weight_in;
    output[7:0] out48086;
    output[7:0] out48087;
    output[7:0] out48088;

    reg[7:0] tmp48086;
    reg[7:0] tmp48087;
    reg[7:0] tmp48088;
    reg[7:0] tmp48102;

    wire[6:0] const_6750_55;
    wire const_6751_0;
    wire const_6752_1;
    wire const_6753_1;
    wire const_6754_1;
    wire const_6755_0;
    wire const_6756_0;
    wire[3:0] const_6757_8;
    wire[3:0] const_6758_8;
    wire[3:0] const_6759_0;
    wire const_6760_0;
    wire const_6761_0;
    wire const_6762_0;
    wire const_6763_0;
    wire const_6764_0;
    wire const_6765_0;
    wire const_6766_0;
    wire const_6767_0;
    wire const_6768_1;
    wire const_6769_0;
    wire const_6770_0;
    wire const_6771_0;
    wire const_6772_0;
    wire[1:0] const_6773_2;
    wire const_6774_1;
    wire const_6775_0;
    wire[1:0] const_6776_1;
    wire[1:0] const_6777_0;
    wire const_6778_0;
    wire const_6779_0;
    wire const_6780_0;
    wire const_6781_0;
    wire[1:0] const_6782_2;
    wire const_6783_1;
    wire const_6784_0;
    wire[1:0] const_6785_1;
    wire[1:0] const_6786_0;
    wire const_6787_0;
    wire const_6788_0;
    wire[2:0] const_6789_4;
    wire[1:0] const_6790_1;
    wire const_6791_0;
    wire const_6792_0;
    wire const_6793_0;
    wire const_6794_0;
    wire const_6795_1;
    wire const_6796_0;
    wire const_6797_0;
    wire const_6798_0;
    wire const_6799_0;
    wire const_6800_0;
    wire const_6801_1;
    wire const_6802_0;
    wire const_6803_0;
    wire const_6804_0;
    wire const_6805_0;
    wire const_6806_0;
    wire[7:0] tmp48080;
    wire[7:0] tmp48081;
    wire[7:0] tmp48082;
    wire tmp48083;
    wire tmp48084;
    wire tmp48085;
    wire tmp48089;
    wire tmp48090;
    wire tmp48091;
    wire[6:0] tmp48092;
    wire[6:0] tmp48093;
    wire[7:0] tmp48094;
    wire tmp48095;
    wire[7:0] tmp48096;
    wire[8:0] tmp48097;
    wire[7:0] tmp48098;
    wire[6:0] tmp48099;
    wire[7:0] tmp48100;
    wire tmp48101;
    wire[7:0] tmp48103;
    wire tmp48104;
    wire tmp48105;
    wire tmp48106;
    wire tmp48107;
    wire[3:0] tmp48108;
    wire[3:0] tmp48109;
    wire[3:0] tmp48110;
    wire[3:0] tmp48111;
    wire[3:0] tmp48112;
    wire[3:0] tmp48113;
    wire[2:0] tmp48114;
    wire[3:0] tmp48115;
    wire[2:0] tmp48116;
    wire[3:0] tmp48117;
    wire tmp48118;
    wire[4:0] tmp48119;
    wire[4:0] tmp48120;
    wire[3:0] tmp48121;
    wire[3:0] tmp48122;
    wire[3:0] tmp48123;
    wire tmp48124;
    wire[4:0] tmp48125;
    wire tmp48126;
    wire tmp48127;
    wire[3:0] tmp48128;
    wire[3:0] tmp48129;
    wire tmp48130;
    wire[3:0] tmp48131;
    wire[3:0] tmp48132;
    wire[2:0] tmp48133;
    wire[3:0] tmp48134;
    wire[4:0] tmp48135;
    wire[3:0] tmp48136;
    wire[4:0] tmp48137;
    wire tmp48138;
    wire[4:0] tmp48139;
    wire[4:0] tmp48140;
    wire tmp48141;
    wire[3:0] tmp48142;
    wire tmp48143;
    wire[3:0] tmp48144;
    wire[3:0] tmp48145;
    wire[3:0] tmp48146;
    wire[3:0] tmp48147;
    wire tmp48148;
    wire[3:0] tmp48149;
    wire[7:0] tmp48150;
    wire[7:0] tmp48151;
    wire[6:0] tmp48152;
    wire[7:0] tmp48153;
    wire[6:0] tmp48154;
    wire[7:0] tmp48155;
    wire[7:0] tmp48156;
    wire tmp48157;
    wire[7:0] tmp48158;
    wire[1:0] tmp48159;
    wire[1:0] tmp48160;
    wire[5:0] tmp48161;
    wire[7:0] tmp48162;
    wire[5:0] tmp48163;
    wire[7:0] tmp48164;
    wire[7:0] tmp48165;
    wire tmp48166;
    wire[7:0] tmp48167;
    wire[3:0] tmp48168;
    wire[3:0] tmp48169;
    wire[3:0] tmp48170;
    wire[7:0] tmp48171;
    wire[3:0] tmp48172;
    wire[7:0] tmp48173;
    wire[7:0] tmp48174;
    wire tmp48175;
    wire[7:0] tmp48176;
    wire[7:0] tmp48177;
    wire[7:0] tmp48178;
    wire tmp48179;
    wire[7:0] tmp48180;
    wire[3:0] tmp48181;
    wire[3:0] tmp48182;
    wire tmp48183;
    wire tmp48184;
    wire tmp48185;
    wire tmp48186;
    wire tmp48187;
    wire[1:0] tmp48188;
    wire tmp48189;
    wire tmp48190;
    wire tmp48191;
    wire tmp48192;
    wire tmp48193;
    wire[5:0] tmp48194;
    wire tmp48195;
    wire[4:0] tmp48196;
    wire tmp48197;
    wire[4:0] tmp48198;
    wire[5:0] tmp48199;
    wire tmp48200;
    wire[4:0] tmp48201;
    wire tmp48202;
    wire[4:0] tmp48203;
    wire[5:0] tmp48204;
    wire tmp48205;
    wire[4:0] tmp48206;
    wire[5:0] tmp48207;
    wire[5:0] tmp48208;
    wire[5:0] tmp48209;
    wire tmp48210;
    wire tmp48211;
    wire[4:0] tmp48212;
    wire[5:0] tmp48213;
    wire[4:0] tmp48214;
    wire[5:0] tmp48215;
    wire[6:0] tmp48216;
    wire tmp48217;
    wire[6:0] tmp48218;
    wire[6:0] tmp48219;
    wire[4:0] tmp48220;
    wire tmp48221;
    wire[3:0] tmp48222;
    wire[3:0] tmp48223;
    wire[1:0] tmp48224;
    wire[1:0] tmp48225;
    wire[1:0] tmp48226;
    wire tmp48227;
    wire[1:0] tmp48228;
    wire tmp48229;
    wire tmp48230;
    wire[1:0] tmp48231;
    wire tmp48232;
    wire tmp48233;
    wire tmp48234;
    wire tmp48235;
    wire tmp48236;
    wire tmp48237;
    wire tmp48238;
    wire[1:0] tmp48239;
    wire[1:0] tmp48240;
    wire[1:0] tmp48241;
    wire[1:0] tmp48242;
    wire[1:0] tmp48243;
    wire tmp48244;
    wire[1:0] tmp48245;
    wire tmp48246;
    wire tmp48247;
    wire[1:0] tmp48248;
    wire tmp48249;
    wire tmp48250;
    wire tmp48251;
    wire tmp48252;
    wire tmp48253;
    wire tmp48254;
    wire tmp48255;
    wire[1:0] tmp48256;
    wire[1:0] tmp48257;
    wire[1:0] tmp48258;
    wire[1:0] tmp48259;
    wire[3:0] tmp48260;
    wire[2:0] tmp48261;
    wire tmp48262;
    wire tmp48263;
    wire tmp48264;
    wire tmp48265;
    wire[2:0] tmp48266;
    wire tmp48267;
    wire tmp48268;
    wire[2:0] tmp48269;
    wire tmp48270;
    wire tmp48271;
    wire tmp48272;
    wire[1:0] tmp48273;
    wire[2:0] tmp48274;
    wire[2:0] tmp48275;
    wire[2:0] tmp48276;
    wire[2:0] tmp48277;
    wire tmp48278;
    wire[3:0] tmp48279;
    wire[2:0] tmp48280;
    wire[3:0] tmp48281;
    wire[4:0] tmp48282;
    wire[3:0] tmp48283;
    wire[4:0] tmp48284;
    wire[4:0] tmp48285;
    wire[3:0] tmp48286;
    wire[4:0] tmp48287;
    wire tmp48288;
    wire[4:0] tmp48289;
    wire[3:0] tmp48290;
    wire[4:0] tmp48291;
    wire[3:0] tmp48292;
    wire[4:0] tmp48293;
    wire[4:0] tmp48294;
    wire tmp48295;
    wire[4:0] tmp48296;
    wire[1:0] tmp48297;
    wire[1:0] tmp48298;
    wire[2:0] tmp48299;
    wire[4:0] tmp48300;
    wire[2:0] tmp48301;
    wire[4:0] tmp48302;
    wire[4:0] tmp48303;
    wire tmp48304;
    wire[4:0] tmp48305;
    wire[3:0] tmp48306;
    wire[3:0] tmp48307;
    wire tmp48308;
    wire[4:0] tmp48309;
    wire tmp48310;
    wire[4:0] tmp48311;
    wire[4:0] tmp48312;
    wire tmp48313;
    wire[4:0] tmp48314;
    wire[7:0] tmp48315;
    wire[4:0] tmp48316;
    wire tmp48317;
    wire[4:0] tmp48318;
    wire tmp48319;
    wire[4:0] tmp48320;
    wire tmp48321;
    wire tmp48322;
    wire tmp48323;
    wire tmp48324;
    wire tmp48325;
    wire tmp48326;
    wire tmp48327;
    wire tmp48328;
    wire tmp48329;
    wire tmp48330;
    wire[4:0] tmp48331;
    wire[3:0] tmp48332;
    wire[4:0] tmp48333;
    wire[5:0] tmp48334;
    wire[4:0] tmp48335;
    wire tmp48336;
    wire tmp48337;
    wire[2:0] tmp48338;
    wire[2:0] tmp48339;
    wire[2:0] tmp48340;
    wire[2:0] tmp48341;
    wire[3:0] tmp48342;
    wire[4:0] tmp48343;
    wire[3:0] tmp48344;
    wire[3:0] tmp48345;
    wire[2:0] tmp48346;
    wire[3:0] tmp48347;
    wire[4:0] tmp48348;
    wire[3:0] tmp48349;
    wire tmp48350;
    wire tmp48351;
    wire tmp48352;
    wire[3:0] tmp48353;
    wire[2:0] tmp48354;
    wire[3:0] tmp48355;
    wire tmp48356;
    wire tmp48357;
    wire tmp48358;
    wire tmp48359;
    wire tmp48360;
    wire tmp48361;
    wire tmp48362;
    wire tmp48363;
    wire tmp48364;
    wire tmp48365;
    wire tmp48366;
    wire tmp48367;
    wire tmp48368;
    wire tmp48369;
    wire tmp48370;
    wire tmp48371;
    wire tmp48372;
    wire tmp48373;
    wire[7:0] tmp48374;
    wire[7:0] tmp48375;
    wire[7:0] tmp48376;
    wire[7:0] tmp48377;
    wire[7:0] tmp48378;

    // Combinational
    assign const_6750_55 = 55;
    assign const_6751_0 = 0;
    assign const_6752_1 = 1;
    assign const_6753_1 = 1;
    assign const_6754_1 = 1;
    assign const_6755_0 = 0;
    assign const_6756_0 = 0;
    assign const_6757_8 = 8;
    assign const_6758_8 = 8;
    assign const_6759_0 = 0;
    assign const_6760_0 = 0;
    assign const_6761_0 = 0;
    assign const_6762_0 = 0;
    assign const_6763_0 = 0;
    assign const_6764_0 = 0;
    assign const_6765_0 = 0;
    assign const_6766_0 = 0;
    assign const_6767_0 = 0;
    assign const_6768_1 = 1;
    assign const_6769_0 = 0;
    assign const_6770_0 = 0;
    assign const_6771_0 = 0;
    assign const_6772_0 = 0;
    assign const_6773_2 = 2;
    assign const_6774_1 = 1;
    assign const_6775_0 = 0;
    assign const_6776_1 = 1;
    assign const_6777_0 = 0;
    assign const_6778_0 = 0;
    assign const_6779_0 = 0;
    assign const_6780_0 = 0;
    assign const_6781_0 = 0;
    assign const_6782_2 = 2;
    assign const_6783_1 = 1;
    assign const_6784_0 = 0;
    assign const_6785_1 = 1;
    assign const_6786_0 = 0;
    assign const_6787_0 = 0;
    assign const_6788_0 = 0;
    assign const_6789_4 = 4;
    assign const_6790_1 = 1;
    assign const_6791_0 = 0;
    assign const_6792_0 = 0;
    assign const_6793_0 = 0;
    assign const_6794_0 = 0;
    assign const_6795_1 = 1;
    assign const_6796_0 = 0;
    assign const_6797_0 = 0;
    assign const_6798_0 = 0;
    assign const_6799_0 = 0;
    assign const_6800_0 = 0;
    assign const_6801_1 = 1;
    assign const_6802_0 = 0;
    assign const_6803_0 = 0;
    assign const_6804_0 = 0;
    assign const_6805_0 = 0;
    assign const_6806_0 = 0;
    assign out48086 = tmp48086;
    assign out48087 = tmp48087;
    assign out48088 = tmp48088;
    assign tmp48080 = data_in;
    assign tmp48081 = weight_in;
    assign tmp48082 = accum_in;
    assign tmp48083 = weight_en;
    assign tmp48084 = data_en;
    assign tmp48085 = adder_en;
    assign tmp48089 = {tmp48086[7]};
    assign tmp48090 = {tmp48087[7]};
    assign tmp48091 = tmp48089 ^ tmp48090;
    assign tmp48092 = {tmp48086[6], tmp48086[5], tmp48086[4], tmp48086[3], tmp48086[2], tmp48086[1], tmp48086[0]};
    assign tmp48093 = {tmp48087[6], tmp48087[5], tmp48087[4], tmp48087[3], tmp48087[2], tmp48087[1], tmp48087[0]};
    assign tmp48094 = tmp48092 + tmp48093;
    assign tmp48095 = {const_6751_0};
    assign tmp48096 = {tmp48095, const_6750_55};
    assign tmp48097 = tmp48094 - tmp48096;
    assign tmp48098 = tmp48100;
    assign tmp48099 = {tmp48097[6], tmp48097[5], tmp48097[4], tmp48097[3], tmp48097[2], tmp48097[1], tmp48097[0]};
    assign tmp48100 = {tmp48091, tmp48099};
    assign tmp48101 = mul_en;
    assign tmp48103 = tmp48101 ? tmp48098 : tmp48102;
    assign tmp48104 = tmp48106;
    assign tmp48105 = tmp48107;
    assign tmp48106 = {tmp48102[7]};
    assign tmp48107 = {tmp48082[7]};
    assign tmp48108 = tmp48110;
    assign tmp48109 = tmp48111;
    assign tmp48110 = {tmp48102[6], tmp48102[5], tmp48102[4], tmp48102[3]};
    assign tmp48111 = {tmp48082[6], tmp48082[5], tmp48082[4], tmp48082[3]};
    assign tmp48112 = tmp48115;
    assign tmp48113 = tmp48117;
    assign tmp48114 = {tmp48102[2], tmp48102[1], tmp48102[0]};
    assign tmp48115 = {const_6752_1, tmp48114};
    assign tmp48116 = {tmp48082[2], tmp48082[1], tmp48082[0]};
    assign tmp48117 = {const_6753_1, tmp48116};
    assign tmp48118 = tmp48124;
    assign tmp48119 = tmp48125;
    assign tmp48120 = tmp48140;
    assign tmp48121 = tmp48128;
    assign tmp48122 = tmp48142;
    assign tmp48123 = tmp48144;
    assign tmp48124 = tmp48104 ^ tmp48105;
    assign tmp48125 = tmp48108 - tmp48109;
    assign tmp48126 = {tmp48119[4]};
    assign tmp48127 = {tmp48119[4]};
    assign tmp48128 = tmp48127 ? tmp48109 : tmp48108;
    assign tmp48129 = {tmp48119[3], tmp48119[2], tmp48119[1], tmp48119[0]};
    assign tmp48130 = {tmp48119[4]};
    assign tmp48131 = {tmp48119[3], tmp48119[2], tmp48119[1], tmp48119[0]};
    assign tmp48132 = ~tmp48131;
    assign tmp48133 = {const_6755_0, const_6755_0, const_6755_0};
    assign tmp48134 = {tmp48133, const_6754_1};
    assign tmp48135 = tmp48132 + tmp48134;
    assign tmp48136 = {tmp48135[3], tmp48135[2], tmp48135[1], tmp48135[0]};
    assign tmp48137 = {tmp48130, tmp48136};
    assign tmp48138 = {const_6756_0};
    assign tmp48139 = {tmp48138, tmp48129};
    assign tmp48140 = tmp48126 ? tmp48137 : tmp48139;
    assign tmp48141 = {tmp48119[4]};
    assign tmp48142 = tmp48141 ? tmp48112 : tmp48113;
    assign tmp48143 = {tmp48119[4]};
    assign tmp48144 = tmp48143 ? tmp48113 : tmp48112;
    assign tmp48145 = tmp48146;
    assign tmp48146 = {tmp48120[3], tmp48120[2], tmp48120[1], tmp48120[0]};
    assign tmp48147 = tmp48149;
    assign tmp48148 = tmp48145 > const_6757_8;
    assign tmp48149 = tmp48148 ? const_6758_8 : tmp48145;
    assign tmp48150 = {tmp48122, const_6759_0};
    assign tmp48151 = tmp48180;
    assign tmp48152 = {tmp48150[6], tmp48150[5], tmp48150[4], tmp48150[3], tmp48150[2], tmp48150[1], tmp48150[0]};
    assign tmp48153 = {tmp48152, const_6760_0};
    assign tmp48154 = {tmp48150[7], tmp48150[6], tmp48150[5], tmp48150[4], tmp48150[3], tmp48150[2], tmp48150[1]};
    assign tmp48155 = {const_6760_0, tmp48154};
    assign tmp48156 = const_6761_0 ? tmp48153 : tmp48155;
    assign tmp48157 = {tmp48147[0]};
    assign tmp48158 = tmp48157 ? tmp48156 : tmp48150;
    assign tmp48159 = {const_6760_0, const_6760_0};
    assign tmp48160 = {tmp48159[1], tmp48159[0]};
    assign tmp48161 = {tmp48158[5], tmp48158[4], tmp48158[3], tmp48158[2], tmp48158[1], tmp48158[0]};
    assign tmp48162 = {tmp48161, tmp48160};
    assign tmp48163 = {tmp48158[7], tmp48158[6], tmp48158[5], tmp48158[4], tmp48158[3], tmp48158[2]};
    assign tmp48164 = {tmp48160, tmp48163};
    assign tmp48165 = const_6761_0 ? tmp48162 : tmp48164;
    assign tmp48166 = {tmp48147[1]};
    assign tmp48167 = tmp48166 ? tmp48165 : tmp48158;
    assign tmp48168 = {tmp48160, tmp48160};
    assign tmp48169 = {tmp48168[3], tmp48168[2], tmp48168[1], tmp48168[0]};
    assign tmp48170 = {tmp48167[3], tmp48167[2], tmp48167[1], tmp48167[0]};
    assign tmp48171 = {tmp48170, tmp48169};
    assign tmp48172 = {tmp48167[7], tmp48167[6], tmp48167[5], tmp48167[4]};
    assign tmp48173 = {tmp48169, tmp48172};
    assign tmp48174 = const_6761_0 ? tmp48171 : tmp48173;
    assign tmp48175 = {tmp48147[2]};
    assign tmp48176 = tmp48175 ? tmp48174 : tmp48167;
    assign tmp48177 = {tmp48169, tmp48169};
    assign tmp48178 = {tmp48177[7], tmp48177[6], tmp48177[5], tmp48177[4], tmp48177[3], tmp48177[2], tmp48177[1], tmp48177[0]};
    assign tmp48179 = {tmp48147[3]};
    assign tmp48180 = tmp48179 ? tmp48178 : tmp48176;
    assign tmp48181 = {tmp48151[7], tmp48151[6], tmp48151[5], tmp48151[4]};
    assign tmp48182 = {tmp48151[3], tmp48151[2], tmp48151[1], tmp48151[0]};
    assign tmp48183 = tmp48186;
    assign tmp48184 = tmp48187;
    assign tmp48185 = tmp48193;
    assign tmp48186 = {tmp48182[3]};
    assign tmp48187 = {tmp48182[2]};
    assign tmp48188 = {tmp48182[1], tmp48182[0]};
    assign tmp48189 = {tmp48188[0]};
    assign tmp48190 = {tmp48189};
    assign tmp48191 = {tmp48188[1]};
    assign tmp48192 = {tmp48191};
    assign tmp48193 = tmp48190 | tmp48192;
    assign tmp48194 = tmp48209;
    assign tmp48195 = {const_6762_0};
    assign tmp48196 = {tmp48195, tmp48123};
    assign tmp48197 = {const_6763_0};
    assign tmp48198 = {tmp48197, tmp48181};
    assign tmp48199 = tmp48196 - tmp48198;
    assign tmp48200 = {const_6764_0};
    assign tmp48201 = {tmp48200, tmp48123};
    assign tmp48202 = {const_6765_0};
    assign tmp48203 = {tmp48202, tmp48181};
    assign tmp48204 = tmp48201 + tmp48203;
    assign tmp48205 = ~tmp48118;
    assign tmp48206 = {const_6767_0, const_6767_0, const_6767_0, const_6767_0, const_6767_0};
    assign tmp48207 = {tmp48206, const_6766_0};
    assign tmp48208 = tmp48118 ? tmp48199 : tmp48207;
    assign tmp48209 = tmp48205 ? tmp48204 : tmp48208;
    assign tmp48210 = tmp48211;
    assign tmp48211 = {tmp48194[5]};
    assign tmp48212 = tmp48220;
    assign tmp48213 = ~tmp48194;
    assign tmp48214 = {const_6769_0, const_6769_0, const_6769_0, const_6769_0, const_6769_0};
    assign tmp48215 = {tmp48214, const_6768_1};
    assign tmp48216 = tmp48213 + tmp48215;
    assign tmp48217 = {const_6770_0};
    assign tmp48218 = {tmp48217, tmp48194};
    assign tmp48219 = tmp48210 ? tmp48216 : tmp48218;
    assign tmp48220 = {tmp48219[4], tmp48219[3], tmp48219[2], tmp48219[1], tmp48219[0]};
    assign tmp48221 = {tmp48212[4]};
    assign tmp48222 = tmp48286;
    assign tmp48223 = {tmp48212[3], tmp48212[2], tmp48212[1], tmp48212[0]};
    assign tmp48224 = {tmp48223[3], tmp48223[2]};
    assign tmp48225 = {tmp48223[1], tmp48223[0]};
    assign tmp48226 = tmp48242;
    assign tmp48227 = {const_6772_0};
    assign tmp48228 = {tmp48227, const_6771_0};
    assign tmp48229 = tmp48224 == tmp48228;
    assign tmp48230 = {const_6775_0};
    assign tmp48231 = {tmp48230, const_6774_1};
    assign tmp48232 = tmp48224 == tmp48231;
    assign tmp48233 = ~tmp48229;
    assign tmp48234 = tmp48233 & tmp48232;
    assign tmp48235 = ~tmp48229;
    assign tmp48236 = ~tmp48232;
    assign tmp48237 = tmp48235 & tmp48236;
    assign tmp48238 = {const_6779_0};
    assign tmp48239 = {tmp48238, const_6778_0};
    assign tmp48240 = tmp48229 ? const_6773_2 : tmp48239;
    assign tmp48241 = tmp48234 ? const_6776_1 : tmp48240;
    assign tmp48242 = tmp48237 ? const_6777_0 : tmp48241;
    assign tmp48243 = tmp48259;
    assign tmp48244 = {const_6781_0};
    assign tmp48245 = {tmp48244, const_6780_0};
    assign tmp48246 = tmp48225 == tmp48245;
    assign tmp48247 = {const_6784_0};
    assign tmp48248 = {tmp48247, const_6783_1};
    assign tmp48249 = tmp48225 == tmp48248;
    assign tmp48250 = ~tmp48246;
    assign tmp48251 = tmp48250 & tmp48249;
    assign tmp48252 = ~tmp48246;
    assign tmp48253 = ~tmp48249;
    assign tmp48254 = tmp48252 & tmp48253;
    assign tmp48255 = {const_6788_0};
    assign tmp48256 = {tmp48255, const_6787_0};
    assign tmp48257 = tmp48246 ? const_6782_2 : tmp48256;
    assign tmp48258 = tmp48251 ? const_6785_1 : tmp48257;
    assign tmp48259 = tmp48254 ? const_6786_0 : tmp48258;
    assign tmp48260 = tmp48279;
    assign tmp48261 = tmp48277;
    assign tmp48262 = {tmp48226[1]};
    assign tmp48263 = {tmp48243[1]};
    assign tmp48264 = tmp48262 & tmp48263;
    assign tmp48265 = {tmp48243[0]};
    assign tmp48266 = {const_6790_1, tmp48265};
    assign tmp48267 = ~tmp48264;
    assign tmp48268 = tmp48267 & tmp48262;
    assign tmp48269 = {const_6791_0, tmp48226};
    assign tmp48270 = ~tmp48264;
    assign tmp48271 = ~tmp48262;
    assign tmp48272 = tmp48270 & tmp48271;
    assign tmp48273 = {const_6793_0, const_6793_0};
    assign tmp48274 = {tmp48273, const_6792_0};
    assign tmp48275 = tmp48264 ? const_6789_4 : tmp48274;
    assign tmp48276 = tmp48268 ? tmp48266 : tmp48275;
    assign tmp48277 = tmp48272 ? tmp48269 : tmp48276;
    assign tmp48278 = {const_6794_0};
    assign tmp48279 = {tmp48278, tmp48261};
    assign tmp48280 = {const_6796_0, const_6796_0, const_6796_0};
    assign tmp48281 = {tmp48280, const_6795_1};
    assign tmp48282 = tmp48260 + tmp48281;
    assign tmp48283 = {const_6798_0, const_6798_0, const_6798_0, const_6798_0};
    assign tmp48284 = {tmp48283, const_6797_0};
    assign tmp48285 = tmp48221 ? tmp48284 : tmp48282;
    assign tmp48286 = {tmp48285[3], tmp48285[2], tmp48285[1], tmp48285[0]};
    assign tmp48287 = tmp48320;
    assign tmp48288 = {const_6799_0};
    assign tmp48289 = {tmp48288, tmp48222};
    assign tmp48290 = {tmp48212[3], tmp48212[2], tmp48212[1], tmp48212[0]};
    assign tmp48291 = {tmp48290, const_6800_0};
    assign tmp48292 = {tmp48212[4], tmp48212[3], tmp48212[2], tmp48212[1]};
    assign tmp48293 = {const_6800_0, tmp48292};
    assign tmp48294 = const_6801_1 ? tmp48291 : tmp48293;
    assign tmp48295 = {tmp48289[0]};
    assign tmp48296 = tmp48295 ? tmp48294 : tmp48212;
    assign tmp48297 = {const_6800_0, const_6800_0};
    assign tmp48298 = {tmp48297[1], tmp48297[0]};
    assign tmp48299 = {tmp48296[2], tmp48296[1], tmp48296[0]};
    assign tmp48300 = {tmp48299, tmp48298};
    assign tmp48301 = {tmp48296[4], tmp48296[3], tmp48296[2]};
    assign tmp48302 = {tmp48298, tmp48301};
    assign tmp48303 = const_6801_1 ? tmp48300 : tmp48302;
    assign tmp48304 = {tmp48289[1]};
    assign tmp48305 = tmp48304 ? tmp48303 : tmp48296;
    assign tmp48306 = {tmp48298, tmp48298};
    assign tmp48307 = {tmp48306[3], tmp48306[2], tmp48306[1], tmp48306[0]};
    assign tmp48308 = {tmp48305[0]};
    assign tmp48309 = {tmp48308, tmp48307};
    assign tmp48310 = {tmp48305[4]};
    assign tmp48311 = {tmp48307, tmp48310};
    assign tmp48312 = const_6801_1 ? tmp48309 : tmp48311;
    assign tmp48313 = {tmp48289[2]};
    assign tmp48314 = tmp48313 ? tmp48312 : tmp48305;
    assign tmp48315 = {tmp48307, tmp48307};
    assign tmp48316 = {tmp48315[4], tmp48315[3], tmp48315[2], tmp48315[1], tmp48315[0]};
    assign tmp48317 = {tmp48289[3]};
    assign tmp48318 = tmp48317 ? tmp48316 : tmp48314;
    assign tmp48319 = {tmp48289[4]};
    assign tmp48320 = tmp48319 ? tmp48316 : tmp48318;
    assign tmp48321 = tmp48330;
    assign tmp48322 = {tmp48287[1]};
    assign tmp48323 = tmp48184 | tmp48185;
    assign tmp48324 = tmp48183 & tmp48323;
    assign tmp48325 = ~tmp48184;
    assign tmp48326 = tmp48183 & tmp48325;
    assign tmp48327 = ~tmp48185;
    assign tmp48328 = tmp48326 & tmp48327;
    assign tmp48329 = tmp48328 & tmp48322;
    assign tmp48330 = tmp48324 | tmp48329;
    assign tmp48331 = tmp48335;
    assign tmp48332 = {const_6802_0, const_6802_0, const_6802_0, const_6802_0};
    assign tmp48333 = {tmp48332, tmp48321};
    assign tmp48334 = tmp48287 + tmp48333;
    assign tmp48335 = {tmp48334[4], tmp48334[3], tmp48334[2], tmp48334[1], tmp48334[0]};
    assign tmp48336 = tmp48337;
    assign tmp48337 = {tmp48331[4]};
    assign tmp48338 = tmp48341;
    assign tmp48339 = {tmp48331[3], tmp48331[2], tmp48331[1]};
    assign tmp48340 = {tmp48331[2], tmp48331[1], tmp48331[0]};
    assign tmp48341 = tmp48336 ? tmp48339 : tmp48340;
    assign tmp48342 = tmp48344;
    assign tmp48343 = tmp48121 - tmp48222;
    assign tmp48344 = {tmp48343[3], tmp48343[2], tmp48343[1], tmp48343[0]};
    assign tmp48345 = tmp48349;
    assign tmp48346 = {const_6803_0, const_6803_0, const_6803_0};
    assign tmp48347 = {tmp48346, tmp48336};
    assign tmp48348 = tmp48342 + tmp48347;
    assign tmp48349 = {tmp48348[3], tmp48348[2], tmp48348[1], tmp48348[0]};
    assign tmp48350 = tmp48373;
    assign tmp48351 = tmp48104 ^ tmp48105;
    assign tmp48352 = ~tmp48351;
    assign tmp48353 = {tmp48120[3], tmp48120[2], tmp48120[1], tmp48120[0]};
    assign tmp48354 = {const_6805_0, const_6805_0, const_6805_0};
    assign tmp48355 = {tmp48354, const_6804_0};
    assign tmp48356 = tmp48353 == tmp48355;
    assign tmp48357 = tmp48210 ^ tmp48104;
    assign tmp48358 = ~tmp48352;
    assign tmp48359 = tmp48358 & tmp48356;
    assign tmp48360 = {tmp48120[4]};
    assign tmp48361 = ~tmp48352;
    assign tmp48362 = ~tmp48356;
    assign tmp48363 = tmp48361 & tmp48362;
    assign tmp48364 = tmp48363 & tmp48360;
    assign tmp48365 = ~tmp48352;
    assign tmp48366 = ~tmp48356;
    assign tmp48367 = tmp48365 & tmp48366;
    assign tmp48368 = ~tmp48360;
    assign tmp48369 = tmp48367 & tmp48368;
    assign tmp48370 = tmp48352 ? tmp48104 : const_6806_0;
    assign tmp48371 = tmp48359 ? tmp48357 : tmp48370;
    assign tmp48372 = tmp48364 ? tmp48105 : tmp48371;
    assign tmp48373 = tmp48369 ? tmp48104 : tmp48372;
    assign tmp48374 = tmp48375;
    assign tmp48375 = {tmp48350, tmp48345, tmp48338};
    assign tmp48376 = tmp48084 ? tmp48080 : tmp48086;
    assign tmp48377 = tmp48083 ? tmp48081 : tmp48087;
    assign tmp48378 = tmp48085 ? tmp48374 : tmp48088;

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            tmp48086 <= 0;
            tmp48087 <= 0;
            tmp48088 <= 0;
            tmp48102 <= 0;
        end
        else begin
            tmp48086 <= tmp48376;
            tmp48087 <= tmp48377;
            tmp48088 <= tmp48378;
            tmp48102 <= tmp48103;
        end
    end

endmodule

