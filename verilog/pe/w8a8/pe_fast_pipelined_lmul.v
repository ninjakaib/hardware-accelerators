// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, accum_in, adder_en, adder_w_en_in49240, data_en, data_in, mul_en, weight_en, weight_in, out49147, out49148, out49149);
    input clk;
    input rst;
    input[7:0] accum_in;
    input adder_en;
    input adder_w_en_in49240;
    input data_en;
    input[7:0] data_in;
    input mul_en;
    input weight_en;
    input[7:0] weight_in;
    output[7:0] out49147;
    output[7:0] out49148;
    output[7:0] out49149;

    reg[3:0] float_adder_pipereg_0to1_exp_a_440;
    reg[3:0] float_adder_pipereg_0to1_exp_b_441;
    reg[3:0] float_adder_pipereg_0to1_mant_a_442;
    reg[3:0] float_adder_pipereg_0to1_mant_b_443;
    reg float_adder_pipereg_0to1_sign_a_438;
    reg float_adder_pipereg_0to1_sign_b_439;
    reg float_adder_pipereg_0to1_w_en_437;
    reg[3:0] float_adder_pipereg_1to2_exp_larger_448;
    reg[3:0] float_adder_pipereg_1to2_mant_larger_451;
    reg[3:0] float_adder_pipereg_1to2_mant_smaller_450;
    reg float_adder_pipereg_1to2_sign_a_445;
    reg float_adder_pipereg_1to2_sign_b_446;
    reg float_adder_pipereg_1to2_sign_xor_447;
    reg[4:0] float_adder_pipereg_1to2_signed_shift_449;
    reg float_adder_pipereg_1to2_w_en_444;
    reg[3:0] float_adder_pipereg_2to3_aligned_mant_msb_459;
    reg[3:0] float_adder_pipereg_2to3_exp_larger_456;
    reg float_adder_pipereg_2to3_guard_461;
    reg[3:0] float_adder_pipereg_2to3_mant_larger_458;
    reg float_adder_pipereg_2to3_round_462;
    reg float_adder_pipereg_2to3_sign_a_453;
    reg float_adder_pipereg_2to3_sign_b_454;
    reg float_adder_pipereg_2to3_sign_xor_455;
    reg[4:0] float_adder_pipereg_2to3_signed_shift_457;
    reg float_adder_pipereg_2to3_sticky_460;
    reg float_adder_pipereg_2to3_w_en_452;
    reg[3:0] float_adder_pipereg_3to4_exp_larger_466;
    reg float_adder_pipereg_3to4_guard_469;
    reg float_adder_pipereg_3to4_is_neg_472;
    reg[3:0] float_adder_pipereg_3to4_lzc_473;
    reg[4:0] float_adder_pipereg_3to4_mant_sum_471;
    reg float_adder_pipereg_3to4_round_470;
    reg float_adder_pipereg_3to4_sign_a_464;
    reg float_adder_pipereg_3to4_sign_b_465;
    reg[4:0] float_adder_pipereg_3to4_signed_shift_467;
    reg float_adder_pipereg_3to4_sticky_468;
    reg float_adder_pipereg_3to4_w_en_463;
    reg[7:0] tmp49147;
    reg[7:0] tmp49148;
    reg[7:0] tmp49149;
    reg[7:0] tmp49150;
    reg[7:0] tmp49151;
    reg tmp49152;
    reg[8:0] tmp49153;
    reg[7:0] tmp49154;
    reg[7:0] tmp49238;
    reg[4:0] tmp49433;
    reg tmp49434;

    wire[6:0] const_6938_73;
    wire[6:0] const_6939_127;
    wire[6:0] const_6940_127;
    wire const_6941_0;
    wire const_6942_0;
    wire const_6943_0;
    wire[6:0] const_6944_0;
    wire const_6945_1;
    wire const_6946_1;
    wire const_6947_1;
    wire const_6948_0;
    wire const_6949_0;
    wire const_6950_0;
    wire const_6951_0;
    wire const_6952_1;
    wire const_6953_0;
    wire const_6954_0;
    wire[3:0] const_6955_8;
    wire[3:0] const_6956_8;
    wire[3:0] const_6957_0;
    wire const_6958_0;
    wire const_6959_0;
    wire const_6960_0;
    wire const_6961_1;
    wire const_6962_0;
    wire const_6963_0;
    wire const_6964_0;
    wire const_6965_0;
    wire const_6966_0;
    wire const_6967_1;
    wire const_6968_0;
    wire const_6969_0;
    wire const_6970_0;
    wire const_6971_0;
    wire[1:0] const_6972_2;
    wire const_6973_1;
    wire const_6974_0;
    wire[1:0] const_6975_1;
    wire[1:0] const_6976_0;
    wire const_6977_0;
    wire const_6978_0;
    wire const_6979_0;
    wire const_6980_0;
    wire[1:0] const_6981_2;
    wire const_6982_1;
    wire const_6983_0;
    wire[1:0] const_6984_1;
    wire[1:0] const_6985_0;
    wire const_6986_0;
    wire const_6987_0;
    wire[2:0] const_6988_4;
    wire[1:0] const_6989_1;
    wire const_6990_0;
    wire const_6991_0;
    wire const_6992_0;
    wire const_6993_0;
    wire const_6994_1;
    wire const_6995_0;
    wire const_6996_0;
    wire const_6997_0;
    wire const_6998_0;
    wire const_6999_0;
    wire const_7000_1;
    wire const_7001_0;
    wire const_7002_0;
    wire const_7003_0;
    wire const_7004_0;
    wire const_7005_0;
    wire[7:0] const_7006_0;
    wire const_7007_0;
    wire const_7008_0;
    wire[7:0] tmp49141;
    wire[7:0] tmp49142;
    wire[7:0] tmp49143;
    wire tmp49144;
    wire tmp49145;
    wire tmp49146;
    wire tmp49155;
    wire tmp49156;
    wire[6:0] tmp49157;
    wire[6:0] tmp49158;
    wire tmp49159;
    wire[6:0] tmp49160;
    wire[6:0] tmp49161;
    wire[6:0] tmp49162;
    wire[6:0] tmp49163;
    wire[6:0] tmp49164;
    wire[6:0] tmp49165;
    wire[6:0] tmp49166;
    wire[5:0] tmp49167;
    wire tmp49168;
    wire[6:0] tmp49169;
    wire[6:0] tmp49170;
    wire tmp49171;
    wire tmp49172;
    wire tmp49173;
    wire tmp49174;
    wire tmp49175;
    wire tmp49176;
    wire tmp49177;
    wire[6:0] tmp49178;
    wire tmp49179;
    wire tmp49180;
    wire tmp49181;
    wire tmp49182;
    wire tmp49183;
    wire tmp49184;
    wire tmp49185;
    wire tmp49186;
    wire tmp49187;
    wire tmp49188;
    wire tmp49189;
    wire tmp49190;
    wire tmp49191;
    wire tmp49192;
    wire tmp49193;
    wire tmp49194;
    wire tmp49195;
    wire tmp49196;
    wire tmp49197;
    wire tmp49198;
    wire tmp49199;
    wire tmp49200;
    wire tmp49201;
    wire tmp49202;
    wire tmp49203;
    wire tmp49204;
    wire tmp49205;
    wire tmp49206;
    wire tmp49207;
    wire tmp49208;
    wire tmp49209;
    wire tmp49210;
    wire tmp49211;
    wire tmp49212;
    wire tmp49213;
    wire tmp49214;
    wire tmp49215;
    wire tmp49216;
    wire tmp49217;
    wire tmp49218;
    wire tmp49219;
    wire tmp49220;
    wire tmp49221;
    wire[7:0] tmp49222;
    wire tmp49223;
    wire[7:0] tmp49224;
    wire[7:0] tmp49225;
    wire tmp49226;
    wire[8:0] tmp49227;
    wire[1:0] tmp49228;
    wire[6:0] tmp49229;
    wire tmp49230;
    wire tmp49231;
    wire[6:0] tmp49232;
    wire tmp49233;
    wire[6:0] tmp49234;
    wire[6:0] tmp49235;
    wire[7:0] tmp49236;
    wire tmp49237;
    wire[7:0] tmp49239;
    wire[7:0] tmp49241;
    wire tmp49242;
    wire tmp49243;
    wire tmp49244;
    wire tmp49245;
    wire[3:0] tmp49246;
    wire[3:0] tmp49247;
    wire[3:0] tmp49248;
    wire[3:0] tmp49249;
    wire[3:0] tmp49250;
    wire[3:0] tmp49251;
    wire[2:0] tmp49252;
    wire[3:0] tmp49253;
    wire[2:0] tmp49254;
    wire[3:0] tmp49255;
    wire tmp49256;
    wire[4:0] tmp49257;
    wire[4:0] tmp49258;
    wire[3:0] tmp49259;
    wire[3:0] tmp49260;
    wire[3:0] tmp49261;
    wire tmp49262;
    wire[3:0] tmp49263;
    wire[2:0] tmp49264;
    wire[3:0] tmp49265;
    wire[3:0] tmp49266;
    wire[3:0] tmp49267;
    wire[3:0] tmp49268;
    wire[3:0] tmp49269;
    wire[3:0] tmp49270;
    wire[3:0] tmp49271;
    wire[3:0] tmp49272;
    wire[2:0] tmp49273;
    wire tmp49274;
    wire[3:0] tmp49275;
    wire[3:0] tmp49276;
    wire tmp49277;
    wire tmp49278;
    wire tmp49279;
    wire tmp49280;
    wire[3:0] tmp49281;
    wire tmp49282;
    wire tmp49283;
    wire tmp49284;
    wire tmp49285;
    wire tmp49286;
    wire tmp49287;
    wire tmp49288;
    wire tmp49289;
    wire tmp49290;
    wire tmp49291;
    wire tmp49292;
    wire tmp49293;
    wire tmp49294;
    wire tmp49295;
    wire tmp49296;
    wire tmp49297;
    wire[4:0] tmp49298;
    wire tmp49299;
    wire[4:0] tmp49300;
    wire[4:0] tmp49301;
    wire tmp49302;
    wire[5:0] tmp49303;
    wire[4:0] tmp49304;
    wire tmp49305;
    wire tmp49306;
    wire tmp49307;
    wire[3:0] tmp49308;
    wire[3:0] tmp49309;
    wire tmp49310;
    wire[3:0] tmp49311;
    wire[3:0] tmp49312;
    wire[2:0] tmp49313;
    wire[3:0] tmp49314;
    wire[4:0] tmp49315;
    wire[3:0] tmp49316;
    wire[4:0] tmp49317;
    wire tmp49318;
    wire[4:0] tmp49319;
    wire[4:0] tmp49320;
    wire tmp49321;
    wire[3:0] tmp49322;
    wire tmp49323;
    wire[3:0] tmp49324;
    wire[3:0] tmp49325;
    wire[3:0] tmp49326;
    wire[3:0] tmp49327;
    wire tmp49328;
    wire[3:0] tmp49329;
    wire[7:0] tmp49330;
    wire[7:0] tmp49331;
    wire[6:0] tmp49332;
    wire[7:0] tmp49333;
    wire[6:0] tmp49334;
    wire[7:0] tmp49335;
    wire[7:0] tmp49336;
    wire tmp49337;
    wire[7:0] tmp49338;
    wire[1:0] tmp49339;
    wire[1:0] tmp49340;
    wire[5:0] tmp49341;
    wire[7:0] tmp49342;
    wire[5:0] tmp49343;
    wire[7:0] tmp49344;
    wire[7:0] tmp49345;
    wire tmp49346;
    wire[7:0] tmp49347;
    wire[3:0] tmp49348;
    wire[3:0] tmp49349;
    wire[3:0] tmp49350;
    wire[7:0] tmp49351;
    wire[3:0] tmp49352;
    wire[7:0] tmp49353;
    wire[7:0] tmp49354;
    wire tmp49355;
    wire[7:0] tmp49356;
    wire[7:0] tmp49357;
    wire[7:0] tmp49358;
    wire tmp49359;
    wire[7:0] tmp49360;
    wire[3:0] tmp49361;
    wire[3:0] tmp49362;
    wire tmp49363;
    wire tmp49364;
    wire tmp49365;
    wire tmp49366;
    wire tmp49367;
    wire[1:0] tmp49368;
    wire tmp49369;
    wire tmp49370;
    wire tmp49371;
    wire tmp49372;
    wire tmp49373;
    wire[5:0] tmp49374;
    wire tmp49375;
    wire[4:0] tmp49376;
    wire[4:0] tmp49377;
    wire[3:0] tmp49378;
    wire[2:0] tmp49379;
    wire[3:0] tmp49380;
    wire[4:0] tmp49381;
    wire tmp49382;
    wire[3:0] tmp49383;
    wire[4:0] tmp49384;
    wire[4:0] tmp49385;
    wire[4:0] tmp49386;
    wire tmp49387;
    wire tmp49388;
    wire tmp49389;
    wire tmp49390;
    wire tmp49391;
    wire[4:0] tmp49392;
    wire tmp49393;
    wire tmp49394;
    wire tmp49395;
    wire tmp49396;
    wire tmp49397;
    wire tmp49398;
    wire tmp49399;
    wire tmp49400;
    wire tmp49401;
    wire tmp49402;
    wire tmp49403;
    wire tmp49404;
    wire tmp49405;
    wire tmp49406;
    wire tmp49407;
    wire tmp49408;
    wire tmp49409;
    wire tmp49410;
    wire tmp49411;
    wire tmp49412;
    wire tmp49413;
    wire tmp49414;
    wire tmp49415;
    wire tmp49416;
    wire tmp49417;
    wire[5:0] tmp49418;
    wire tmp49419;
    wire[5:0] tmp49420;
    wire[5:0] tmp49421;
    wire tmp49422;
    wire tmp49423;
    wire[4:0] tmp49424;
    wire[5:0] tmp49425;
    wire[4:0] tmp49426;
    wire[5:0] tmp49427;
    wire[6:0] tmp49428;
    wire tmp49429;
    wire[6:0] tmp49430;
    wire[6:0] tmp49431;
    wire[4:0] tmp49432;
    wire tmp49435;
    wire[3:0] tmp49436;
    wire[3:0] tmp49437;
    wire[1:0] tmp49438;
    wire[1:0] tmp49439;
    wire[1:0] tmp49440;
    wire tmp49441;
    wire[1:0] tmp49442;
    wire tmp49443;
    wire tmp49444;
    wire[1:0] tmp49445;
    wire tmp49446;
    wire tmp49447;
    wire tmp49448;
    wire tmp49449;
    wire tmp49450;
    wire tmp49451;
    wire tmp49452;
    wire[1:0] tmp49453;
    wire[1:0] tmp49454;
    wire[1:0] tmp49455;
    wire[1:0] tmp49456;
    wire[1:0] tmp49457;
    wire tmp49458;
    wire[1:0] tmp49459;
    wire tmp49460;
    wire tmp49461;
    wire[1:0] tmp49462;
    wire tmp49463;
    wire tmp49464;
    wire tmp49465;
    wire tmp49466;
    wire tmp49467;
    wire tmp49468;
    wire tmp49469;
    wire[1:0] tmp49470;
    wire[1:0] tmp49471;
    wire[1:0] tmp49472;
    wire[1:0] tmp49473;
    wire[3:0] tmp49474;
    wire[2:0] tmp49475;
    wire tmp49476;
    wire tmp49477;
    wire tmp49478;
    wire tmp49479;
    wire[2:0] tmp49480;
    wire tmp49481;
    wire tmp49482;
    wire[2:0] tmp49483;
    wire tmp49484;
    wire tmp49485;
    wire tmp49486;
    wire[1:0] tmp49487;
    wire[2:0] tmp49488;
    wire[2:0] tmp49489;
    wire[2:0] tmp49490;
    wire[2:0] tmp49491;
    wire tmp49492;
    wire[3:0] tmp49493;
    wire[2:0] tmp49494;
    wire[3:0] tmp49495;
    wire[4:0] tmp49496;
    wire[3:0] tmp49497;
    wire[4:0] tmp49498;
    wire[4:0] tmp49499;
    wire[3:0] tmp49500;
    wire[4:0] tmp49501;
    wire tmp49502;
    wire[4:0] tmp49503;
    wire[3:0] tmp49504;
    wire[4:0] tmp49505;
    wire[3:0] tmp49506;
    wire[4:0] tmp49507;
    wire[4:0] tmp49508;
    wire tmp49509;
    wire[4:0] tmp49510;
    wire[1:0] tmp49511;
    wire[1:0] tmp49512;
    wire[2:0] tmp49513;
    wire[4:0] tmp49514;
    wire[2:0] tmp49515;
    wire[4:0] tmp49516;
    wire[4:0] tmp49517;
    wire tmp49518;
    wire[4:0] tmp49519;
    wire[3:0] tmp49520;
    wire[3:0] tmp49521;
    wire tmp49522;
    wire[4:0] tmp49523;
    wire tmp49524;
    wire[4:0] tmp49525;
    wire[4:0] tmp49526;
    wire tmp49527;
    wire[4:0] tmp49528;
    wire[7:0] tmp49529;
    wire[4:0] tmp49530;
    wire tmp49531;
    wire[4:0] tmp49532;
    wire tmp49533;
    wire[4:0] tmp49534;
    wire tmp49535;
    wire tmp49536;
    wire tmp49537;
    wire tmp49538;
    wire tmp49539;
    wire tmp49540;
    wire tmp49541;
    wire tmp49542;
    wire tmp49543;
    wire tmp49544;
    wire[4:0] tmp49545;
    wire[3:0] tmp49546;
    wire[4:0] tmp49547;
    wire[5:0] tmp49548;
    wire[4:0] tmp49549;
    wire tmp49550;
    wire tmp49551;
    wire[2:0] tmp49552;
    wire[2:0] tmp49553;
    wire[2:0] tmp49554;
    wire[2:0] tmp49555;
    wire[3:0] tmp49556;
    wire[4:0] tmp49557;
    wire[3:0] tmp49558;
    wire[3:0] tmp49559;
    wire[2:0] tmp49560;
    wire[3:0] tmp49561;
    wire[4:0] tmp49562;
    wire[3:0] tmp49563;
    wire tmp49564;
    wire tmp49565;
    wire tmp49566;
    wire[3:0] tmp49567;
    wire[2:0] tmp49568;
    wire[3:0] tmp49569;
    wire tmp49570;
    wire tmp49571;
    wire tmp49572;
    wire tmp49573;
    wire tmp49574;
    wire tmp49575;
    wire tmp49576;
    wire tmp49577;
    wire tmp49578;
    wire tmp49579;
    wire tmp49580;
    wire tmp49581;
    wire tmp49582;
    wire tmp49583;
    wire tmp49584;
    wire tmp49585;
    wire tmp49586;
    wire tmp49587;
    wire[7:0] tmp49588;
    wire tmp49589;
    wire[6:0] tmp49590;
    wire[7:0] tmp49591;
    wire[7:0] tmp49592;
    wire[7:0] tmp49593;
    wire[7:0] tmp49594;
    wire[7:0] tmp49595;
    wire[7:0] tmp49596;

    // Combinational
    assign const_6938_73 = 73;
    assign const_6939_127 = 127;
    assign const_6940_127 = 127;
    assign const_6941_0 = 0;
    assign const_6942_0 = 0;
    assign const_6943_0 = 0;
    assign const_6944_0 = 0;
    assign const_6945_1 = 1;
    assign const_6946_1 = 1;
    assign const_6947_1 = 1;
    assign const_6948_0 = 0;
    assign const_6949_0 = 0;
    assign const_6950_0 = 0;
    assign const_6951_0 = 0;
    assign const_6952_1 = 1;
    assign const_6953_0 = 0;
    assign const_6954_0 = 0;
    assign const_6955_8 = 8;
    assign const_6956_8 = 8;
    assign const_6957_0 = 0;
    assign const_6958_0 = 0;
    assign const_6959_0 = 0;
    assign const_6960_0 = 0;
    assign const_6961_1 = 1;
    assign const_6962_0 = 0;
    assign const_6963_0 = 0;
    assign const_6964_0 = 0;
    assign const_6965_0 = 0;
    assign const_6966_0 = 0;
    assign const_6967_1 = 1;
    assign const_6968_0 = 0;
    assign const_6969_0 = 0;
    assign const_6970_0 = 0;
    assign const_6971_0 = 0;
    assign const_6972_2 = 2;
    assign const_6973_1 = 1;
    assign const_6974_0 = 0;
    assign const_6975_1 = 1;
    assign const_6976_0 = 0;
    assign const_6977_0 = 0;
    assign const_6978_0 = 0;
    assign const_6979_0 = 0;
    assign const_6980_0 = 0;
    assign const_6981_2 = 2;
    assign const_6982_1 = 1;
    assign const_6983_0 = 0;
    assign const_6984_1 = 1;
    assign const_6985_0 = 0;
    assign const_6986_0 = 0;
    assign const_6987_0 = 0;
    assign const_6988_4 = 4;
    assign const_6989_1 = 1;
    assign const_6990_0 = 0;
    assign const_6991_0 = 0;
    assign const_6992_0 = 0;
    assign const_6993_0 = 0;
    assign const_6994_1 = 1;
    assign const_6995_0 = 0;
    assign const_6996_0 = 0;
    assign const_6997_0 = 0;
    assign const_6998_0 = 0;
    assign const_6999_0 = 0;
    assign const_7000_1 = 1;
    assign const_7001_0 = 0;
    assign const_7002_0 = 0;
    assign const_7003_0 = 0;
    assign const_7004_0 = 0;
    assign const_7005_0 = 0;
    assign const_7006_0 = 0;
    assign const_7007_0 = 0;
    assign const_7008_0 = 0;
    assign out49147 = tmp49147;
    assign out49148 = tmp49148;
    assign out49149 = tmp49149;
    assign tmp49141 = data_in;
    assign tmp49142 = weight_in;
    assign tmp49143 = accum_in;
    assign tmp49144 = weight_en;
    assign tmp49145 = data_en;
    assign tmp49146 = adder_en;
    assign tmp49155 = {tmp49150[7]};
    assign tmp49156 = {tmp49151[7]};
    assign tmp49157 = {tmp49150[6], tmp49150[5], tmp49150[4], tmp49150[3], tmp49150[2], tmp49150[1], tmp49150[0]};
    assign tmp49158 = {tmp49151[6], tmp49151[5], tmp49151[4], tmp49151[3], tmp49151[2], tmp49151[1], tmp49151[0]};
    assign tmp49159 = tmp49155 ^ tmp49156;
    assign tmp49160 = tmp49157 ^ tmp49158;
    assign tmp49161 = tmp49160 ^ const_6938_73;
    assign tmp49162 = tmp49157 | tmp49158;
    assign tmp49163 = tmp49157 | const_6938_73;
    assign tmp49164 = tmp49162 & tmp49163;
    assign tmp49165 = tmp49158 | const_6938_73;
    assign tmp49166 = tmp49164 & tmp49165;
    assign tmp49167 = {tmp49161[6], tmp49161[5], tmp49161[4], tmp49161[3], tmp49161[2], tmp49161[1]};
    assign tmp49168 = {const_6941_0};
    assign tmp49169 = {tmp49168, tmp49167};
    assign tmp49170 = tmp49169 ^ tmp49166;
    assign tmp49171 = {tmp49170[0]};
    assign tmp49172 = {tmp49170[1]};
    assign tmp49173 = {tmp49170[2]};
    assign tmp49174 = {tmp49170[3]};
    assign tmp49175 = {tmp49170[4]};
    assign tmp49176 = {tmp49170[5]};
    assign tmp49177 = {tmp49170[6]};
    assign tmp49178 = tmp49169 & tmp49166;
    assign tmp49179 = {tmp49178[0]};
    assign tmp49180 = {tmp49178[1]};
    assign tmp49181 = {tmp49178[2]};
    assign tmp49182 = {tmp49178[3]};
    assign tmp49183 = {tmp49178[4]};
    assign tmp49184 = {tmp49178[5]};
    assign tmp49185 = {tmp49178[6]};
    assign tmp49186 = tmp49177 & tmp49184;
    assign tmp49187 = tmp49185 | tmp49186;
    assign tmp49188 = tmp49177 & tmp49176;
    assign tmp49189 = tmp49176 & tmp49183;
    assign tmp49190 = tmp49184 | tmp49189;
    assign tmp49191 = tmp49176 & tmp49175;
    assign tmp49192 = tmp49175 & tmp49182;
    assign tmp49193 = tmp49183 | tmp49192;
    assign tmp49194 = tmp49175 & tmp49174;
    assign tmp49195 = tmp49174 & tmp49181;
    assign tmp49196 = tmp49182 | tmp49195;
    assign tmp49197 = tmp49174 & tmp49173;
    assign tmp49198 = tmp49173 & tmp49180;
    assign tmp49199 = tmp49181 | tmp49198;
    assign tmp49200 = tmp49173 & tmp49172;
    assign tmp49201 = tmp49172 & tmp49179;
    assign tmp49202 = tmp49180 | tmp49201;
    assign tmp49203 = tmp49188 & tmp49193;
    assign tmp49204 = tmp49187 | tmp49203;
    assign tmp49205 = tmp49188 & tmp49194;
    assign tmp49206 = tmp49191 & tmp49196;
    assign tmp49207 = tmp49190 | tmp49206;
    assign tmp49208 = tmp49191 & tmp49197;
    assign tmp49209 = tmp49194 & tmp49199;
    assign tmp49210 = tmp49193 | tmp49209;
    assign tmp49211 = tmp49194 & tmp49200;
    assign tmp49212 = tmp49197 & tmp49202;
    assign tmp49213 = tmp49196 | tmp49212;
    assign tmp49214 = tmp49200 & tmp49179;
    assign tmp49215 = tmp49199 | tmp49214;
    assign tmp49216 = tmp49205 & tmp49215;
    assign tmp49217 = tmp49204 | tmp49216;
    assign tmp49218 = tmp49208 & tmp49202;
    assign tmp49219 = tmp49207 | tmp49218;
    assign tmp49220 = tmp49211 & tmp49179;
    assign tmp49221 = tmp49210 | tmp49220;
    assign tmp49222 = {tmp49217, tmp49219, tmp49221, tmp49213, tmp49215, tmp49202, tmp49179, const_6942_0};
    assign tmp49223 = {const_6943_0};
    assign tmp49224 = {tmp49223, tmp49170};
    assign tmp49225 = tmp49222 ^ tmp49224;
    assign tmp49226 = {tmp49161[0]};
    assign tmp49227 = {tmp49225, tmp49226};
    assign tmp49228 = {tmp49153[8], tmp49153[7]};
    assign tmp49229 = {tmp49153[6], tmp49153[5], tmp49153[4], tmp49153[3], tmp49153[2], tmp49153[1], tmp49153[0]};
    assign tmp49230 = {tmp49228[1]};
    assign tmp49231 = {tmp49228[0]};
    assign tmp49232 = tmp49231 ? tmp49229 : const_6944_0;
    assign tmp49233 = {tmp49228[0]};
    assign tmp49234 = tmp49233 ? const_6940_127 : const_6940_127;
    assign tmp49235 = tmp49230 ? tmp49234 : tmp49232;
    assign tmp49236 = {tmp49152, tmp49235};
    assign tmp49237 = mul_en;
    assign tmp49239 = tmp49237 ? tmp49154 : tmp49238;
    assign tmp49241 = tmp49593;
    assign tmp49242 = tmp49244;
    assign tmp49243 = tmp49245;
    assign tmp49244 = {tmp49238[7]};
    assign tmp49245 = {tmp49143[7]};
    assign tmp49246 = tmp49248;
    assign tmp49247 = tmp49249;
    assign tmp49248 = {tmp49238[6], tmp49238[5], tmp49238[4], tmp49238[3]};
    assign tmp49249 = {tmp49143[6], tmp49143[5], tmp49143[4], tmp49143[3]};
    assign tmp49250 = tmp49253;
    assign tmp49251 = tmp49255;
    assign tmp49252 = {tmp49238[2], tmp49238[1], tmp49238[0]};
    assign tmp49253 = {const_6945_1, tmp49252};
    assign tmp49254 = {tmp49143[2], tmp49143[1], tmp49143[0]};
    assign tmp49255 = {const_6946_1, tmp49254};
    assign tmp49256 = tmp49262;
    assign tmp49257 = tmp49304;
    assign tmp49258 = tmp49320;
    assign tmp49259 = tmp49308;
    assign tmp49260 = tmp49322;
    assign tmp49261 = tmp49324;
    assign tmp49262 = float_adder_pipereg_0to1_sign_a_438 ^ float_adder_pipereg_0to1_sign_b_439;
    assign tmp49263 = ~float_adder_pipereg_0to1_exp_b_441;
    assign tmp49264 = {const_6948_0, const_6948_0, const_6948_0};
    assign tmp49265 = {tmp49264, const_6947_1};
    assign tmp49266 = float_adder_pipereg_0to1_exp_a_440 ^ tmp49263;
    assign tmp49267 = tmp49266 ^ tmp49265;
    assign tmp49268 = float_adder_pipereg_0to1_exp_a_440 | tmp49263;
    assign tmp49269 = float_adder_pipereg_0to1_exp_a_440 | tmp49265;
    assign tmp49270 = tmp49268 & tmp49269;
    assign tmp49271 = tmp49263 | tmp49265;
    assign tmp49272 = tmp49270 & tmp49271;
    assign tmp49273 = {tmp49267[3], tmp49267[2], tmp49267[1]};
    assign tmp49274 = {const_6949_0};
    assign tmp49275 = {tmp49274, tmp49273};
    assign tmp49276 = tmp49275 ^ tmp49272;
    assign tmp49277 = {tmp49276[0]};
    assign tmp49278 = {tmp49276[1]};
    assign tmp49279 = {tmp49276[2]};
    assign tmp49280 = {tmp49276[3]};
    assign tmp49281 = tmp49275 & tmp49272;
    assign tmp49282 = {tmp49281[0]};
    assign tmp49283 = {tmp49281[1]};
    assign tmp49284 = {tmp49281[2]};
    assign tmp49285 = {tmp49281[3]};
    assign tmp49286 = tmp49280 & tmp49284;
    assign tmp49287 = tmp49285 | tmp49286;
    assign tmp49288 = tmp49280 & tmp49279;
    assign tmp49289 = tmp49279 & tmp49283;
    assign tmp49290 = tmp49284 | tmp49289;
    assign tmp49291 = tmp49279 & tmp49278;
    assign tmp49292 = tmp49278 & tmp49282;
    assign tmp49293 = tmp49283 | tmp49292;
    assign tmp49294 = tmp49288 & tmp49293;
    assign tmp49295 = tmp49287 | tmp49294;
    assign tmp49296 = tmp49291 & tmp49282;
    assign tmp49297 = tmp49290 | tmp49296;
    assign tmp49298 = {tmp49295, tmp49297, tmp49293, tmp49282, const_6950_0};
    assign tmp49299 = {const_6951_0};
    assign tmp49300 = {tmp49299, tmp49276};
    assign tmp49301 = tmp49298 ^ tmp49300;
    assign tmp49302 = {tmp49267[0]};
    assign tmp49303 = {tmp49301, tmp49302};
    assign tmp49304 = {tmp49303[4], tmp49303[3], tmp49303[2], tmp49303[1], tmp49303[0]};
    assign tmp49305 = {tmp49257[4]};
    assign tmp49306 = ~tmp49305;
    assign tmp49307 = {tmp49257[4]};
    assign tmp49308 = tmp49307 ? float_adder_pipereg_0to1_exp_b_441 : float_adder_pipereg_0to1_exp_a_440;
    assign tmp49309 = {tmp49257[3], tmp49257[2], tmp49257[1], tmp49257[0]};
    assign tmp49310 = {tmp49257[4]};
    assign tmp49311 = {tmp49257[3], tmp49257[2], tmp49257[1], tmp49257[0]};
    assign tmp49312 = ~tmp49311;
    assign tmp49313 = {const_6953_0, const_6953_0, const_6953_0};
    assign tmp49314 = {tmp49313, const_6952_1};
    assign tmp49315 = tmp49312 + tmp49314;
    assign tmp49316 = {tmp49315[3], tmp49315[2], tmp49315[1], tmp49315[0]};
    assign tmp49317 = {tmp49310, tmp49316};
    assign tmp49318 = {const_6954_0};
    assign tmp49319 = {tmp49318, tmp49309};
    assign tmp49320 = tmp49306 ? tmp49317 : tmp49319;
    assign tmp49321 = {tmp49257[4]};
    assign tmp49322 = tmp49321 ? float_adder_pipereg_0to1_mant_a_442 : float_adder_pipereg_0to1_mant_b_443;
    assign tmp49323 = {tmp49257[4]};
    assign tmp49324 = tmp49323 ? float_adder_pipereg_0to1_mant_b_443 : float_adder_pipereg_0to1_mant_a_442;
    assign tmp49325 = tmp49326;
    assign tmp49326 = {float_adder_pipereg_1to2_signed_shift_449[3], float_adder_pipereg_1to2_signed_shift_449[2], float_adder_pipereg_1to2_signed_shift_449[1], float_adder_pipereg_1to2_signed_shift_449[0]};
    assign tmp49327 = tmp49329;
    assign tmp49328 = tmp49325 > const_6955_8;
    assign tmp49329 = tmp49328 ? const_6956_8 : tmp49325;
    assign tmp49330 = {float_adder_pipereg_1to2_mant_smaller_450, const_6957_0};
    assign tmp49331 = tmp49360;
    assign tmp49332 = {tmp49330[6], tmp49330[5], tmp49330[4], tmp49330[3], tmp49330[2], tmp49330[1], tmp49330[0]};
    assign tmp49333 = {tmp49332, const_6958_0};
    assign tmp49334 = {tmp49330[7], tmp49330[6], tmp49330[5], tmp49330[4], tmp49330[3], tmp49330[2], tmp49330[1]};
    assign tmp49335 = {const_6958_0, tmp49334};
    assign tmp49336 = const_6959_0 ? tmp49333 : tmp49335;
    assign tmp49337 = {tmp49327[0]};
    assign tmp49338 = tmp49337 ? tmp49336 : tmp49330;
    assign tmp49339 = {const_6958_0, const_6958_0};
    assign tmp49340 = {tmp49339[1], tmp49339[0]};
    assign tmp49341 = {tmp49338[5], tmp49338[4], tmp49338[3], tmp49338[2], tmp49338[1], tmp49338[0]};
    assign tmp49342 = {tmp49341, tmp49340};
    assign tmp49343 = {tmp49338[7], tmp49338[6], tmp49338[5], tmp49338[4], tmp49338[3], tmp49338[2]};
    assign tmp49344 = {tmp49340, tmp49343};
    assign tmp49345 = const_6959_0 ? tmp49342 : tmp49344;
    assign tmp49346 = {tmp49327[1]};
    assign tmp49347 = tmp49346 ? tmp49345 : tmp49338;
    assign tmp49348 = {tmp49340, tmp49340};
    assign tmp49349 = {tmp49348[3], tmp49348[2], tmp49348[1], tmp49348[0]};
    assign tmp49350 = {tmp49347[3], tmp49347[2], tmp49347[1], tmp49347[0]};
    assign tmp49351 = {tmp49350, tmp49349};
    assign tmp49352 = {tmp49347[7], tmp49347[6], tmp49347[5], tmp49347[4]};
    assign tmp49353 = {tmp49349, tmp49352};
    assign tmp49354 = const_6959_0 ? tmp49351 : tmp49353;
    assign tmp49355 = {tmp49327[2]};
    assign tmp49356 = tmp49355 ? tmp49354 : tmp49347;
    assign tmp49357 = {tmp49349, tmp49349};
    assign tmp49358 = {tmp49357[7], tmp49357[6], tmp49357[5], tmp49357[4], tmp49357[3], tmp49357[2], tmp49357[1], tmp49357[0]};
    assign tmp49359 = {tmp49327[3]};
    assign tmp49360 = tmp49359 ? tmp49358 : tmp49356;
    assign tmp49361 = {tmp49331[7], tmp49331[6], tmp49331[5], tmp49331[4]};
    assign tmp49362 = {tmp49331[3], tmp49331[2], tmp49331[1], tmp49331[0]};
    assign tmp49363 = tmp49366;
    assign tmp49364 = tmp49367;
    assign tmp49365 = tmp49373;
    assign tmp49366 = {tmp49362[3]};
    assign tmp49367 = {tmp49362[2]};
    assign tmp49368 = {tmp49362[1], tmp49362[0]};
    assign tmp49369 = {tmp49368[0]};
    assign tmp49370 = {tmp49369};
    assign tmp49371 = {tmp49368[1]};
    assign tmp49372 = {tmp49371};
    assign tmp49373 = tmp49370 | tmp49372;
    assign tmp49374 = tmp49421;
    assign tmp49375 = {const_6960_0};
    assign tmp49376 = {tmp49375, float_adder_pipereg_2to3_mant_larger_458};
    assign tmp49377 = tmp49385;
    assign tmp49378 = ~float_adder_pipereg_2to3_aligned_mant_msb_459;
    assign tmp49379 = {const_6962_0, const_6962_0, const_6962_0};
    assign tmp49380 = {tmp49379, const_6961_1};
    assign tmp49381 = tmp49378 + tmp49380;
    assign tmp49382 = {tmp49381[4]};
    assign tmp49383 = {const_6964_0, const_6964_0, const_6964_0, const_6964_0};
    assign tmp49384 = {tmp49383, const_6963_0};
    assign tmp49385 = float_adder_pipereg_2to3_sign_xor_455 ? tmp49381 : tmp49384;
    assign tmp49386 = tmp49376 ^ tmp49377;
    assign tmp49387 = {tmp49386[0]};
    assign tmp49388 = {tmp49386[1]};
    assign tmp49389 = {tmp49386[2]};
    assign tmp49390 = {tmp49386[3]};
    assign tmp49391 = {tmp49386[4]};
    assign tmp49392 = tmp49376 & tmp49377;
    assign tmp49393 = {tmp49392[0]};
    assign tmp49394 = {tmp49392[1]};
    assign tmp49395 = {tmp49392[2]};
    assign tmp49396 = {tmp49392[3]};
    assign tmp49397 = {tmp49392[4]};
    assign tmp49398 = tmp49391 & tmp49396;
    assign tmp49399 = tmp49397 | tmp49398;
    assign tmp49400 = tmp49391 & tmp49390;
    assign tmp49401 = tmp49390 & tmp49395;
    assign tmp49402 = tmp49396 | tmp49401;
    assign tmp49403 = tmp49390 & tmp49389;
    assign tmp49404 = tmp49389 & tmp49394;
    assign tmp49405 = tmp49395 | tmp49404;
    assign tmp49406 = tmp49389 & tmp49388;
    assign tmp49407 = tmp49388 & tmp49393;
    assign tmp49408 = tmp49394 | tmp49407;
    assign tmp49409 = tmp49400 & tmp49405;
    assign tmp49410 = tmp49399 | tmp49409;
    assign tmp49411 = tmp49400 & tmp49406;
    assign tmp49412 = tmp49403 & tmp49408;
    assign tmp49413 = tmp49402 | tmp49412;
    assign tmp49414 = tmp49406 & tmp49393;
    assign tmp49415 = tmp49405 | tmp49414;
    assign tmp49416 = tmp49411 & tmp49393;
    assign tmp49417 = tmp49410 | tmp49416;
    assign tmp49418 = {tmp49417, tmp49413, tmp49415, tmp49408, tmp49393, const_6965_0};
    assign tmp49419 = {const_6966_0};
    assign tmp49420 = {tmp49419, tmp49386};
    assign tmp49421 = tmp49418 ^ tmp49420;
    assign tmp49422 = tmp49423;
    assign tmp49423 = {tmp49374[5]};
    assign tmp49424 = tmp49432;
    assign tmp49425 = ~tmp49374;
    assign tmp49426 = {const_6968_0, const_6968_0, const_6968_0, const_6968_0, const_6968_0};
    assign tmp49427 = {tmp49426, const_6967_1};
    assign tmp49428 = tmp49425 + tmp49427;
    assign tmp49429 = {const_6969_0};
    assign tmp49430 = {tmp49429, tmp49374};
    assign tmp49431 = tmp49422 ? tmp49428 : tmp49430;
    assign tmp49432 = {tmp49431[4], tmp49431[3], tmp49431[2], tmp49431[1], tmp49431[0]};
    assign tmp49435 = {tmp49433[4]};
    assign tmp49436 = tmp49500;
    assign tmp49437 = {tmp49433[3], tmp49433[2], tmp49433[1], tmp49433[0]};
    assign tmp49438 = {tmp49437[3], tmp49437[2]};
    assign tmp49439 = {tmp49437[1], tmp49437[0]};
    assign tmp49440 = tmp49456;
    assign tmp49441 = {const_6971_0};
    assign tmp49442 = {tmp49441, const_6970_0};
    assign tmp49443 = tmp49438 == tmp49442;
    assign tmp49444 = {const_6974_0};
    assign tmp49445 = {tmp49444, const_6973_1};
    assign tmp49446 = tmp49438 == tmp49445;
    assign tmp49447 = ~tmp49443;
    assign tmp49448 = tmp49447 & tmp49446;
    assign tmp49449 = ~tmp49443;
    assign tmp49450 = ~tmp49446;
    assign tmp49451 = tmp49449 & tmp49450;
    assign tmp49452 = {const_6978_0};
    assign tmp49453 = {tmp49452, const_6977_0};
    assign tmp49454 = tmp49443 ? const_6972_2 : tmp49453;
    assign tmp49455 = tmp49448 ? const_6975_1 : tmp49454;
    assign tmp49456 = tmp49451 ? const_6976_0 : tmp49455;
    assign tmp49457 = tmp49473;
    assign tmp49458 = {const_6980_0};
    assign tmp49459 = {tmp49458, const_6979_0};
    assign tmp49460 = tmp49439 == tmp49459;
    assign tmp49461 = {const_6983_0};
    assign tmp49462 = {tmp49461, const_6982_1};
    assign tmp49463 = tmp49439 == tmp49462;
    assign tmp49464 = ~tmp49460;
    assign tmp49465 = tmp49464 & tmp49463;
    assign tmp49466 = ~tmp49460;
    assign tmp49467 = ~tmp49463;
    assign tmp49468 = tmp49466 & tmp49467;
    assign tmp49469 = {const_6987_0};
    assign tmp49470 = {tmp49469, const_6986_0};
    assign tmp49471 = tmp49460 ? const_6981_2 : tmp49470;
    assign tmp49472 = tmp49465 ? const_6984_1 : tmp49471;
    assign tmp49473 = tmp49468 ? const_6985_0 : tmp49472;
    assign tmp49474 = tmp49493;
    assign tmp49475 = tmp49491;
    assign tmp49476 = {tmp49440[1]};
    assign tmp49477 = {tmp49457[1]};
    assign tmp49478 = tmp49476 & tmp49477;
    assign tmp49479 = {tmp49457[0]};
    assign tmp49480 = {const_6989_1, tmp49479};
    assign tmp49481 = ~tmp49478;
    assign tmp49482 = tmp49481 & tmp49476;
    assign tmp49483 = {const_6990_0, tmp49440};
    assign tmp49484 = ~tmp49478;
    assign tmp49485 = ~tmp49476;
    assign tmp49486 = tmp49484 & tmp49485;
    assign tmp49487 = {const_6992_0, const_6992_0};
    assign tmp49488 = {tmp49487, const_6991_0};
    assign tmp49489 = tmp49478 ? const_6988_4 : tmp49488;
    assign tmp49490 = tmp49482 ? tmp49480 : tmp49489;
    assign tmp49491 = tmp49486 ? tmp49483 : tmp49490;
    assign tmp49492 = {const_6993_0};
    assign tmp49493 = {tmp49492, tmp49475};
    assign tmp49494 = {const_6995_0, const_6995_0, const_6995_0};
    assign tmp49495 = {tmp49494, const_6994_1};
    assign tmp49496 = tmp49474 + tmp49495;
    assign tmp49497 = {const_6997_0, const_6997_0, const_6997_0, const_6997_0};
    assign tmp49498 = {tmp49497, const_6996_0};
    assign tmp49499 = tmp49435 ? tmp49498 : tmp49496;
    assign tmp49500 = {tmp49499[3], tmp49499[2], tmp49499[1], tmp49499[0]};
    assign tmp49501 = tmp49534;
    assign tmp49502 = {const_6998_0};
    assign tmp49503 = {tmp49502, float_adder_pipereg_3to4_lzc_473};
    assign tmp49504 = {float_adder_pipereg_3to4_mant_sum_471[3], float_adder_pipereg_3to4_mant_sum_471[2], float_adder_pipereg_3to4_mant_sum_471[1], float_adder_pipereg_3to4_mant_sum_471[0]};
    assign tmp49505 = {tmp49504, const_6999_0};
    assign tmp49506 = {float_adder_pipereg_3to4_mant_sum_471[4], float_adder_pipereg_3to4_mant_sum_471[3], float_adder_pipereg_3to4_mant_sum_471[2], float_adder_pipereg_3to4_mant_sum_471[1]};
    assign tmp49507 = {const_6999_0, tmp49506};
    assign tmp49508 = const_7000_1 ? tmp49505 : tmp49507;
    assign tmp49509 = {tmp49503[0]};
    assign tmp49510 = tmp49509 ? tmp49508 : float_adder_pipereg_3to4_mant_sum_471;
    assign tmp49511 = {const_6999_0, const_6999_0};
    assign tmp49512 = {tmp49511[1], tmp49511[0]};
    assign tmp49513 = {tmp49510[2], tmp49510[1], tmp49510[0]};
    assign tmp49514 = {tmp49513, tmp49512};
    assign tmp49515 = {tmp49510[4], tmp49510[3], tmp49510[2]};
    assign tmp49516 = {tmp49512, tmp49515};
    assign tmp49517 = const_7000_1 ? tmp49514 : tmp49516;
    assign tmp49518 = {tmp49503[1]};
    assign tmp49519 = tmp49518 ? tmp49517 : tmp49510;
    assign tmp49520 = {tmp49512, tmp49512};
    assign tmp49521 = {tmp49520[3], tmp49520[2], tmp49520[1], tmp49520[0]};
    assign tmp49522 = {tmp49519[0]};
    assign tmp49523 = {tmp49522, tmp49521};
    assign tmp49524 = {tmp49519[4]};
    assign tmp49525 = {tmp49521, tmp49524};
    assign tmp49526 = const_7000_1 ? tmp49523 : tmp49525;
    assign tmp49527 = {tmp49503[2]};
    assign tmp49528 = tmp49527 ? tmp49526 : tmp49519;
    assign tmp49529 = {tmp49521, tmp49521};
    assign tmp49530 = {tmp49529[4], tmp49529[3], tmp49529[2], tmp49529[1], tmp49529[0]};
    assign tmp49531 = {tmp49503[3]};
    assign tmp49532 = tmp49531 ? tmp49530 : tmp49528;
    assign tmp49533 = {tmp49503[4]};
    assign tmp49534 = tmp49533 ? tmp49530 : tmp49532;
    assign tmp49535 = tmp49544;
    assign tmp49536 = {tmp49501[1]};
    assign tmp49537 = float_adder_pipereg_3to4_round_470 | float_adder_pipereg_3to4_sticky_468;
    assign tmp49538 = float_adder_pipereg_3to4_guard_469 & tmp49537;
    assign tmp49539 = ~float_adder_pipereg_3to4_round_470;
    assign tmp49540 = float_adder_pipereg_3to4_guard_469 & tmp49539;
    assign tmp49541 = ~float_adder_pipereg_3to4_sticky_468;
    assign tmp49542 = tmp49540 & tmp49541;
    assign tmp49543 = tmp49542 & tmp49536;
    assign tmp49544 = tmp49538 | tmp49543;
    assign tmp49545 = tmp49549;
    assign tmp49546 = {const_7001_0, const_7001_0, const_7001_0, const_7001_0};
    assign tmp49547 = {tmp49546, tmp49535};
    assign tmp49548 = tmp49501 + tmp49547;
    assign tmp49549 = {tmp49548[4], tmp49548[3], tmp49548[2], tmp49548[1], tmp49548[0]};
    assign tmp49550 = tmp49551;
    assign tmp49551 = {tmp49545[4]};
    assign tmp49552 = tmp49555;
    assign tmp49553 = {tmp49545[3], tmp49545[2], tmp49545[1]};
    assign tmp49554 = {tmp49545[2], tmp49545[1], tmp49545[0]};
    assign tmp49555 = tmp49550 ? tmp49553 : tmp49554;
    assign tmp49556 = tmp49558;
    assign tmp49557 = float_adder_pipereg_3to4_exp_larger_466 - float_adder_pipereg_3to4_lzc_473;
    assign tmp49558 = {tmp49557[3], tmp49557[2], tmp49557[1], tmp49557[0]};
    assign tmp49559 = tmp49563;
    assign tmp49560 = {const_7002_0, const_7002_0, const_7002_0};
    assign tmp49561 = {tmp49560, tmp49550};
    assign tmp49562 = tmp49556 + tmp49561;
    assign tmp49563 = {tmp49562[3], tmp49562[2], tmp49562[1], tmp49562[0]};
    assign tmp49564 = tmp49587;
    assign tmp49565 = float_adder_pipereg_3to4_sign_a_464 ^ float_adder_pipereg_3to4_sign_b_465;
    assign tmp49566 = ~tmp49565;
    assign tmp49567 = {float_adder_pipereg_3to4_signed_shift_467[3], float_adder_pipereg_3to4_signed_shift_467[2], float_adder_pipereg_3to4_signed_shift_467[1], float_adder_pipereg_3to4_signed_shift_467[0]};
    assign tmp49568 = {const_7004_0, const_7004_0, const_7004_0};
    assign tmp49569 = {tmp49568, const_7003_0};
    assign tmp49570 = tmp49567 == tmp49569;
    assign tmp49571 = float_adder_pipereg_3to4_is_neg_472 ^ float_adder_pipereg_3to4_sign_a_464;
    assign tmp49572 = ~tmp49566;
    assign tmp49573 = tmp49572 & tmp49570;
    assign tmp49574 = {float_adder_pipereg_3to4_signed_shift_467[4]};
    assign tmp49575 = ~tmp49566;
    assign tmp49576 = ~tmp49570;
    assign tmp49577 = tmp49575 & tmp49576;
    assign tmp49578 = tmp49577 & tmp49574;
    assign tmp49579 = ~tmp49566;
    assign tmp49580 = ~tmp49570;
    assign tmp49581 = tmp49579 & tmp49580;
    assign tmp49582 = ~tmp49574;
    assign tmp49583 = tmp49581 & tmp49582;
    assign tmp49584 = tmp49566 ? float_adder_pipereg_3to4_sign_a_464 : const_7005_0;
    assign tmp49585 = tmp49573 ? tmp49571 : tmp49584;
    assign tmp49586 = tmp49578 ? float_adder_pipereg_3to4_sign_b_465 : tmp49585;
    assign tmp49587 = tmp49583 ? float_adder_pipereg_3to4_sign_a_464 : tmp49586;
    assign tmp49588 = {tmp49564, tmp49559, tmp49552};
    assign tmp49589 = ~float_adder_pipereg_3to4_w_en_463;
    assign tmp49590 = {const_7008_0, const_7008_0, const_7008_0, const_7008_0, const_7008_0, const_7008_0, const_7008_0};
    assign tmp49591 = {tmp49590, const_7007_0};
    assign tmp49592 = float_adder_pipereg_3to4_w_en_463 ? tmp49588 : tmp49591;
    assign tmp49593 = tmp49589 ? const_7006_0 : tmp49592;
    assign tmp49594 = tmp49145 ? tmp49141 : tmp49147;
    assign tmp49595 = tmp49144 ? tmp49142 : tmp49148;
    assign tmp49596 = tmp49146 ? tmp49241 : tmp49149;

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            float_adder_pipereg_0to1_exp_a_440 <= 0;
            float_adder_pipereg_0to1_exp_b_441 <= 0;
            float_adder_pipereg_0to1_mant_a_442 <= 0;
            float_adder_pipereg_0to1_mant_b_443 <= 0;
            float_adder_pipereg_0to1_sign_a_438 <= 0;
            float_adder_pipereg_0to1_sign_b_439 <= 0;
            float_adder_pipereg_0to1_w_en_437 <= 0;
            float_adder_pipereg_1to2_exp_larger_448 <= 0;
            float_adder_pipereg_1to2_mant_larger_451 <= 0;
            float_adder_pipereg_1to2_mant_smaller_450 <= 0;
            float_adder_pipereg_1to2_sign_a_445 <= 0;
            float_adder_pipereg_1to2_sign_b_446 <= 0;
            float_adder_pipereg_1to2_sign_xor_447 <= 0;
            float_adder_pipereg_1to2_signed_shift_449 <= 0;
            float_adder_pipereg_1to2_w_en_444 <= 0;
            float_adder_pipereg_2to3_aligned_mant_msb_459 <= 0;
            float_adder_pipereg_2to3_exp_larger_456 <= 0;
            float_adder_pipereg_2to3_guard_461 <= 0;
            float_adder_pipereg_2to3_mant_larger_458 <= 0;
            float_adder_pipereg_2to3_round_462 <= 0;
            float_adder_pipereg_2to3_sign_a_453 <= 0;
            float_adder_pipereg_2to3_sign_b_454 <= 0;
            float_adder_pipereg_2to3_sign_xor_455 <= 0;
            float_adder_pipereg_2to3_signed_shift_457 <= 0;
            float_adder_pipereg_2to3_sticky_460 <= 0;
            float_adder_pipereg_2to3_w_en_452 <= 0;
            float_adder_pipereg_3to4_exp_larger_466 <= 0;
            float_adder_pipereg_3to4_guard_469 <= 0;
            float_adder_pipereg_3to4_is_neg_472 <= 0;
            float_adder_pipereg_3to4_lzc_473 <= 0;
            float_adder_pipereg_3to4_mant_sum_471 <= 0;
            float_adder_pipereg_3to4_round_470 <= 0;
            float_adder_pipereg_3to4_sign_a_464 <= 0;
            float_adder_pipereg_3to4_sign_b_465 <= 0;
            float_adder_pipereg_3to4_signed_shift_467 <= 0;
            float_adder_pipereg_3to4_sticky_468 <= 0;
            float_adder_pipereg_3to4_w_en_463 <= 0;
            tmp49147 <= 0;
            tmp49148 <= 0;
            tmp49149 <= 0;
            tmp49150 <= 0;
            tmp49151 <= 0;
            tmp49152 <= 0;
            tmp49153 <= 0;
            tmp49154 <= 0;
            tmp49238 <= 0;
            tmp49433 <= 0;
            tmp49434 <= 0;
        end
        else begin
            float_adder_pipereg_0to1_exp_a_440 <= tmp49246;
            float_adder_pipereg_0to1_exp_b_441 <= tmp49247;
            float_adder_pipereg_0to1_mant_a_442 <= tmp49250;
            float_adder_pipereg_0to1_mant_b_443 <= tmp49251;
            float_adder_pipereg_0to1_sign_a_438 <= tmp49242;
            float_adder_pipereg_0to1_sign_b_439 <= tmp49243;
            float_adder_pipereg_0to1_w_en_437 <= adder_w_en_in49240;
            float_adder_pipereg_1to2_exp_larger_448 <= tmp49259;
            float_adder_pipereg_1to2_mant_larger_451 <= tmp49261;
            float_adder_pipereg_1to2_mant_smaller_450 <= tmp49260;
            float_adder_pipereg_1to2_sign_a_445 <= float_adder_pipereg_0to1_sign_a_438;
            float_adder_pipereg_1to2_sign_b_446 <= float_adder_pipereg_0to1_sign_b_439;
            float_adder_pipereg_1to2_sign_xor_447 <= tmp49256;
            float_adder_pipereg_1to2_signed_shift_449 <= tmp49258;
            float_adder_pipereg_1to2_w_en_444 <= float_adder_pipereg_0to1_w_en_437;
            float_adder_pipereg_2to3_aligned_mant_msb_459 <= tmp49361;
            float_adder_pipereg_2to3_exp_larger_456 <= float_adder_pipereg_1to2_exp_larger_448;
            float_adder_pipereg_2to3_guard_461 <= tmp49363;
            float_adder_pipereg_2to3_mant_larger_458 <= float_adder_pipereg_1to2_mant_larger_451;
            float_adder_pipereg_2to3_round_462 <= tmp49364;
            float_adder_pipereg_2to3_sign_a_453 <= float_adder_pipereg_1to2_sign_a_445;
            float_adder_pipereg_2to3_sign_b_454 <= float_adder_pipereg_1to2_sign_b_446;
            float_adder_pipereg_2to3_sign_xor_455 <= float_adder_pipereg_1to2_sign_xor_447;
            float_adder_pipereg_2to3_signed_shift_457 <= float_adder_pipereg_1to2_signed_shift_449;
            float_adder_pipereg_2to3_sticky_460 <= tmp49365;
            float_adder_pipereg_2to3_w_en_452 <= float_adder_pipereg_1to2_w_en_444;
            float_adder_pipereg_3to4_exp_larger_466 <= float_adder_pipereg_2to3_exp_larger_456;
            float_adder_pipereg_3to4_guard_469 <= float_adder_pipereg_2to3_guard_461;
            float_adder_pipereg_3to4_is_neg_472 <= tmp49434;
            float_adder_pipereg_3to4_lzc_473 <= tmp49436;
            float_adder_pipereg_3to4_mant_sum_471 <= tmp49433;
            float_adder_pipereg_3to4_round_470 <= float_adder_pipereg_2to3_round_462;
            float_adder_pipereg_3to4_sign_a_464 <= float_adder_pipereg_2to3_sign_a_453;
            float_adder_pipereg_3to4_sign_b_465 <= float_adder_pipereg_2to3_sign_b_454;
            float_adder_pipereg_3to4_signed_shift_467 <= float_adder_pipereg_2to3_signed_shift_457;
            float_adder_pipereg_3to4_sticky_468 <= float_adder_pipereg_2to3_sticky_460;
            float_adder_pipereg_3to4_w_en_463 <= float_adder_pipereg_2to3_w_en_452;
            tmp49147 <= tmp49594;
            tmp49148 <= tmp49595;
            tmp49149 <= tmp49596;
            tmp49150 <= tmp49147;
            tmp49151 <= tmp49148;
            tmp49152 <= tmp49159;
            tmp49153 <= tmp49227;
            tmp49154 <= tmp49236;
            tmp49238 <= tmp49239;
            tmp49433 <= tmp49424;
            tmp49434 <= tmp49422;
        end
    end

endmodule

