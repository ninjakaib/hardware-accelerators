// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, accum_in, adder_en, adder_w_en_in46620, data_en, data_in, mul_en, weight_en, weight_in, out46382, out46383, out46384);
    input clk;
    input rst;
    input[7:0] accum_in;
    input adder_en;
    input adder_w_en_in46620;
    input data_en;
    input[7:0] data_in;
    input mul_en;
    input weight_en;
    input[7:0] weight_in;
    output[7:0] out46382;
    output[7:0] out46383;
    output[7:0] out46384;

    reg[3:0] float_adder_pipereg_0to1_exp_a_316;
    reg[3:0] float_adder_pipereg_0to1_exp_b_317;
    reg[3:0] float_adder_pipereg_0to1_mant_a_318;
    reg[3:0] float_adder_pipereg_0to1_mant_b_319;
    reg float_adder_pipereg_0to1_sign_a_314;
    reg float_adder_pipereg_0to1_sign_b_315;
    reg float_adder_pipereg_0to1_w_en_313;
    reg[3:0] float_adder_pipereg_1to2_exp_larger_324;
    reg[3:0] float_adder_pipereg_1to2_mant_larger_327;
    reg[3:0] float_adder_pipereg_1to2_mant_smaller_326;
    reg float_adder_pipereg_1to2_sign_a_321;
    reg float_adder_pipereg_1to2_sign_b_322;
    reg float_adder_pipereg_1to2_sign_xor_323;
    reg[4:0] float_adder_pipereg_1to2_signed_shift_325;
    reg float_adder_pipereg_1to2_w_en_320;
    reg[3:0] float_adder_pipereg_2to3_aligned_mant_msb_335;
    reg[3:0] float_adder_pipereg_2to3_exp_larger_332;
    reg float_adder_pipereg_2to3_guard_337;
    reg[3:0] float_adder_pipereg_2to3_mant_larger_334;
    reg float_adder_pipereg_2to3_round_338;
    reg float_adder_pipereg_2to3_sign_a_329;
    reg float_adder_pipereg_2to3_sign_b_330;
    reg float_adder_pipereg_2to3_sign_xor_331;
    reg[4:0] float_adder_pipereg_2to3_signed_shift_333;
    reg float_adder_pipereg_2to3_sticky_336;
    reg float_adder_pipereg_2to3_w_en_328;
    reg[3:0] float_adder_pipereg_3to4_exp_larger_342;
    reg float_adder_pipereg_3to4_guard_345;
    reg float_adder_pipereg_3to4_is_neg_348;
    reg[3:0] float_adder_pipereg_3to4_lzc_349;
    reg[4:0] float_adder_pipereg_3to4_mant_sum_347;
    reg float_adder_pipereg_3to4_round_346;
    reg float_adder_pipereg_3to4_sign_a_340;
    reg float_adder_pipereg_3to4_sign_b_341;
    reg[4:0] float_adder_pipereg_3to4_signed_shift_343;
    reg float_adder_pipereg_3to4_sticky_344;
    reg float_adder_pipereg_3to4_w_en_339;
    reg[3:0] float_multiplier_pipereg_0to1_exp_a_302;
    reg[3:0] float_multiplier_pipereg_0to1_exp_b_303;
    reg[3:0] float_multiplier_pipereg_0to1_mantissa_a_304;
    reg[3:0] float_multiplier_pipereg_0to1_mantissa_b_305;
    reg float_multiplier_pipereg_0to1_sign_a_300;
    reg float_multiplier_pipereg_0to1_sign_b_301;
    reg[1:0] float_multiplier_pipereg_1to2_exp_sum_307;
    reg[7:0] float_multiplier_pipereg_1to2_mant_product_308;
    reg float_multiplier_pipereg_1to2_sign_out_306;
    reg[3:0] float_multiplier_pipereg_2to3_leading_zeros_311;
    reg[7:0] float_multiplier_pipereg_2to3_mant_product_310;
    reg float_multiplier_pipereg_2to3_sign_out_309;
    reg[3:0] float_multiplier_pipereg_2to3_unbiased_exp_312;
    reg[7:0] tmp46382;
    reg[7:0] tmp46383;
    reg[7:0] tmp46384;
    reg[7:0] tmp46618;

    wire[4:0] _ver_out_tmp_0;
    wire const_6432_1;
    wire const_6433_1;
    wire const_6434_0;
    wire const_6435_0;
    wire[1:0] const_6436_2;
    wire const_6437_1;
    wire const_6438_0;
    wire[1:0] const_6439_1;
    wire[1:0] const_6440_0;
    wire const_6441_0;
    wire const_6442_0;
    wire const_6443_0;
    wire const_6444_0;
    wire[1:0] const_6445_2;
    wire const_6446_1;
    wire const_6447_0;
    wire[1:0] const_6448_1;
    wire[1:0] const_6449_0;
    wire const_6450_0;
    wire const_6451_0;
    wire const_6452_0;
    wire const_6453_0;
    wire[1:0] const_6454_2;
    wire const_6455_1;
    wire const_6456_0;
    wire[1:0] const_6457_1;
    wire[1:0] const_6458_0;
    wire const_6459_0;
    wire const_6460_0;
    wire const_6461_0;
    wire const_6462_0;
    wire[1:0] const_6463_2;
    wire const_6464_1;
    wire const_6465_0;
    wire[1:0] const_6466_1;
    wire[1:0] const_6467_0;
    wire const_6468_0;
    wire const_6469_0;
    wire[2:0] const_6470_4;
    wire[1:0] const_6471_1;
    wire const_6472_0;
    wire const_6473_0;
    wire const_6474_0;
    wire[2:0] const_6475_4;
    wire[1:0] const_6476_1;
    wire const_6477_0;
    wire const_6478_0;
    wire const_6479_0;
    wire[3:0] const_6480_8;
    wire[1:0] const_6481_1;
    wire const_6482_0;
    wire const_6483_0;
    wire const_6484_0;
    wire const_6485_0;
    wire const_6487_0;
    wire const_6488_0;
    wire const_6489_1;
    wire const_6490_0;
    wire const_6491_1;
    wire const_6492_0;
    wire const_6493_0;
    wire const_6494_1;
    wire const_6495_1;
    wire const_6496_1;
    wire const_6497_0;
    wire const_6498_0;
    wire[3:0] const_6499_8;
    wire[3:0] const_6500_8;
    wire[3:0] const_6501_0;
    wire const_6502_0;
    wire const_6503_0;
    wire const_6504_0;
    wire const_6505_0;
    wire const_6506_0;
    wire const_6507_0;
    wire const_6508_0;
    wire const_6509_0;
    wire const_6510_1;
    wire const_6511_0;
    wire const_6512_0;
    wire const_6513_0;
    wire const_6514_0;
    wire[1:0] const_6515_2;
    wire const_6516_1;
    wire const_6517_0;
    wire[1:0] const_6518_1;
    wire[1:0] const_6519_0;
    wire const_6520_0;
    wire const_6521_0;
    wire const_6522_0;
    wire const_6523_0;
    wire[1:0] const_6524_2;
    wire const_6525_1;
    wire const_6526_0;
    wire[1:0] const_6527_1;
    wire[1:0] const_6528_0;
    wire const_6529_0;
    wire const_6530_0;
    wire[2:0] const_6531_4;
    wire[1:0] const_6532_1;
    wire const_6533_0;
    wire const_6534_0;
    wire const_6535_0;
    wire const_6536_0;
    wire const_6537_1;
    wire const_6538_0;
    wire const_6539_0;
    wire const_6540_0;
    wire const_6541_0;
    wire const_6542_0;
    wire const_6543_1;
    wire const_6544_0;
    wire const_6545_0;
    wire const_6546_0;
    wire const_6547_0;
    wire const_6548_0;
    wire[7:0] const_6549_0;
    wire const_6550_0;
    wire const_6551_0;
    wire[7:0] tmp46376;
    wire[7:0] tmp46377;
    wire[7:0] tmp46378;
    wire tmp46379;
    wire tmp46380;
    wire tmp46381;
    wire[7:0] tmp46385;
    wire tmp46386;
    wire tmp46387;
    wire tmp46388;
    wire tmp46389;
    wire[3:0] tmp46390;
    wire[3:0] tmp46391;
    wire[3:0] tmp46392;
    wire[3:0] tmp46393;
    wire[3:0] tmp46394;
    wire[3:0] tmp46395;
    wire[2:0] tmp46396;
    wire[3:0] tmp46397;
    wire[2:0] tmp46398;
    wire[3:0] tmp46399;
    wire tmp46400;
    wire[3:0] tmp46401;
    wire tmp46402;
    wire[1:0] tmp46403;
    wire[7:0] tmp46404;
    wire[1:0] tmp46405;
    wire[7:0] tmp46406;
    wire[3:0] tmp46407;
    wire[1:0] tmp46408;
    wire[1:0] tmp46409;
    wire[1:0] tmp46410;
    wire[1:0] tmp46411;
    wire[1:0] tmp46412;
    wire tmp46413;
    wire[1:0] tmp46414;
    wire tmp46415;
    wire tmp46416;
    wire[1:0] tmp46417;
    wire tmp46418;
    wire tmp46419;
    wire tmp46420;
    wire tmp46421;
    wire tmp46422;
    wire tmp46423;
    wire tmp46424;
    wire[1:0] tmp46425;
    wire[1:0] tmp46426;
    wire[1:0] tmp46427;
    wire[1:0] tmp46428;
    wire[1:0] tmp46429;
    wire tmp46430;
    wire[1:0] tmp46431;
    wire tmp46432;
    wire tmp46433;
    wire[1:0] tmp46434;
    wire tmp46435;
    wire tmp46436;
    wire tmp46437;
    wire tmp46438;
    wire tmp46439;
    wire tmp46440;
    wire tmp46441;
    wire[1:0] tmp46442;
    wire[1:0] tmp46443;
    wire[1:0] tmp46444;
    wire[1:0] tmp46445;
    wire[1:0] tmp46446;
    wire tmp46447;
    wire[1:0] tmp46448;
    wire tmp46449;
    wire tmp46450;
    wire[1:0] tmp46451;
    wire tmp46452;
    wire tmp46453;
    wire tmp46454;
    wire tmp46455;
    wire tmp46456;
    wire tmp46457;
    wire tmp46458;
    wire[1:0] tmp46459;
    wire[1:0] tmp46460;
    wire[1:0] tmp46461;
    wire[1:0] tmp46462;
    wire[1:0] tmp46463;
    wire tmp46464;
    wire[1:0] tmp46465;
    wire tmp46466;
    wire tmp46467;
    wire[1:0] tmp46468;
    wire tmp46469;
    wire tmp46470;
    wire tmp46471;
    wire tmp46472;
    wire tmp46473;
    wire tmp46474;
    wire tmp46475;
    wire[1:0] tmp46476;
    wire[1:0] tmp46477;
    wire[1:0] tmp46478;
    wire[1:0] tmp46479;
    wire[2:0] tmp46480;
    wire tmp46481;
    wire tmp46482;
    wire tmp46483;
    wire tmp46484;
    wire[2:0] tmp46485;
    wire tmp46486;
    wire tmp46487;
    wire[2:0] tmp46488;
    wire tmp46489;
    wire tmp46490;
    wire tmp46491;
    wire[1:0] tmp46492;
    wire[2:0] tmp46493;
    wire[2:0] tmp46494;
    wire[2:0] tmp46495;
    wire[2:0] tmp46496;
    wire[2:0] tmp46497;
    wire tmp46498;
    wire tmp46499;
    wire tmp46500;
    wire tmp46501;
    wire[2:0] tmp46502;
    wire tmp46503;
    wire tmp46504;
    wire[2:0] tmp46505;
    wire tmp46506;
    wire tmp46507;
    wire tmp46508;
    wire[1:0] tmp46509;
    wire[2:0] tmp46510;
    wire[2:0] tmp46511;
    wire[2:0] tmp46512;
    wire[2:0] tmp46513;
    wire[3:0] tmp46514;
    wire tmp46515;
    wire tmp46516;
    wire tmp46517;
    wire[1:0] tmp46518;
    wire[3:0] tmp46519;
    wire tmp46520;
    wire tmp46521;
    wire[3:0] tmp46522;
    wire tmp46523;
    wire tmp46524;
    wire tmp46525;
    wire[2:0] tmp46526;
    wire[3:0] tmp46527;
    wire[3:0] tmp46528;
    wire[3:0] tmp46529;
    wire[3:0] tmp46530;
    wire[7:0] tmp46531;
    wire[3:0] tmp46532;
    wire[7:0] tmp46533;
    wire[3:0] tmp46534;
    wire[3:0] tmp46535;
    wire[2:0] tmp46536;
    wire[4:0] tmp46537;
    wire[5:0] tmp46538;
    wire[3:0] tmp46539;
    wire[7:0] tmp46540;
    wire[6:0] tmp46541;
    wire[7:0] tmp46542;
    wire[6:0] tmp46543;
    wire[7:0] tmp46544;
    wire[7:0] tmp46545;
    wire tmp46546;
    wire[7:0] tmp46547;
    wire[1:0] tmp46548;
    wire[1:0] tmp46549;
    wire[5:0] tmp46550;
    wire[7:0] tmp46551;
    wire[5:0] tmp46552;
    wire[7:0] tmp46553;
    wire[7:0] tmp46554;
    wire tmp46555;
    wire[7:0] tmp46556;
    wire[3:0] tmp46557;
    wire[3:0] tmp46558;
    wire[3:0] tmp46559;
    wire[7:0] tmp46560;
    wire[3:0] tmp46561;
    wire[7:0] tmp46562;
    wire[7:0] tmp46563;
    wire tmp46564;
    wire[7:0] tmp46565;
    wire[7:0] tmp46566;
    wire[7:0] tmp46567;
    wire tmp46568;
    wire[7:0] tmp46569;
    wire[3:0] tmp46570;
    wire[3:0] tmp46571;
    wire[3:0] tmp46572;
    wire[3:0] tmp46573;
    wire tmp46574;
    wire tmp46575;
    wire tmp46576;
    wire tmp46577;
    wire tmp46578;
    wire[1:0] tmp46579;
    wire tmp46580;
    wire tmp46581;
    wire tmp46582;
    wire tmp46583;
    wire tmp46584;
    wire tmp46585;
    wire tmp46586;
    wire tmp46587;
    wire tmp46588;
    wire tmp46589;
    wire tmp46590;
    wire tmp46591;
    wire tmp46592;
    wire tmp46593;
    wire tmp46594;
    wire[4:0] tmp46595;
    wire[2:0] tmp46596;
    wire[3:0] tmp46597;
    wire[4:0] tmp46598;
    wire tmp46599;
    wire tmp46600;
    wire[2:0] tmp46601;
    wire[2:0] tmp46602;
    wire[2:0] tmp46603;
    wire[2:0] tmp46604;
    wire[3:0] tmp46605;
    wire[3:0] tmp46606;
    wire[4:0] tmp46607;
    wire[3:0] tmp46608;
    wire[4:0] tmp46609;
    wire[5:0] tmp46610;
    wire[3:0] tmp46611;
    wire[2:0] tmp46612;
    wire[3:0] tmp46613;
    wire[4:0] tmp46614;
    wire[3:0] tmp46615;
    wire[7:0] tmp46616;
    wire tmp46617;
    wire[7:0] tmp46619;
    wire[7:0] tmp46621;
    wire tmp46622;
    wire tmp46623;
    wire tmp46624;
    wire tmp46625;
    wire[3:0] tmp46626;
    wire[3:0] tmp46627;
    wire[3:0] tmp46628;
    wire[3:0] tmp46629;
    wire[3:0] tmp46630;
    wire[3:0] tmp46631;
    wire[2:0] tmp46632;
    wire[3:0] tmp46633;
    wire[2:0] tmp46634;
    wire[3:0] tmp46635;
    wire tmp46636;
    wire[4:0] tmp46637;
    wire[4:0] tmp46638;
    wire[3:0] tmp46639;
    wire[3:0] tmp46640;
    wire[3:0] tmp46641;
    wire tmp46642;
    wire[4:0] tmp46643;
    wire tmp46644;
    wire tmp46645;
    wire[3:0] tmp46646;
    wire[3:0] tmp46647;
    wire tmp46648;
    wire[3:0] tmp46649;
    wire[3:0] tmp46650;
    wire[2:0] tmp46651;
    wire[3:0] tmp46652;
    wire[4:0] tmp46653;
    wire[3:0] tmp46654;
    wire[4:0] tmp46655;
    wire tmp46656;
    wire[4:0] tmp46657;
    wire[4:0] tmp46658;
    wire tmp46659;
    wire[3:0] tmp46660;
    wire tmp46661;
    wire[3:0] tmp46662;
    wire[3:0] tmp46663;
    wire[3:0] tmp46664;
    wire[3:0] tmp46665;
    wire tmp46666;
    wire[3:0] tmp46667;
    wire[7:0] tmp46668;
    wire[7:0] tmp46669;
    wire[6:0] tmp46670;
    wire[7:0] tmp46671;
    wire[6:0] tmp46672;
    wire[7:0] tmp46673;
    wire[7:0] tmp46674;
    wire tmp46675;
    wire[7:0] tmp46676;
    wire[1:0] tmp46677;
    wire[1:0] tmp46678;
    wire[5:0] tmp46679;
    wire[7:0] tmp46680;
    wire[5:0] tmp46681;
    wire[7:0] tmp46682;
    wire[7:0] tmp46683;
    wire tmp46684;
    wire[7:0] tmp46685;
    wire[3:0] tmp46686;
    wire[3:0] tmp46687;
    wire[3:0] tmp46688;
    wire[7:0] tmp46689;
    wire[3:0] tmp46690;
    wire[7:0] tmp46691;
    wire[7:0] tmp46692;
    wire tmp46693;
    wire[7:0] tmp46694;
    wire[7:0] tmp46695;
    wire[7:0] tmp46696;
    wire tmp46697;
    wire[7:0] tmp46698;
    wire[3:0] tmp46699;
    wire[3:0] tmp46700;
    wire tmp46701;
    wire tmp46702;
    wire tmp46703;
    wire tmp46704;
    wire tmp46705;
    wire[1:0] tmp46706;
    wire tmp46707;
    wire tmp46708;
    wire tmp46709;
    wire tmp46710;
    wire tmp46711;
    wire[5:0] tmp46712;
    wire tmp46713;
    wire[4:0] tmp46714;
    wire tmp46715;
    wire[4:0] tmp46716;
    wire[5:0] tmp46717;
    wire tmp46718;
    wire[4:0] tmp46719;
    wire tmp46720;
    wire[4:0] tmp46721;
    wire[5:0] tmp46722;
    wire tmp46723;
    wire[4:0] tmp46724;
    wire[5:0] tmp46725;
    wire[5:0] tmp46726;
    wire[5:0] tmp46727;
    wire tmp46728;
    wire tmp46729;
    wire[4:0] tmp46730;
    wire[5:0] tmp46731;
    wire[4:0] tmp46732;
    wire[5:0] tmp46733;
    wire[6:0] tmp46734;
    wire tmp46735;
    wire[6:0] tmp46736;
    wire[6:0] tmp46737;
    wire[4:0] tmp46738;
    wire tmp46739;
    wire[3:0] tmp46740;
    wire[3:0] tmp46741;
    wire[1:0] tmp46742;
    wire[1:0] tmp46743;
    wire[1:0] tmp46744;
    wire tmp46745;
    wire[1:0] tmp46746;
    wire tmp46747;
    wire tmp46748;
    wire[1:0] tmp46749;
    wire tmp46750;
    wire tmp46751;
    wire tmp46752;
    wire tmp46753;
    wire tmp46754;
    wire tmp46755;
    wire tmp46756;
    wire[1:0] tmp46757;
    wire[1:0] tmp46758;
    wire[1:0] tmp46759;
    wire[1:0] tmp46760;
    wire[1:0] tmp46761;
    wire tmp46762;
    wire[1:0] tmp46763;
    wire tmp46764;
    wire tmp46765;
    wire[1:0] tmp46766;
    wire tmp46767;
    wire tmp46768;
    wire tmp46769;
    wire tmp46770;
    wire tmp46771;
    wire tmp46772;
    wire tmp46773;
    wire[1:0] tmp46774;
    wire[1:0] tmp46775;
    wire[1:0] tmp46776;
    wire[1:0] tmp46777;
    wire[3:0] tmp46778;
    wire[2:0] tmp46779;
    wire tmp46780;
    wire tmp46781;
    wire tmp46782;
    wire tmp46783;
    wire[2:0] tmp46784;
    wire tmp46785;
    wire tmp46786;
    wire[2:0] tmp46787;
    wire tmp46788;
    wire tmp46789;
    wire tmp46790;
    wire[1:0] tmp46791;
    wire[2:0] tmp46792;
    wire[2:0] tmp46793;
    wire[2:0] tmp46794;
    wire[2:0] tmp46795;
    wire tmp46796;
    wire[3:0] tmp46797;
    wire[2:0] tmp46798;
    wire[3:0] tmp46799;
    wire[4:0] tmp46800;
    wire[3:0] tmp46801;
    wire[4:0] tmp46802;
    wire[4:0] tmp46803;
    wire[3:0] tmp46804;
    wire[4:0] tmp46805;
    wire tmp46806;
    wire[4:0] tmp46807;
    wire[3:0] tmp46808;
    wire[4:0] tmp46809;
    wire[3:0] tmp46810;
    wire[4:0] tmp46811;
    wire[4:0] tmp46812;
    wire tmp46813;
    wire[4:0] tmp46814;
    wire[1:0] tmp46815;
    wire[1:0] tmp46816;
    wire[2:0] tmp46817;
    wire[4:0] tmp46818;
    wire[2:0] tmp46819;
    wire[4:0] tmp46820;
    wire[4:0] tmp46821;
    wire tmp46822;
    wire[4:0] tmp46823;
    wire[3:0] tmp46824;
    wire[3:0] tmp46825;
    wire tmp46826;
    wire[4:0] tmp46827;
    wire tmp46828;
    wire[4:0] tmp46829;
    wire[4:0] tmp46830;
    wire tmp46831;
    wire[4:0] tmp46832;
    wire[7:0] tmp46833;
    wire[4:0] tmp46834;
    wire tmp46835;
    wire[4:0] tmp46836;
    wire tmp46837;
    wire[4:0] tmp46838;
    wire tmp46839;
    wire tmp46840;
    wire tmp46841;
    wire tmp46842;
    wire tmp46843;
    wire tmp46844;
    wire tmp46845;
    wire tmp46846;
    wire tmp46847;
    wire tmp46848;
    wire[4:0] tmp46849;
    wire[3:0] tmp46850;
    wire[4:0] tmp46851;
    wire[5:0] tmp46852;
    wire[4:0] tmp46853;
    wire tmp46854;
    wire tmp46855;
    wire[2:0] tmp46856;
    wire[2:0] tmp46857;
    wire[2:0] tmp46858;
    wire[2:0] tmp46859;
    wire[3:0] tmp46860;
    wire[4:0] tmp46861;
    wire[3:0] tmp46862;
    wire[3:0] tmp46863;
    wire[2:0] tmp46864;
    wire[3:0] tmp46865;
    wire[4:0] tmp46866;
    wire[3:0] tmp46867;
    wire tmp46868;
    wire tmp46869;
    wire tmp46870;
    wire[3:0] tmp46871;
    wire[2:0] tmp46872;
    wire[3:0] tmp46873;
    wire tmp46874;
    wire tmp46875;
    wire tmp46876;
    wire tmp46877;
    wire tmp46878;
    wire tmp46879;
    wire tmp46880;
    wire tmp46881;
    wire tmp46882;
    wire tmp46883;
    wire tmp46884;
    wire tmp46885;
    wire tmp46886;
    wire tmp46887;
    wire tmp46888;
    wire tmp46889;
    wire tmp46890;
    wire tmp46891;
    wire[7:0] tmp46892;
    wire tmp46893;
    wire[6:0] tmp46894;
    wire[7:0] tmp46895;
    wire[7:0] tmp46896;
    wire[7:0] tmp46897;
    wire[7:0] tmp46898;
    wire[7:0] tmp46899;
    wire[7:0] tmp46900;

    // Combinational
    assign _ver_out_tmp_0 = 25;
    assign const_6432_1 = 1;
    assign const_6433_1 = 1;
    assign const_6434_0 = 0;
    assign const_6435_0 = 0;
    assign const_6436_2 = 2;
    assign const_6437_1 = 1;
    assign const_6438_0 = 0;
    assign const_6439_1 = 1;
    assign const_6440_0 = 0;
    assign const_6441_0 = 0;
    assign const_6442_0 = 0;
    assign const_6443_0 = 0;
    assign const_6444_0 = 0;
    assign const_6445_2 = 2;
    assign const_6446_1 = 1;
    assign const_6447_0 = 0;
    assign const_6448_1 = 1;
    assign const_6449_0 = 0;
    assign const_6450_0 = 0;
    assign const_6451_0 = 0;
    assign const_6452_0 = 0;
    assign const_6453_0 = 0;
    assign const_6454_2 = 2;
    assign const_6455_1 = 1;
    assign const_6456_0 = 0;
    assign const_6457_1 = 1;
    assign const_6458_0 = 0;
    assign const_6459_0 = 0;
    assign const_6460_0 = 0;
    assign const_6461_0 = 0;
    assign const_6462_0 = 0;
    assign const_6463_2 = 2;
    assign const_6464_1 = 1;
    assign const_6465_0 = 0;
    assign const_6466_1 = 1;
    assign const_6467_0 = 0;
    assign const_6468_0 = 0;
    assign const_6469_0 = 0;
    assign const_6470_4 = 4;
    assign const_6471_1 = 1;
    assign const_6472_0 = 0;
    assign const_6473_0 = 0;
    assign const_6474_0 = 0;
    assign const_6475_4 = 4;
    assign const_6476_1 = 1;
    assign const_6477_0 = 0;
    assign const_6478_0 = 0;
    assign const_6479_0 = 0;
    assign const_6480_8 = 8;
    assign const_6481_1 = 1;
    assign const_6482_0 = 0;
    assign const_6483_0 = 0;
    assign const_6484_0 = 0;
    assign const_6485_0 = 0;
    assign const_6487_0 = 0;
    assign const_6488_0 = 0;
    assign const_6489_1 = 1;
    assign const_6490_0 = 0;
    assign const_6491_1 = 1;
    assign const_6492_0 = 0;
    assign const_6493_0 = 0;
    assign const_6494_1 = 1;
    assign const_6495_1 = 1;
    assign const_6496_1 = 1;
    assign const_6497_0 = 0;
    assign const_6498_0 = 0;
    assign const_6499_8 = 8;
    assign const_6500_8 = 8;
    assign const_6501_0 = 0;
    assign const_6502_0 = 0;
    assign const_6503_0 = 0;
    assign const_6504_0 = 0;
    assign const_6505_0 = 0;
    assign const_6506_0 = 0;
    assign const_6507_0 = 0;
    assign const_6508_0 = 0;
    assign const_6509_0 = 0;
    assign const_6510_1 = 1;
    assign const_6511_0 = 0;
    assign const_6512_0 = 0;
    assign const_6513_0 = 0;
    assign const_6514_0 = 0;
    assign const_6515_2 = 2;
    assign const_6516_1 = 1;
    assign const_6517_0 = 0;
    assign const_6518_1 = 1;
    assign const_6519_0 = 0;
    assign const_6520_0 = 0;
    assign const_6521_0 = 0;
    assign const_6522_0 = 0;
    assign const_6523_0 = 0;
    assign const_6524_2 = 2;
    assign const_6525_1 = 1;
    assign const_6526_0 = 0;
    assign const_6527_1 = 1;
    assign const_6528_0 = 0;
    assign const_6529_0 = 0;
    assign const_6530_0 = 0;
    assign const_6531_4 = 4;
    assign const_6532_1 = 1;
    assign const_6533_0 = 0;
    assign const_6534_0 = 0;
    assign const_6535_0 = 0;
    assign const_6536_0 = 0;
    assign const_6537_1 = 1;
    assign const_6538_0 = 0;
    assign const_6539_0 = 0;
    assign const_6540_0 = 0;
    assign const_6541_0 = 0;
    assign const_6542_0 = 0;
    assign const_6543_1 = 1;
    assign const_6544_0 = 0;
    assign const_6545_0 = 0;
    assign const_6546_0 = 0;
    assign const_6547_0 = 0;
    assign const_6548_0 = 0;
    assign const_6549_0 = 0;
    assign const_6550_0 = 0;
    assign const_6551_0 = 0;
    assign out46382 = tmp46382;
    assign out46383 = tmp46383;
    assign out46384 = tmp46384;
    assign tmp46376 = data_in;
    assign tmp46377 = weight_in;
    assign tmp46378 = accum_in;
    assign tmp46379 = weight_en;
    assign tmp46380 = data_en;
    assign tmp46381 = adder_en;
    assign tmp46385 = tmp46616;
    assign tmp46386 = tmp46388;
    assign tmp46387 = tmp46389;
    assign tmp46388 = {tmp46382[7]};
    assign tmp46389 = {tmp46383[7]};
    assign tmp46390 = tmp46392;
    assign tmp46391 = tmp46393;
    assign tmp46392 = {tmp46382[6], tmp46382[5], tmp46382[4], tmp46382[3]};
    assign tmp46393 = {tmp46383[6], tmp46383[5], tmp46383[4], tmp46383[3]};
    assign tmp46394 = tmp46397;
    assign tmp46395 = tmp46399;
    assign tmp46396 = {tmp46382[2], tmp46382[1], tmp46382[0]};
    assign tmp46397 = {const_6432_1, tmp46396};
    assign tmp46398 = {tmp46383[2], tmp46383[1], tmp46383[0]};
    assign tmp46399 = {const_6433_1, tmp46398};
    assign tmp46400 = tmp46402;
    assign tmp46401 = float_multiplier_pipereg_0to1_exp_a_302 ^ float_multiplier_pipereg_0to1_exp_b_303;
    assign tmp46402 = {tmp46401[0]};
    assign tmp46403 = tmp46405;
    assign tmp46404 = tmp46406;
    assign tmp46405 = float_multiplier_pipereg_0to1_sign_a_300 + float_multiplier_pipereg_0to1_sign_b_301;
    assign tmp46406 = float_multiplier_pipereg_0to1_mantissa_a_304 * float_multiplier_pipereg_0to1_mantissa_b_305;
    assign tmp46407 = tmp46534;
    assign tmp46408 = {float_multiplier_pipereg_1to2_mant_product_308[7], float_multiplier_pipereg_1to2_mant_product_308[6]};
    assign tmp46409 = {float_multiplier_pipereg_1to2_mant_product_308[5], float_multiplier_pipereg_1to2_mant_product_308[4]};
    assign tmp46410 = {float_multiplier_pipereg_1to2_mant_product_308[3], float_multiplier_pipereg_1to2_mant_product_308[2]};
    assign tmp46411 = {float_multiplier_pipereg_1to2_mant_product_308[1], float_multiplier_pipereg_1to2_mant_product_308[0]};
    assign tmp46412 = tmp46428;
    assign tmp46413 = {const_6435_0};
    assign tmp46414 = {tmp46413, const_6434_0};
    assign tmp46415 = tmp46408 == tmp46414;
    assign tmp46416 = {const_6438_0};
    assign tmp46417 = {tmp46416, const_6437_1};
    assign tmp46418 = tmp46408 == tmp46417;
    assign tmp46419 = ~tmp46415;
    assign tmp46420 = tmp46419 & tmp46418;
    assign tmp46421 = ~tmp46415;
    assign tmp46422 = ~tmp46418;
    assign tmp46423 = tmp46421 & tmp46422;
    assign tmp46424 = {const_6442_0};
    assign tmp46425 = {tmp46424, const_6441_0};
    assign tmp46426 = tmp46415 ? const_6436_2 : tmp46425;
    assign tmp46427 = tmp46420 ? const_6439_1 : tmp46426;
    assign tmp46428 = tmp46423 ? const_6440_0 : tmp46427;
    assign tmp46429 = tmp46445;
    assign tmp46430 = {const_6444_0};
    assign tmp46431 = {tmp46430, const_6443_0};
    assign tmp46432 = tmp46409 == tmp46431;
    assign tmp46433 = {const_6447_0};
    assign tmp46434 = {tmp46433, const_6446_1};
    assign tmp46435 = tmp46409 == tmp46434;
    assign tmp46436 = ~tmp46432;
    assign tmp46437 = tmp46436 & tmp46435;
    assign tmp46438 = ~tmp46432;
    assign tmp46439 = ~tmp46435;
    assign tmp46440 = tmp46438 & tmp46439;
    assign tmp46441 = {const_6451_0};
    assign tmp46442 = {tmp46441, const_6450_0};
    assign tmp46443 = tmp46432 ? const_6445_2 : tmp46442;
    assign tmp46444 = tmp46437 ? const_6448_1 : tmp46443;
    assign tmp46445 = tmp46440 ? const_6449_0 : tmp46444;
    assign tmp46446 = tmp46462;
    assign tmp46447 = {const_6453_0};
    assign tmp46448 = {tmp46447, const_6452_0};
    assign tmp46449 = tmp46410 == tmp46448;
    assign tmp46450 = {const_6456_0};
    assign tmp46451 = {tmp46450, const_6455_1};
    assign tmp46452 = tmp46410 == tmp46451;
    assign tmp46453 = ~tmp46449;
    assign tmp46454 = tmp46453 & tmp46452;
    assign tmp46455 = ~tmp46449;
    assign tmp46456 = ~tmp46452;
    assign tmp46457 = tmp46455 & tmp46456;
    assign tmp46458 = {const_6460_0};
    assign tmp46459 = {tmp46458, const_6459_0};
    assign tmp46460 = tmp46449 ? const_6454_2 : tmp46459;
    assign tmp46461 = tmp46454 ? const_6457_1 : tmp46460;
    assign tmp46462 = tmp46457 ? const_6458_0 : tmp46461;
    assign tmp46463 = tmp46479;
    assign tmp46464 = {const_6462_0};
    assign tmp46465 = {tmp46464, const_6461_0};
    assign tmp46466 = tmp46411 == tmp46465;
    assign tmp46467 = {const_6465_0};
    assign tmp46468 = {tmp46467, const_6464_1};
    assign tmp46469 = tmp46411 == tmp46468;
    assign tmp46470 = ~tmp46466;
    assign tmp46471 = tmp46470 & tmp46469;
    assign tmp46472 = ~tmp46466;
    assign tmp46473 = ~tmp46469;
    assign tmp46474 = tmp46472 & tmp46473;
    assign tmp46475 = {const_6469_0};
    assign tmp46476 = {tmp46475, const_6468_0};
    assign tmp46477 = tmp46466 ? const_6463_2 : tmp46476;
    assign tmp46478 = tmp46471 ? const_6466_1 : tmp46477;
    assign tmp46479 = tmp46474 ? const_6467_0 : tmp46478;
    assign tmp46480 = tmp46496;
    assign tmp46481 = {tmp46412[1]};
    assign tmp46482 = {tmp46429[1]};
    assign tmp46483 = tmp46481 & tmp46482;
    assign tmp46484 = {tmp46429[0]};
    assign tmp46485 = {const_6471_1, tmp46484};
    assign tmp46486 = ~tmp46483;
    assign tmp46487 = tmp46486 & tmp46481;
    assign tmp46488 = {const_6472_0, tmp46412};
    assign tmp46489 = ~tmp46483;
    assign tmp46490 = ~tmp46481;
    assign tmp46491 = tmp46489 & tmp46490;
    assign tmp46492 = {const_6474_0, const_6474_0};
    assign tmp46493 = {tmp46492, const_6473_0};
    assign tmp46494 = tmp46483 ? const_6470_4 : tmp46493;
    assign tmp46495 = tmp46487 ? tmp46485 : tmp46494;
    assign tmp46496 = tmp46491 ? tmp46488 : tmp46495;
    assign tmp46497 = tmp46513;
    assign tmp46498 = {tmp46446[1]};
    assign tmp46499 = {tmp46463[1]};
    assign tmp46500 = tmp46498 & tmp46499;
    assign tmp46501 = {tmp46463[0]};
    assign tmp46502 = {const_6476_1, tmp46501};
    assign tmp46503 = ~tmp46500;
    assign tmp46504 = tmp46503 & tmp46498;
    assign tmp46505 = {const_6477_0, tmp46446};
    assign tmp46506 = ~tmp46500;
    assign tmp46507 = ~tmp46498;
    assign tmp46508 = tmp46506 & tmp46507;
    assign tmp46509 = {const_6479_0, const_6479_0};
    assign tmp46510 = {tmp46509, const_6478_0};
    assign tmp46511 = tmp46500 ? const_6475_4 : tmp46510;
    assign tmp46512 = tmp46504 ? tmp46502 : tmp46511;
    assign tmp46513 = tmp46508 ? tmp46505 : tmp46512;
    assign tmp46514 = tmp46530;
    assign tmp46515 = {tmp46480[2]};
    assign tmp46516 = {tmp46497[2]};
    assign tmp46517 = tmp46515 & tmp46516;
    assign tmp46518 = {tmp46497[1], tmp46497[0]};
    assign tmp46519 = {const_6481_1, tmp46518};
    assign tmp46520 = ~tmp46517;
    assign tmp46521 = tmp46520 & tmp46515;
    assign tmp46522 = {const_6482_0, tmp46480};
    assign tmp46523 = ~tmp46517;
    assign tmp46524 = ~tmp46515;
    assign tmp46525 = tmp46523 & tmp46524;
    assign tmp46526 = {const_6484_0, const_6484_0, const_6484_0};
    assign tmp46527 = {tmp46526, const_6483_0};
    assign tmp46528 = tmp46517 ? const_6480_8 : tmp46527;
    assign tmp46529 = tmp46521 ? tmp46519 : tmp46528;
    assign tmp46530 = tmp46525 ? tmp46522 : tmp46529;
    assign tmp46531 = tmp46533;
    assign tmp46532 = {const_6485_0, const_6485_0, const_6485_0, const_6485_0};
    assign tmp46533 = {tmp46532, tmp46514};
    assign tmp46534 = {tmp46531[3], tmp46531[2], tmp46531[1], tmp46531[0]};
    assign tmp46535 = tmp46539;
    assign tmp46536 = {const_6487_0, const_6487_0, const_6487_0};
    assign tmp46537 = {tmp46536, float_multiplier_pipereg_1to2_exp_sum_307};
    assign tmp46538 = tmp46537 + _ver_out_tmp_0;
    assign tmp46539 = {tmp46538[3], tmp46538[2], tmp46538[1], tmp46538[0]};
    assign tmp46540 = tmp46569;
    assign tmp46541 = {float_multiplier_pipereg_2to3_mant_product_310[6], float_multiplier_pipereg_2to3_mant_product_310[5], float_multiplier_pipereg_2to3_mant_product_310[4], float_multiplier_pipereg_2to3_mant_product_310[3], float_multiplier_pipereg_2to3_mant_product_310[2], float_multiplier_pipereg_2to3_mant_product_310[1], float_multiplier_pipereg_2to3_mant_product_310[0]};
    assign tmp46542 = {tmp46541, const_6488_0};
    assign tmp46543 = {float_multiplier_pipereg_2to3_mant_product_310[7], float_multiplier_pipereg_2to3_mant_product_310[6], float_multiplier_pipereg_2to3_mant_product_310[5], float_multiplier_pipereg_2to3_mant_product_310[4], float_multiplier_pipereg_2to3_mant_product_310[3], float_multiplier_pipereg_2to3_mant_product_310[2], float_multiplier_pipereg_2to3_mant_product_310[1]};
    assign tmp46544 = {const_6488_0, tmp46543};
    assign tmp46545 = const_6489_1 ? tmp46542 : tmp46544;
    assign tmp46546 = {float_multiplier_pipereg_2to3_leading_zeros_311[0]};
    assign tmp46547 = tmp46546 ? tmp46545 : float_multiplier_pipereg_2to3_mant_product_310;
    assign tmp46548 = {const_6488_0, const_6488_0};
    assign tmp46549 = {tmp46548[1], tmp46548[0]};
    assign tmp46550 = {tmp46547[5], tmp46547[4], tmp46547[3], tmp46547[2], tmp46547[1], tmp46547[0]};
    assign tmp46551 = {tmp46550, tmp46549};
    assign tmp46552 = {tmp46547[7], tmp46547[6], tmp46547[5], tmp46547[4], tmp46547[3], tmp46547[2]};
    assign tmp46553 = {tmp46549, tmp46552};
    assign tmp46554 = const_6489_1 ? tmp46551 : tmp46553;
    assign tmp46555 = {float_multiplier_pipereg_2to3_leading_zeros_311[1]};
    assign tmp46556 = tmp46555 ? tmp46554 : tmp46547;
    assign tmp46557 = {tmp46549, tmp46549};
    assign tmp46558 = {tmp46557[3], tmp46557[2], tmp46557[1], tmp46557[0]};
    assign tmp46559 = {tmp46556[3], tmp46556[2], tmp46556[1], tmp46556[0]};
    assign tmp46560 = {tmp46559, tmp46558};
    assign tmp46561 = {tmp46556[7], tmp46556[6], tmp46556[5], tmp46556[4]};
    assign tmp46562 = {tmp46558, tmp46561};
    assign tmp46563 = const_6489_1 ? tmp46560 : tmp46562;
    assign tmp46564 = {float_multiplier_pipereg_2to3_leading_zeros_311[2]};
    assign tmp46565 = tmp46564 ? tmp46563 : tmp46556;
    assign tmp46566 = {tmp46558, tmp46558};
    assign tmp46567 = {tmp46566[7], tmp46566[6], tmp46566[5], tmp46566[4], tmp46566[3], tmp46566[2], tmp46566[1], tmp46566[0]};
    assign tmp46568 = {float_multiplier_pipereg_2to3_leading_zeros_311[3]};
    assign tmp46569 = tmp46568 ? tmp46567 : tmp46565;
    assign tmp46570 = tmp46572;
    assign tmp46571 = tmp46573;
    assign tmp46572 = {tmp46540[7], tmp46540[6], tmp46540[5], tmp46540[4]};
    assign tmp46573 = {tmp46540[3], tmp46540[2], tmp46540[1], tmp46540[0]};
    assign tmp46574 = tmp46577;
    assign tmp46575 = tmp46578;
    assign tmp46576 = tmp46584;
    assign tmp46577 = {tmp46571[3]};
    assign tmp46578 = {tmp46571[2]};
    assign tmp46579 = {tmp46571[1], tmp46571[0]};
    assign tmp46580 = {tmp46579[0]};
    assign tmp46581 = {tmp46580};
    assign tmp46582 = {tmp46579[1]};
    assign tmp46583 = {tmp46582};
    assign tmp46584 = tmp46581 | tmp46583;
    assign tmp46585 = tmp46594;
    assign tmp46586 = {tmp46570[1]};
    assign tmp46587 = tmp46575 | tmp46576;
    assign tmp46588 = tmp46574 & tmp46587;
    assign tmp46589 = ~tmp46575;
    assign tmp46590 = tmp46574 & tmp46589;
    assign tmp46591 = ~tmp46576;
    assign tmp46592 = tmp46590 & tmp46591;
    assign tmp46593 = tmp46592 & tmp46586;
    assign tmp46594 = tmp46588 | tmp46593;
    assign tmp46595 = tmp46598;
    assign tmp46596 = {const_6490_0, const_6490_0, const_6490_0};
    assign tmp46597 = {tmp46596, tmp46585};
    assign tmp46598 = tmp46570 + tmp46597;
    assign tmp46599 = tmp46600;
    assign tmp46600 = {tmp46595[4]};
    assign tmp46601 = tmp46604;
    assign tmp46602 = {tmp46595[3], tmp46595[2], tmp46595[1]};
    assign tmp46603 = {tmp46595[2], tmp46595[1], tmp46595[0]};
    assign tmp46604 = tmp46599 ? tmp46602 : tmp46603;
    assign tmp46605 = tmp46615;
    assign tmp46606 = tmp46611;
    assign tmp46607 = float_multiplier_pipereg_2to3_unbiased_exp_312 - float_multiplier_pipereg_2to3_leading_zeros_311;
    assign tmp46608 = {const_6492_0, const_6492_0, const_6492_0, const_6492_0};
    assign tmp46609 = {tmp46608, const_6491_1};
    assign tmp46610 = tmp46607 + tmp46609;
    assign tmp46611 = {tmp46610[3], tmp46610[2], tmp46610[1], tmp46610[0]};
    assign tmp46612 = {const_6493_0, const_6493_0, const_6493_0};
    assign tmp46613 = {tmp46612, tmp46599};
    assign tmp46614 = tmp46606 + tmp46613;
    assign tmp46615 = {tmp46614[3], tmp46614[2], tmp46614[1], tmp46614[0]};
    assign tmp46616 = {float_multiplier_pipereg_2to3_sign_out_309, tmp46605, tmp46601};
    assign tmp46617 = mul_en;
    assign tmp46619 = tmp46617 ? tmp46385 : tmp46618;
    assign tmp46621 = tmp46897;
    assign tmp46622 = tmp46624;
    assign tmp46623 = tmp46625;
    assign tmp46624 = {tmp46618[7]};
    assign tmp46625 = {tmp46378[7]};
    assign tmp46626 = tmp46628;
    assign tmp46627 = tmp46629;
    assign tmp46628 = {tmp46618[6], tmp46618[5], tmp46618[4], tmp46618[3]};
    assign tmp46629 = {tmp46378[6], tmp46378[5], tmp46378[4], tmp46378[3]};
    assign tmp46630 = tmp46633;
    assign tmp46631 = tmp46635;
    assign tmp46632 = {tmp46618[2], tmp46618[1], tmp46618[0]};
    assign tmp46633 = {const_6494_1, tmp46632};
    assign tmp46634 = {tmp46378[2], tmp46378[1], tmp46378[0]};
    assign tmp46635 = {const_6495_1, tmp46634};
    assign tmp46636 = tmp46642;
    assign tmp46637 = tmp46643;
    assign tmp46638 = tmp46658;
    assign tmp46639 = tmp46646;
    assign tmp46640 = tmp46660;
    assign tmp46641 = tmp46662;
    assign tmp46642 = float_adder_pipereg_0to1_sign_a_314 ^ float_adder_pipereg_0to1_sign_b_315;
    assign tmp46643 = float_adder_pipereg_0to1_exp_a_316 - float_adder_pipereg_0to1_exp_b_317;
    assign tmp46644 = {tmp46637[4]};
    assign tmp46645 = {tmp46637[4]};
    assign tmp46646 = tmp46645 ? float_adder_pipereg_0to1_exp_b_317 : float_adder_pipereg_0to1_exp_a_316;
    assign tmp46647 = {tmp46637[3], tmp46637[2], tmp46637[1], tmp46637[0]};
    assign tmp46648 = {tmp46637[4]};
    assign tmp46649 = {tmp46637[3], tmp46637[2], tmp46637[1], tmp46637[0]};
    assign tmp46650 = ~tmp46649;
    assign tmp46651 = {const_6497_0, const_6497_0, const_6497_0};
    assign tmp46652 = {tmp46651, const_6496_1};
    assign tmp46653 = tmp46650 + tmp46652;
    assign tmp46654 = {tmp46653[3], tmp46653[2], tmp46653[1], tmp46653[0]};
    assign tmp46655 = {tmp46648, tmp46654};
    assign tmp46656 = {const_6498_0};
    assign tmp46657 = {tmp46656, tmp46647};
    assign tmp46658 = tmp46644 ? tmp46655 : tmp46657;
    assign tmp46659 = {tmp46637[4]};
    assign tmp46660 = tmp46659 ? float_adder_pipereg_0to1_mant_a_318 : float_adder_pipereg_0to1_mant_b_319;
    assign tmp46661 = {tmp46637[4]};
    assign tmp46662 = tmp46661 ? float_adder_pipereg_0to1_mant_b_319 : float_adder_pipereg_0to1_mant_a_318;
    assign tmp46663 = tmp46664;
    assign tmp46664 = {float_adder_pipereg_1to2_signed_shift_325[3], float_adder_pipereg_1to2_signed_shift_325[2], float_adder_pipereg_1to2_signed_shift_325[1], float_adder_pipereg_1to2_signed_shift_325[0]};
    assign tmp46665 = tmp46667;
    assign tmp46666 = tmp46663 > const_6499_8;
    assign tmp46667 = tmp46666 ? const_6500_8 : tmp46663;
    assign tmp46668 = {float_adder_pipereg_1to2_mant_smaller_326, const_6501_0};
    assign tmp46669 = tmp46698;
    assign tmp46670 = {tmp46668[6], tmp46668[5], tmp46668[4], tmp46668[3], tmp46668[2], tmp46668[1], tmp46668[0]};
    assign tmp46671 = {tmp46670, const_6502_0};
    assign tmp46672 = {tmp46668[7], tmp46668[6], tmp46668[5], tmp46668[4], tmp46668[3], tmp46668[2], tmp46668[1]};
    assign tmp46673 = {const_6502_0, tmp46672};
    assign tmp46674 = const_6503_0 ? tmp46671 : tmp46673;
    assign tmp46675 = {tmp46665[0]};
    assign tmp46676 = tmp46675 ? tmp46674 : tmp46668;
    assign tmp46677 = {const_6502_0, const_6502_0};
    assign tmp46678 = {tmp46677[1], tmp46677[0]};
    assign tmp46679 = {tmp46676[5], tmp46676[4], tmp46676[3], tmp46676[2], tmp46676[1], tmp46676[0]};
    assign tmp46680 = {tmp46679, tmp46678};
    assign tmp46681 = {tmp46676[7], tmp46676[6], tmp46676[5], tmp46676[4], tmp46676[3], tmp46676[2]};
    assign tmp46682 = {tmp46678, tmp46681};
    assign tmp46683 = const_6503_0 ? tmp46680 : tmp46682;
    assign tmp46684 = {tmp46665[1]};
    assign tmp46685 = tmp46684 ? tmp46683 : tmp46676;
    assign tmp46686 = {tmp46678, tmp46678};
    assign tmp46687 = {tmp46686[3], tmp46686[2], tmp46686[1], tmp46686[0]};
    assign tmp46688 = {tmp46685[3], tmp46685[2], tmp46685[1], tmp46685[0]};
    assign tmp46689 = {tmp46688, tmp46687};
    assign tmp46690 = {tmp46685[7], tmp46685[6], tmp46685[5], tmp46685[4]};
    assign tmp46691 = {tmp46687, tmp46690};
    assign tmp46692 = const_6503_0 ? tmp46689 : tmp46691;
    assign tmp46693 = {tmp46665[2]};
    assign tmp46694 = tmp46693 ? tmp46692 : tmp46685;
    assign tmp46695 = {tmp46687, tmp46687};
    assign tmp46696 = {tmp46695[7], tmp46695[6], tmp46695[5], tmp46695[4], tmp46695[3], tmp46695[2], tmp46695[1], tmp46695[0]};
    assign tmp46697 = {tmp46665[3]};
    assign tmp46698 = tmp46697 ? tmp46696 : tmp46694;
    assign tmp46699 = {tmp46669[7], tmp46669[6], tmp46669[5], tmp46669[4]};
    assign tmp46700 = {tmp46669[3], tmp46669[2], tmp46669[1], tmp46669[0]};
    assign tmp46701 = tmp46704;
    assign tmp46702 = tmp46705;
    assign tmp46703 = tmp46711;
    assign tmp46704 = {tmp46700[3]};
    assign tmp46705 = {tmp46700[2]};
    assign tmp46706 = {tmp46700[1], tmp46700[0]};
    assign tmp46707 = {tmp46706[0]};
    assign tmp46708 = {tmp46707};
    assign tmp46709 = {tmp46706[1]};
    assign tmp46710 = {tmp46709};
    assign tmp46711 = tmp46708 | tmp46710;
    assign tmp46712 = tmp46727;
    assign tmp46713 = {const_6504_0};
    assign tmp46714 = {tmp46713, float_adder_pipereg_2to3_mant_larger_334};
    assign tmp46715 = {const_6505_0};
    assign tmp46716 = {tmp46715, float_adder_pipereg_2to3_aligned_mant_msb_335};
    assign tmp46717 = tmp46714 - tmp46716;
    assign tmp46718 = {const_6506_0};
    assign tmp46719 = {tmp46718, float_adder_pipereg_2to3_mant_larger_334};
    assign tmp46720 = {const_6507_0};
    assign tmp46721 = {tmp46720, float_adder_pipereg_2to3_aligned_mant_msb_335};
    assign tmp46722 = tmp46719 + tmp46721;
    assign tmp46723 = ~float_adder_pipereg_2to3_sign_xor_331;
    assign tmp46724 = {const_6509_0, const_6509_0, const_6509_0, const_6509_0, const_6509_0};
    assign tmp46725 = {tmp46724, const_6508_0};
    assign tmp46726 = float_adder_pipereg_2to3_sign_xor_331 ? tmp46717 : tmp46725;
    assign tmp46727 = tmp46723 ? tmp46722 : tmp46726;
    assign tmp46728 = tmp46729;
    assign tmp46729 = {tmp46712[5]};
    assign tmp46730 = tmp46738;
    assign tmp46731 = ~tmp46712;
    assign tmp46732 = {const_6511_0, const_6511_0, const_6511_0, const_6511_0, const_6511_0};
    assign tmp46733 = {tmp46732, const_6510_1};
    assign tmp46734 = tmp46731 + tmp46733;
    assign tmp46735 = {const_6512_0};
    assign tmp46736 = {tmp46735, tmp46712};
    assign tmp46737 = tmp46728 ? tmp46734 : tmp46736;
    assign tmp46738 = {tmp46737[4], tmp46737[3], tmp46737[2], tmp46737[1], tmp46737[0]};
    assign tmp46739 = {tmp46730[4]};
    assign tmp46740 = tmp46804;
    assign tmp46741 = {tmp46730[3], tmp46730[2], tmp46730[1], tmp46730[0]};
    assign tmp46742 = {tmp46741[3], tmp46741[2]};
    assign tmp46743 = {tmp46741[1], tmp46741[0]};
    assign tmp46744 = tmp46760;
    assign tmp46745 = {const_6514_0};
    assign tmp46746 = {tmp46745, const_6513_0};
    assign tmp46747 = tmp46742 == tmp46746;
    assign tmp46748 = {const_6517_0};
    assign tmp46749 = {tmp46748, const_6516_1};
    assign tmp46750 = tmp46742 == tmp46749;
    assign tmp46751 = ~tmp46747;
    assign tmp46752 = tmp46751 & tmp46750;
    assign tmp46753 = ~tmp46747;
    assign tmp46754 = ~tmp46750;
    assign tmp46755 = tmp46753 & tmp46754;
    assign tmp46756 = {const_6521_0};
    assign tmp46757 = {tmp46756, const_6520_0};
    assign tmp46758 = tmp46747 ? const_6515_2 : tmp46757;
    assign tmp46759 = tmp46752 ? const_6518_1 : tmp46758;
    assign tmp46760 = tmp46755 ? const_6519_0 : tmp46759;
    assign tmp46761 = tmp46777;
    assign tmp46762 = {const_6523_0};
    assign tmp46763 = {tmp46762, const_6522_0};
    assign tmp46764 = tmp46743 == tmp46763;
    assign tmp46765 = {const_6526_0};
    assign tmp46766 = {tmp46765, const_6525_1};
    assign tmp46767 = tmp46743 == tmp46766;
    assign tmp46768 = ~tmp46764;
    assign tmp46769 = tmp46768 & tmp46767;
    assign tmp46770 = ~tmp46764;
    assign tmp46771 = ~tmp46767;
    assign tmp46772 = tmp46770 & tmp46771;
    assign tmp46773 = {const_6530_0};
    assign tmp46774 = {tmp46773, const_6529_0};
    assign tmp46775 = tmp46764 ? const_6524_2 : tmp46774;
    assign tmp46776 = tmp46769 ? const_6527_1 : tmp46775;
    assign tmp46777 = tmp46772 ? const_6528_0 : tmp46776;
    assign tmp46778 = tmp46797;
    assign tmp46779 = tmp46795;
    assign tmp46780 = {tmp46744[1]};
    assign tmp46781 = {tmp46761[1]};
    assign tmp46782 = tmp46780 & tmp46781;
    assign tmp46783 = {tmp46761[0]};
    assign tmp46784 = {const_6532_1, tmp46783};
    assign tmp46785 = ~tmp46782;
    assign tmp46786 = tmp46785 & tmp46780;
    assign tmp46787 = {const_6533_0, tmp46744};
    assign tmp46788 = ~tmp46782;
    assign tmp46789 = ~tmp46780;
    assign tmp46790 = tmp46788 & tmp46789;
    assign tmp46791 = {const_6535_0, const_6535_0};
    assign tmp46792 = {tmp46791, const_6534_0};
    assign tmp46793 = tmp46782 ? const_6531_4 : tmp46792;
    assign tmp46794 = tmp46786 ? tmp46784 : tmp46793;
    assign tmp46795 = tmp46790 ? tmp46787 : tmp46794;
    assign tmp46796 = {const_6536_0};
    assign tmp46797 = {tmp46796, tmp46779};
    assign tmp46798 = {const_6538_0, const_6538_0, const_6538_0};
    assign tmp46799 = {tmp46798, const_6537_1};
    assign tmp46800 = tmp46778 + tmp46799;
    assign tmp46801 = {const_6540_0, const_6540_0, const_6540_0, const_6540_0};
    assign tmp46802 = {tmp46801, const_6539_0};
    assign tmp46803 = tmp46739 ? tmp46802 : tmp46800;
    assign tmp46804 = {tmp46803[3], tmp46803[2], tmp46803[1], tmp46803[0]};
    assign tmp46805 = tmp46838;
    assign tmp46806 = {const_6541_0};
    assign tmp46807 = {tmp46806, float_adder_pipereg_3to4_lzc_349};
    assign tmp46808 = {float_adder_pipereg_3to4_mant_sum_347[3], float_adder_pipereg_3to4_mant_sum_347[2], float_adder_pipereg_3to4_mant_sum_347[1], float_adder_pipereg_3to4_mant_sum_347[0]};
    assign tmp46809 = {tmp46808, const_6542_0};
    assign tmp46810 = {float_adder_pipereg_3to4_mant_sum_347[4], float_adder_pipereg_3to4_mant_sum_347[3], float_adder_pipereg_3to4_mant_sum_347[2], float_adder_pipereg_3to4_mant_sum_347[1]};
    assign tmp46811 = {const_6542_0, tmp46810};
    assign tmp46812 = const_6543_1 ? tmp46809 : tmp46811;
    assign tmp46813 = {tmp46807[0]};
    assign tmp46814 = tmp46813 ? tmp46812 : float_adder_pipereg_3to4_mant_sum_347;
    assign tmp46815 = {const_6542_0, const_6542_0};
    assign tmp46816 = {tmp46815[1], tmp46815[0]};
    assign tmp46817 = {tmp46814[2], tmp46814[1], tmp46814[0]};
    assign tmp46818 = {tmp46817, tmp46816};
    assign tmp46819 = {tmp46814[4], tmp46814[3], tmp46814[2]};
    assign tmp46820 = {tmp46816, tmp46819};
    assign tmp46821 = const_6543_1 ? tmp46818 : tmp46820;
    assign tmp46822 = {tmp46807[1]};
    assign tmp46823 = tmp46822 ? tmp46821 : tmp46814;
    assign tmp46824 = {tmp46816, tmp46816};
    assign tmp46825 = {tmp46824[3], tmp46824[2], tmp46824[1], tmp46824[0]};
    assign tmp46826 = {tmp46823[0]};
    assign tmp46827 = {tmp46826, tmp46825};
    assign tmp46828 = {tmp46823[4]};
    assign tmp46829 = {tmp46825, tmp46828};
    assign tmp46830 = const_6543_1 ? tmp46827 : tmp46829;
    assign tmp46831 = {tmp46807[2]};
    assign tmp46832 = tmp46831 ? tmp46830 : tmp46823;
    assign tmp46833 = {tmp46825, tmp46825};
    assign tmp46834 = {tmp46833[4], tmp46833[3], tmp46833[2], tmp46833[1], tmp46833[0]};
    assign tmp46835 = {tmp46807[3]};
    assign tmp46836 = tmp46835 ? tmp46834 : tmp46832;
    assign tmp46837 = {tmp46807[4]};
    assign tmp46838 = tmp46837 ? tmp46834 : tmp46836;
    assign tmp46839 = tmp46848;
    assign tmp46840 = {tmp46805[1]};
    assign tmp46841 = float_adder_pipereg_3to4_round_346 | float_adder_pipereg_3to4_sticky_344;
    assign tmp46842 = float_adder_pipereg_3to4_guard_345 & tmp46841;
    assign tmp46843 = ~float_adder_pipereg_3to4_round_346;
    assign tmp46844 = float_adder_pipereg_3to4_guard_345 & tmp46843;
    assign tmp46845 = ~float_adder_pipereg_3to4_sticky_344;
    assign tmp46846 = tmp46844 & tmp46845;
    assign tmp46847 = tmp46846 & tmp46840;
    assign tmp46848 = tmp46842 | tmp46847;
    assign tmp46849 = tmp46853;
    assign tmp46850 = {const_6544_0, const_6544_0, const_6544_0, const_6544_0};
    assign tmp46851 = {tmp46850, tmp46839};
    assign tmp46852 = tmp46805 + tmp46851;
    assign tmp46853 = {tmp46852[4], tmp46852[3], tmp46852[2], tmp46852[1], tmp46852[0]};
    assign tmp46854 = tmp46855;
    assign tmp46855 = {tmp46849[4]};
    assign tmp46856 = tmp46859;
    assign tmp46857 = {tmp46849[3], tmp46849[2], tmp46849[1]};
    assign tmp46858 = {tmp46849[2], tmp46849[1], tmp46849[0]};
    assign tmp46859 = tmp46854 ? tmp46857 : tmp46858;
    assign tmp46860 = tmp46862;
    assign tmp46861 = float_adder_pipereg_3to4_exp_larger_342 - float_adder_pipereg_3to4_lzc_349;
    assign tmp46862 = {tmp46861[3], tmp46861[2], tmp46861[1], tmp46861[0]};
    assign tmp46863 = tmp46867;
    assign tmp46864 = {const_6545_0, const_6545_0, const_6545_0};
    assign tmp46865 = {tmp46864, tmp46854};
    assign tmp46866 = tmp46860 + tmp46865;
    assign tmp46867 = {tmp46866[3], tmp46866[2], tmp46866[1], tmp46866[0]};
    assign tmp46868 = tmp46891;
    assign tmp46869 = float_adder_pipereg_3to4_sign_a_340 ^ float_adder_pipereg_3to4_sign_b_341;
    assign tmp46870 = ~tmp46869;
    assign tmp46871 = {float_adder_pipereg_3to4_signed_shift_343[3], float_adder_pipereg_3to4_signed_shift_343[2], float_adder_pipereg_3to4_signed_shift_343[1], float_adder_pipereg_3to4_signed_shift_343[0]};
    assign tmp46872 = {const_6547_0, const_6547_0, const_6547_0};
    assign tmp46873 = {tmp46872, const_6546_0};
    assign tmp46874 = tmp46871 == tmp46873;
    assign tmp46875 = float_adder_pipereg_3to4_is_neg_348 ^ float_adder_pipereg_3to4_sign_a_340;
    assign tmp46876 = ~tmp46870;
    assign tmp46877 = tmp46876 & tmp46874;
    assign tmp46878 = {float_adder_pipereg_3to4_signed_shift_343[4]};
    assign tmp46879 = ~tmp46870;
    assign tmp46880 = ~tmp46874;
    assign tmp46881 = tmp46879 & tmp46880;
    assign tmp46882 = tmp46881 & tmp46878;
    assign tmp46883 = ~tmp46870;
    assign tmp46884 = ~tmp46874;
    assign tmp46885 = tmp46883 & tmp46884;
    assign tmp46886 = ~tmp46878;
    assign tmp46887 = tmp46885 & tmp46886;
    assign tmp46888 = tmp46870 ? float_adder_pipereg_3to4_sign_a_340 : const_6548_0;
    assign tmp46889 = tmp46877 ? tmp46875 : tmp46888;
    assign tmp46890 = tmp46882 ? float_adder_pipereg_3to4_sign_b_341 : tmp46889;
    assign tmp46891 = tmp46887 ? float_adder_pipereg_3to4_sign_a_340 : tmp46890;
    assign tmp46892 = {tmp46868, tmp46863, tmp46856};
    assign tmp46893 = ~float_adder_pipereg_3to4_w_en_339;
    assign tmp46894 = {const_6551_0, const_6551_0, const_6551_0, const_6551_0, const_6551_0, const_6551_0, const_6551_0};
    assign tmp46895 = {tmp46894, const_6550_0};
    assign tmp46896 = float_adder_pipereg_3to4_w_en_339 ? tmp46892 : tmp46895;
    assign tmp46897 = tmp46893 ? const_6549_0 : tmp46896;
    assign tmp46898 = tmp46380 ? tmp46376 : tmp46382;
    assign tmp46899 = tmp46379 ? tmp46377 : tmp46383;
    assign tmp46900 = tmp46381 ? tmp46621 : tmp46384;

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            float_adder_pipereg_0to1_exp_a_316 <= 0;
            float_adder_pipereg_0to1_exp_b_317 <= 0;
            float_adder_pipereg_0to1_mant_a_318 <= 0;
            float_adder_pipereg_0to1_mant_b_319 <= 0;
            float_adder_pipereg_0to1_sign_a_314 <= 0;
            float_adder_pipereg_0to1_sign_b_315 <= 0;
            float_adder_pipereg_0to1_w_en_313 <= 0;
            float_adder_pipereg_1to2_exp_larger_324 <= 0;
            float_adder_pipereg_1to2_mant_larger_327 <= 0;
            float_adder_pipereg_1to2_mant_smaller_326 <= 0;
            float_adder_pipereg_1to2_sign_a_321 <= 0;
            float_adder_pipereg_1to2_sign_b_322 <= 0;
            float_adder_pipereg_1to2_sign_xor_323 <= 0;
            float_adder_pipereg_1to2_signed_shift_325 <= 0;
            float_adder_pipereg_1to2_w_en_320 <= 0;
            float_adder_pipereg_2to3_aligned_mant_msb_335 <= 0;
            float_adder_pipereg_2to3_exp_larger_332 <= 0;
            float_adder_pipereg_2to3_guard_337 <= 0;
            float_adder_pipereg_2to3_mant_larger_334 <= 0;
            float_adder_pipereg_2to3_round_338 <= 0;
            float_adder_pipereg_2to3_sign_a_329 <= 0;
            float_adder_pipereg_2to3_sign_b_330 <= 0;
            float_adder_pipereg_2to3_sign_xor_331 <= 0;
            float_adder_pipereg_2to3_signed_shift_333 <= 0;
            float_adder_pipereg_2to3_sticky_336 <= 0;
            float_adder_pipereg_2to3_w_en_328 <= 0;
            float_adder_pipereg_3to4_exp_larger_342 <= 0;
            float_adder_pipereg_3to4_guard_345 <= 0;
            float_adder_pipereg_3to4_is_neg_348 <= 0;
            float_adder_pipereg_3to4_lzc_349 <= 0;
            float_adder_pipereg_3to4_mant_sum_347 <= 0;
            float_adder_pipereg_3to4_round_346 <= 0;
            float_adder_pipereg_3to4_sign_a_340 <= 0;
            float_adder_pipereg_3to4_sign_b_341 <= 0;
            float_adder_pipereg_3to4_signed_shift_343 <= 0;
            float_adder_pipereg_3to4_sticky_344 <= 0;
            float_adder_pipereg_3to4_w_en_339 <= 0;
            float_multiplier_pipereg_0to1_exp_a_302 <= 0;
            float_multiplier_pipereg_0to1_exp_b_303 <= 0;
            float_multiplier_pipereg_0to1_mantissa_a_304 <= 0;
            float_multiplier_pipereg_0to1_mantissa_b_305 <= 0;
            float_multiplier_pipereg_0to1_sign_a_300 <= 0;
            float_multiplier_pipereg_0to1_sign_b_301 <= 0;
            float_multiplier_pipereg_1to2_exp_sum_307 <= 0;
            float_multiplier_pipereg_1to2_mant_product_308 <= 0;
            float_multiplier_pipereg_1to2_sign_out_306 <= 0;
            float_multiplier_pipereg_2to3_leading_zeros_311 <= 0;
            float_multiplier_pipereg_2to3_mant_product_310 <= 0;
            float_multiplier_pipereg_2to3_sign_out_309 <= 0;
            float_multiplier_pipereg_2to3_unbiased_exp_312 <= 0;
            tmp46382 <= 0;
            tmp46383 <= 0;
            tmp46384 <= 0;
            tmp46618 <= 0;
        end
        else begin
            float_adder_pipereg_0to1_exp_a_316 <= tmp46626;
            float_adder_pipereg_0to1_exp_b_317 <= tmp46627;
            float_adder_pipereg_0to1_mant_a_318 <= tmp46630;
            float_adder_pipereg_0to1_mant_b_319 <= tmp46631;
            float_adder_pipereg_0to1_sign_a_314 <= tmp46622;
            float_adder_pipereg_0to1_sign_b_315 <= tmp46623;
            float_adder_pipereg_0to1_w_en_313 <= adder_w_en_in46620;
            float_adder_pipereg_1to2_exp_larger_324 <= tmp46639;
            float_adder_pipereg_1to2_mant_larger_327 <= tmp46641;
            float_adder_pipereg_1to2_mant_smaller_326 <= tmp46640;
            float_adder_pipereg_1to2_sign_a_321 <= float_adder_pipereg_0to1_sign_a_314;
            float_adder_pipereg_1to2_sign_b_322 <= float_adder_pipereg_0to1_sign_b_315;
            float_adder_pipereg_1to2_sign_xor_323 <= tmp46636;
            float_adder_pipereg_1to2_signed_shift_325 <= tmp46638;
            float_adder_pipereg_1to2_w_en_320 <= float_adder_pipereg_0to1_w_en_313;
            float_adder_pipereg_2to3_aligned_mant_msb_335 <= tmp46699;
            float_adder_pipereg_2to3_exp_larger_332 <= float_adder_pipereg_1to2_exp_larger_324;
            float_adder_pipereg_2to3_guard_337 <= tmp46701;
            float_adder_pipereg_2to3_mant_larger_334 <= float_adder_pipereg_1to2_mant_larger_327;
            float_adder_pipereg_2to3_round_338 <= tmp46702;
            float_adder_pipereg_2to3_sign_a_329 <= float_adder_pipereg_1to2_sign_a_321;
            float_adder_pipereg_2to3_sign_b_330 <= float_adder_pipereg_1to2_sign_b_322;
            float_adder_pipereg_2to3_sign_xor_331 <= float_adder_pipereg_1to2_sign_xor_323;
            float_adder_pipereg_2to3_signed_shift_333 <= float_adder_pipereg_1to2_signed_shift_325;
            float_adder_pipereg_2to3_sticky_336 <= tmp46703;
            float_adder_pipereg_2to3_w_en_328 <= float_adder_pipereg_1to2_w_en_320;
            float_adder_pipereg_3to4_exp_larger_342 <= float_adder_pipereg_2to3_exp_larger_332;
            float_adder_pipereg_3to4_guard_345 <= float_adder_pipereg_2to3_guard_337;
            float_adder_pipereg_3to4_is_neg_348 <= tmp46728;
            float_adder_pipereg_3to4_lzc_349 <= tmp46740;
            float_adder_pipereg_3to4_mant_sum_347 <= tmp46730;
            float_adder_pipereg_3to4_round_346 <= float_adder_pipereg_2to3_round_338;
            float_adder_pipereg_3to4_sign_a_340 <= float_adder_pipereg_2to3_sign_a_329;
            float_adder_pipereg_3to4_sign_b_341 <= float_adder_pipereg_2to3_sign_b_330;
            float_adder_pipereg_3to4_signed_shift_343 <= float_adder_pipereg_2to3_signed_shift_333;
            float_adder_pipereg_3to4_sticky_344 <= float_adder_pipereg_2to3_sticky_336;
            float_adder_pipereg_3to4_w_en_339 <= float_adder_pipereg_2to3_w_en_328;
            float_multiplier_pipereg_0to1_exp_a_302 <= tmp46390;
            float_multiplier_pipereg_0to1_exp_b_303 <= tmp46391;
            float_multiplier_pipereg_0to1_mantissa_a_304 <= tmp46394;
            float_multiplier_pipereg_0to1_mantissa_b_305 <= tmp46395;
            float_multiplier_pipereg_0to1_sign_a_300 <= tmp46386;
            float_multiplier_pipereg_0to1_sign_b_301 <= tmp46387;
            float_multiplier_pipereg_1to2_exp_sum_307 <= tmp46403;
            float_multiplier_pipereg_1to2_mant_product_308 <= tmp46404;
            float_multiplier_pipereg_1to2_sign_out_306 <= tmp46400;
            float_multiplier_pipereg_2to3_leading_zeros_311 <= tmp46407;
            float_multiplier_pipereg_2to3_mant_product_310 <= float_multiplier_pipereg_1to2_mant_product_308;
            float_multiplier_pipereg_2to3_sign_out_309 <= float_multiplier_pipereg_1to2_sign_out_306;
            float_multiplier_pipereg_2to3_unbiased_exp_312 <= tmp46535;
            tmp46382 <= tmp46898;
            tmp46383 <= tmp46899;
            tmp46384 <= tmp46900;
            tmp46618 <= tmp46619;
        end
    end

endmodule

