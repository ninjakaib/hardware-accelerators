// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, accum_in, adder_en, adder_w_en_in3067116, data_en, data_in, mul_en, weight_en, weight_in, out3067087, out3067088, out3067089);
    input clk;
    input rst;
    input[15:0] accum_in;
    input adder_en;
    input adder_w_en_in3067116;
    input data_en;
    input[15:0] data_in;
    input mul_en;
    input weight_en;
    input[15:0] weight_in;
    output[15:0] out3067087;
    output[15:0] out3067088;
    output[15:0] out3067089;

    reg[7:0] float_adder_pipereg_0to1_exp_a_37885;
    reg[7:0] float_adder_pipereg_0to1_exp_b_37886;
    reg[7:0] float_adder_pipereg_0to1_mant_a_37887;
    reg[7:0] float_adder_pipereg_0to1_mant_b_37888;
    reg float_adder_pipereg_0to1_sign_a_37883;
    reg float_adder_pipereg_0to1_sign_b_37884;
    reg float_adder_pipereg_0to1_w_en_37882;
    reg[7:0] float_adder_pipereg_1to2_exp_larger_37893;
    reg[7:0] float_adder_pipereg_1to2_mant_larger_37896;
    reg[7:0] float_adder_pipereg_1to2_mant_smaller_37895;
    reg float_adder_pipereg_1to2_sign_a_37890;
    reg float_adder_pipereg_1to2_sign_b_37891;
    reg float_adder_pipereg_1to2_sign_xor_37892;
    reg[8:0] float_adder_pipereg_1to2_signed_shift_37894;
    reg float_adder_pipereg_1to2_w_en_37889;
    reg[7:0] float_adder_pipereg_2to3_aligned_mant_msb_37904;
    reg[7:0] float_adder_pipereg_2to3_exp_larger_37901;
    reg float_adder_pipereg_2to3_guard_37906;
    reg[7:0] float_adder_pipereg_2to3_mant_larger_37903;
    reg float_adder_pipereg_2to3_round_37907;
    reg float_adder_pipereg_2to3_sign_a_37898;
    reg float_adder_pipereg_2to3_sign_b_37899;
    reg float_adder_pipereg_2to3_sign_xor_37900;
    reg[8:0] float_adder_pipereg_2to3_signed_shift_37902;
    reg float_adder_pipereg_2to3_sticky_37905;
    reg float_adder_pipereg_2to3_w_en_37897;
    reg[7:0] float_adder_pipereg_3to4_exp_larger_37911;
    reg float_adder_pipereg_3to4_guard_37914;
    reg float_adder_pipereg_3to4_is_neg_37917;
    reg[3:0] float_adder_pipereg_3to4_lzc_37918;
    reg[8:0] float_adder_pipereg_3to4_mant_sum_37916;
    reg float_adder_pipereg_3to4_round_37915;
    reg float_adder_pipereg_3to4_sign_a_37909;
    reg float_adder_pipereg_3to4_sign_b_37910;
    reg[8:0] float_adder_pipereg_3to4_signed_shift_37912;
    reg float_adder_pipereg_3to4_sticky_37913;
    reg float_adder_pipereg_3to4_w_en_37908;
    reg[15:0] tmp3067087;
    reg[15:0] tmp3067088;
    reg[15:0] tmp3067089;
    reg[15:0] tmp3067090;
    reg[15:0] tmp3067091;
    reg tmp3067092;
    reg[16:0] tmp3067093;
    reg[15:0] tmp3067094;
    reg[15:0] tmp3067114;

    wire[14:0] const_498223_16520;
    wire[14:0] const_498224_32767;
    wire const_498225_0;
    wire[14:0] const_498226_0;
    wire const_498227_1;
    wire const_498228_1;
    wire const_498229_1;
    wire const_498230_0;
    wire const_498231_0;
    wire[4:0] const_498232_16;
    wire const_498233_0;
    wire[4:0] const_498234_16;
    wire const_498235_0;
    wire[7:0] const_498236_0;
    wire const_498237_0;
    wire const_498238_0;
    wire const_498239_0;
    wire const_498240_0;
    wire const_498241_0;
    wire const_498242_0;
    wire const_498243_0;
    wire const_498244_0;
    wire const_498245_1;
    wire const_498246_0;
    wire const_498247_0;
    wire const_498248_0;
    wire const_498249_0;
    wire[1:0] const_498250_2;
    wire const_498251_1;
    wire const_498252_0;
    wire[1:0] const_498253_1;
    wire[1:0] const_498254_0;
    wire const_498255_0;
    wire const_498256_0;
    wire const_498257_0;
    wire const_498258_0;
    wire[1:0] const_498259_2;
    wire const_498260_1;
    wire const_498261_0;
    wire[1:0] const_498262_1;
    wire[1:0] const_498263_0;
    wire const_498264_0;
    wire const_498265_0;
    wire const_498266_0;
    wire const_498267_0;
    wire[1:0] const_498268_2;
    wire const_498269_1;
    wire const_498270_0;
    wire[1:0] const_498271_1;
    wire[1:0] const_498272_0;
    wire const_498273_0;
    wire const_498274_0;
    wire const_498275_0;
    wire const_498276_0;
    wire[1:0] const_498277_2;
    wire const_498278_1;
    wire const_498279_0;
    wire[1:0] const_498280_1;
    wire[1:0] const_498281_0;
    wire const_498282_0;
    wire const_498283_0;
    wire[2:0] const_498284_4;
    wire[1:0] const_498285_1;
    wire const_498286_0;
    wire const_498287_0;
    wire const_498288_0;
    wire[2:0] const_498289_4;
    wire[1:0] const_498290_1;
    wire const_498291_0;
    wire const_498292_0;
    wire const_498293_0;
    wire[3:0] const_498294_8;
    wire[1:0] const_498295_1;
    wire const_498296_0;
    wire const_498297_0;
    wire const_498298_0;
    wire const_498299_1;
    wire const_498300_0;
    wire const_498301_0;
    wire const_498302_0;
    wire const_498303_0;
    wire const_498304_0;
    wire const_498305_1;
    wire const_498306_0;
    wire const_498307_0;
    wire const_498308_0;
    wire const_498309_0;
    wire const_498310_0;
    wire const_498311_0;
    wire[15:0] const_498312_0;
    wire const_498313_0;
    wire const_498314_0;
    wire[15:0] tmp3067081;
    wire[15:0] tmp3067082;
    wire[15:0] tmp3067083;
    wire tmp3067084;
    wire tmp3067085;
    wire tmp3067086;
    wire tmp3067095;
    wire tmp3067096;
    wire[14:0] tmp3067097;
    wire[14:0] tmp3067098;
    wire tmp3067099;
    wire[15:0] tmp3067100;
    wire tmp3067101;
    wire[15:0] tmp3067102;
    wire[16:0] tmp3067103;
    wire[1:0] tmp3067104;
    wire[14:0] tmp3067105;
    wire tmp3067106;
    wire tmp3067107;
    wire[14:0] tmp3067108;
    wire tmp3067109;
    wire[14:0] tmp3067110;
    wire[14:0] tmp3067111;
    wire[15:0] tmp3067112;
    wire tmp3067113;
    wire[15:0] tmp3067115;
    wire[15:0] tmp3067117;
    wire tmp3067118;
    wire tmp3067119;
    wire tmp3067120;
    wire tmp3067121;
    wire[7:0] tmp3067122;
    wire[7:0] tmp3067123;
    wire[7:0] tmp3067124;
    wire[7:0] tmp3067125;
    wire[7:0] tmp3067126;
    wire[7:0] tmp3067127;
    wire[6:0] tmp3067128;
    wire[7:0] tmp3067129;
    wire[6:0] tmp3067130;
    wire[7:0] tmp3067131;
    wire tmp3067132;
    wire[8:0] tmp3067133;
    wire[8:0] tmp3067134;
    wire[7:0] tmp3067135;
    wire[7:0] tmp3067136;
    wire[7:0] tmp3067137;
    wire tmp3067138;
    wire[8:0] tmp3067139;
    wire tmp3067140;
    wire tmp3067141;
    wire[7:0] tmp3067142;
    wire[7:0] tmp3067143;
    wire tmp3067144;
    wire[7:0] tmp3067145;
    wire[7:0] tmp3067146;
    wire[6:0] tmp3067147;
    wire[7:0] tmp3067148;
    wire[8:0] tmp3067149;
    wire[7:0] tmp3067150;
    wire[8:0] tmp3067151;
    wire tmp3067152;
    wire[8:0] tmp3067153;
    wire[8:0] tmp3067154;
    wire tmp3067155;
    wire[7:0] tmp3067156;
    wire tmp3067157;
    wire[7:0] tmp3067158;
    wire[7:0] tmp3067159;
    wire[7:0] tmp3067160;
    wire[7:0] tmp3067161;
    wire[2:0] tmp3067162;
    wire[7:0] tmp3067163;
    wire tmp3067164;
    wire[2:0] tmp3067165;
    wire[7:0] tmp3067166;
    wire[7:0] tmp3067167;
    wire[15:0] tmp3067168;
    wire[15:0] tmp3067169;
    wire[14:0] tmp3067170;
    wire[15:0] tmp3067171;
    wire[14:0] tmp3067172;
    wire[15:0] tmp3067173;
    wire[15:0] tmp3067174;
    wire tmp3067175;
    wire[15:0] tmp3067176;
    wire[1:0] tmp3067177;
    wire[1:0] tmp3067178;
    wire[13:0] tmp3067179;
    wire[15:0] tmp3067180;
    wire[13:0] tmp3067181;
    wire[15:0] tmp3067182;
    wire[15:0] tmp3067183;
    wire tmp3067184;
    wire[15:0] tmp3067185;
    wire[3:0] tmp3067186;
    wire[3:0] tmp3067187;
    wire[11:0] tmp3067188;
    wire[15:0] tmp3067189;
    wire[11:0] tmp3067190;
    wire[15:0] tmp3067191;
    wire[15:0] tmp3067192;
    wire tmp3067193;
    wire[15:0] tmp3067194;
    wire[7:0] tmp3067195;
    wire[7:0] tmp3067196;
    wire[7:0] tmp3067197;
    wire[15:0] tmp3067198;
    wire[7:0] tmp3067199;
    wire[15:0] tmp3067200;
    wire[15:0] tmp3067201;
    wire tmp3067202;
    wire[15:0] tmp3067203;
    wire[15:0] tmp3067204;
    wire[15:0] tmp3067205;
    wire tmp3067206;
    wire[15:0] tmp3067207;
    wire tmp3067208;
    wire[15:0] tmp3067209;
    wire tmp3067210;
    wire[15:0] tmp3067211;
    wire tmp3067212;
    wire[15:0] tmp3067213;
    wire[7:0] tmp3067214;
    wire[7:0] tmp3067215;
    wire tmp3067216;
    wire tmp3067217;
    wire tmp3067218;
    wire tmp3067219;
    wire tmp3067220;
    wire[5:0] tmp3067221;
    wire[2:0] tmp3067222;
    wire tmp3067223;
    wire tmp3067224;
    wire[1:0] tmp3067225;
    wire tmp3067226;
    wire tmp3067227;
    wire tmp3067228;
    wire tmp3067229;
    wire tmp3067230;
    wire tmp3067231;
    wire[2:0] tmp3067232;
    wire tmp3067233;
    wire tmp3067234;
    wire[1:0] tmp3067235;
    wire tmp3067236;
    wire tmp3067237;
    wire tmp3067238;
    wire tmp3067239;
    wire tmp3067240;
    wire tmp3067241;
    wire tmp3067242;
    wire[9:0] tmp3067243;
    wire tmp3067244;
    wire[8:0] tmp3067245;
    wire tmp3067246;
    wire[8:0] tmp3067247;
    wire[9:0] tmp3067248;
    wire tmp3067249;
    wire[8:0] tmp3067250;
    wire tmp3067251;
    wire[8:0] tmp3067252;
    wire[9:0] tmp3067253;
    wire tmp3067254;
    wire[8:0] tmp3067255;
    wire[9:0] tmp3067256;
    wire[9:0] tmp3067257;
    wire[9:0] tmp3067258;
    wire tmp3067259;
    wire tmp3067260;
    wire[8:0] tmp3067261;
    wire[9:0] tmp3067262;
    wire[8:0] tmp3067263;
    wire[9:0] tmp3067264;
    wire[10:0] tmp3067265;
    wire tmp3067266;
    wire[10:0] tmp3067267;
    wire[10:0] tmp3067268;
    wire[8:0] tmp3067269;
    wire tmp3067270;
    wire[3:0] tmp3067271;
    wire[7:0] tmp3067272;
    wire[1:0] tmp3067273;
    wire[1:0] tmp3067274;
    wire[1:0] tmp3067275;
    wire[1:0] tmp3067276;
    wire[1:0] tmp3067277;
    wire tmp3067278;
    wire[1:0] tmp3067279;
    wire tmp3067280;
    wire tmp3067281;
    wire[1:0] tmp3067282;
    wire tmp3067283;
    wire tmp3067284;
    wire tmp3067285;
    wire tmp3067286;
    wire tmp3067287;
    wire tmp3067288;
    wire tmp3067289;
    wire[1:0] tmp3067290;
    wire[1:0] tmp3067291;
    wire[1:0] tmp3067292;
    wire[1:0] tmp3067293;
    wire[1:0] tmp3067294;
    wire tmp3067295;
    wire[1:0] tmp3067296;
    wire tmp3067297;
    wire tmp3067298;
    wire[1:0] tmp3067299;
    wire tmp3067300;
    wire tmp3067301;
    wire tmp3067302;
    wire tmp3067303;
    wire tmp3067304;
    wire tmp3067305;
    wire tmp3067306;
    wire[1:0] tmp3067307;
    wire[1:0] tmp3067308;
    wire[1:0] tmp3067309;
    wire[1:0] tmp3067310;
    wire[1:0] tmp3067311;
    wire tmp3067312;
    wire[1:0] tmp3067313;
    wire tmp3067314;
    wire tmp3067315;
    wire[1:0] tmp3067316;
    wire tmp3067317;
    wire tmp3067318;
    wire tmp3067319;
    wire tmp3067320;
    wire tmp3067321;
    wire tmp3067322;
    wire tmp3067323;
    wire[1:0] tmp3067324;
    wire[1:0] tmp3067325;
    wire[1:0] tmp3067326;
    wire[1:0] tmp3067327;
    wire[1:0] tmp3067328;
    wire tmp3067329;
    wire[1:0] tmp3067330;
    wire tmp3067331;
    wire tmp3067332;
    wire[1:0] tmp3067333;
    wire tmp3067334;
    wire tmp3067335;
    wire tmp3067336;
    wire tmp3067337;
    wire tmp3067338;
    wire tmp3067339;
    wire tmp3067340;
    wire[1:0] tmp3067341;
    wire[1:0] tmp3067342;
    wire[1:0] tmp3067343;
    wire[1:0] tmp3067344;
    wire[2:0] tmp3067345;
    wire tmp3067346;
    wire tmp3067347;
    wire tmp3067348;
    wire tmp3067349;
    wire[2:0] tmp3067350;
    wire tmp3067351;
    wire tmp3067352;
    wire[2:0] tmp3067353;
    wire tmp3067354;
    wire tmp3067355;
    wire tmp3067356;
    wire[1:0] tmp3067357;
    wire[2:0] tmp3067358;
    wire[2:0] tmp3067359;
    wire[2:0] tmp3067360;
    wire[2:0] tmp3067361;
    wire[2:0] tmp3067362;
    wire tmp3067363;
    wire tmp3067364;
    wire tmp3067365;
    wire tmp3067366;
    wire[2:0] tmp3067367;
    wire tmp3067368;
    wire tmp3067369;
    wire[2:0] tmp3067370;
    wire tmp3067371;
    wire tmp3067372;
    wire tmp3067373;
    wire[1:0] tmp3067374;
    wire[2:0] tmp3067375;
    wire[2:0] tmp3067376;
    wire[2:0] tmp3067377;
    wire[2:0] tmp3067378;
    wire[3:0] tmp3067379;
    wire[3:0] tmp3067380;
    wire tmp3067381;
    wire tmp3067382;
    wire tmp3067383;
    wire[1:0] tmp3067384;
    wire[3:0] tmp3067385;
    wire tmp3067386;
    wire tmp3067387;
    wire[3:0] tmp3067388;
    wire tmp3067389;
    wire tmp3067390;
    wire tmp3067391;
    wire[2:0] tmp3067392;
    wire[3:0] tmp3067393;
    wire[3:0] tmp3067394;
    wire[3:0] tmp3067395;
    wire[3:0] tmp3067396;
    wire[2:0] tmp3067397;
    wire[3:0] tmp3067398;
    wire[4:0] tmp3067399;
    wire[3:0] tmp3067400;
    wire[4:0] tmp3067401;
    wire[4:0] tmp3067402;
    wire[3:0] tmp3067403;
    wire[8:0] tmp3067404;
    wire[4:0] tmp3067405;
    wire[8:0] tmp3067406;
    wire[7:0] tmp3067407;
    wire[8:0] tmp3067408;
    wire[7:0] tmp3067409;
    wire[8:0] tmp3067410;
    wire[8:0] tmp3067411;
    wire tmp3067412;
    wire[8:0] tmp3067413;
    wire[1:0] tmp3067414;
    wire[1:0] tmp3067415;
    wire[6:0] tmp3067416;
    wire[8:0] tmp3067417;
    wire[6:0] tmp3067418;
    wire[8:0] tmp3067419;
    wire[8:0] tmp3067420;
    wire tmp3067421;
    wire[8:0] tmp3067422;
    wire[3:0] tmp3067423;
    wire[3:0] tmp3067424;
    wire[4:0] tmp3067425;
    wire[8:0] tmp3067426;
    wire[4:0] tmp3067427;
    wire[8:0] tmp3067428;
    wire[8:0] tmp3067429;
    wire tmp3067430;
    wire[8:0] tmp3067431;
    wire[7:0] tmp3067432;
    wire[7:0] tmp3067433;
    wire tmp3067434;
    wire[8:0] tmp3067435;
    wire tmp3067436;
    wire[8:0] tmp3067437;
    wire[8:0] tmp3067438;
    wire tmp3067439;
    wire[8:0] tmp3067440;
    wire[15:0] tmp3067441;
    wire[8:0] tmp3067442;
    wire tmp3067443;
    wire[8:0] tmp3067444;
    wire tmp3067445;
    wire[8:0] tmp3067446;
    wire tmp3067447;
    wire[8:0] tmp3067448;
    wire tmp3067449;
    wire[8:0] tmp3067450;
    wire tmp3067451;
    wire[8:0] tmp3067452;
    wire tmp3067453;
    wire tmp3067454;
    wire tmp3067455;
    wire tmp3067456;
    wire tmp3067457;
    wire tmp3067458;
    wire tmp3067459;
    wire tmp3067460;
    wire tmp3067461;
    wire tmp3067462;
    wire[8:0] tmp3067463;
    wire[7:0] tmp3067464;
    wire[8:0] tmp3067465;
    wire[9:0] tmp3067466;
    wire[8:0] tmp3067467;
    wire tmp3067468;
    wire tmp3067469;
    wire[6:0] tmp3067470;
    wire[6:0] tmp3067471;
    wire[6:0] tmp3067472;
    wire[6:0] tmp3067473;
    wire[7:0] tmp3067474;
    wire[3:0] tmp3067475;
    wire[7:0] tmp3067476;
    wire[8:0] tmp3067477;
    wire[7:0] tmp3067478;
    wire[7:0] tmp3067479;
    wire[6:0] tmp3067480;
    wire[7:0] tmp3067481;
    wire[8:0] tmp3067482;
    wire[7:0] tmp3067483;
    wire tmp3067484;
    wire tmp3067485;
    wire tmp3067486;
    wire[7:0] tmp3067487;
    wire[6:0] tmp3067488;
    wire[7:0] tmp3067489;
    wire tmp3067490;
    wire tmp3067491;
    wire tmp3067492;
    wire tmp3067493;
    wire tmp3067494;
    wire tmp3067495;
    wire tmp3067496;
    wire tmp3067497;
    wire tmp3067498;
    wire tmp3067499;
    wire tmp3067500;
    wire tmp3067501;
    wire tmp3067502;
    wire tmp3067503;
    wire tmp3067504;
    wire tmp3067505;
    wire tmp3067506;
    wire tmp3067507;
    wire[15:0] tmp3067508;
    wire tmp3067509;
    wire[14:0] tmp3067510;
    wire[15:0] tmp3067511;
    wire[15:0] tmp3067512;
    wire[15:0] tmp3067513;
    wire[15:0] tmp3067514;
    wire[15:0] tmp3067515;
    wire[15:0] tmp3067516;

    // Combinational
    assign const_498223_16520 = 16520;
    assign const_498224_32767 = 32767;
    assign const_498225_0 = 0;
    assign const_498226_0 = 0;
    assign const_498227_1 = 1;
    assign const_498228_1 = 1;
    assign const_498229_1 = 1;
    assign const_498230_0 = 0;
    assign const_498231_0 = 0;
    assign const_498232_16 = 16;
    assign const_498233_0 = 0;
    assign const_498234_16 = 16;
    assign const_498235_0 = 0;
    assign const_498236_0 = 0;
    assign const_498237_0 = 0;
    assign const_498238_0 = 0;
    assign const_498239_0 = 0;
    assign const_498240_0 = 0;
    assign const_498241_0 = 0;
    assign const_498242_0 = 0;
    assign const_498243_0 = 0;
    assign const_498244_0 = 0;
    assign const_498245_1 = 1;
    assign const_498246_0 = 0;
    assign const_498247_0 = 0;
    assign const_498248_0 = 0;
    assign const_498249_0 = 0;
    assign const_498250_2 = 2;
    assign const_498251_1 = 1;
    assign const_498252_0 = 0;
    assign const_498253_1 = 1;
    assign const_498254_0 = 0;
    assign const_498255_0 = 0;
    assign const_498256_0 = 0;
    assign const_498257_0 = 0;
    assign const_498258_0 = 0;
    assign const_498259_2 = 2;
    assign const_498260_1 = 1;
    assign const_498261_0 = 0;
    assign const_498262_1 = 1;
    assign const_498263_0 = 0;
    assign const_498264_0 = 0;
    assign const_498265_0 = 0;
    assign const_498266_0 = 0;
    assign const_498267_0 = 0;
    assign const_498268_2 = 2;
    assign const_498269_1 = 1;
    assign const_498270_0 = 0;
    assign const_498271_1 = 1;
    assign const_498272_0 = 0;
    assign const_498273_0 = 0;
    assign const_498274_0 = 0;
    assign const_498275_0 = 0;
    assign const_498276_0 = 0;
    assign const_498277_2 = 2;
    assign const_498278_1 = 1;
    assign const_498279_0 = 0;
    assign const_498280_1 = 1;
    assign const_498281_0 = 0;
    assign const_498282_0 = 0;
    assign const_498283_0 = 0;
    assign const_498284_4 = 4;
    assign const_498285_1 = 1;
    assign const_498286_0 = 0;
    assign const_498287_0 = 0;
    assign const_498288_0 = 0;
    assign const_498289_4 = 4;
    assign const_498290_1 = 1;
    assign const_498291_0 = 0;
    assign const_498292_0 = 0;
    assign const_498293_0 = 0;
    assign const_498294_8 = 8;
    assign const_498295_1 = 1;
    assign const_498296_0 = 0;
    assign const_498297_0 = 0;
    assign const_498298_0 = 0;
    assign const_498299_1 = 1;
    assign const_498300_0 = 0;
    assign const_498301_0 = 0;
    assign const_498302_0 = 0;
    assign const_498303_0 = 0;
    assign const_498304_0 = 0;
    assign const_498305_1 = 1;
    assign const_498306_0 = 0;
    assign const_498307_0 = 0;
    assign const_498308_0 = 0;
    assign const_498309_0 = 0;
    assign const_498310_0 = 0;
    assign const_498311_0 = 0;
    assign const_498312_0 = 0;
    assign const_498313_0 = 0;
    assign const_498314_0 = 0;
    assign out3067087 = tmp3067087;
    assign out3067088 = tmp3067088;
    assign out3067089 = tmp3067089;
    assign tmp3067081 = data_in;
    assign tmp3067082 = weight_in;
    assign tmp3067083 = accum_in;
    assign tmp3067084 = weight_en;
    assign tmp3067085 = data_en;
    assign tmp3067086 = adder_en;
    assign tmp3067095 = {tmp3067090[15]};
    assign tmp3067096 = {tmp3067091[15]};
    assign tmp3067097 = {tmp3067090[14], tmp3067090[13], tmp3067090[12], tmp3067090[11], tmp3067090[10], tmp3067090[9], tmp3067090[8], tmp3067090[7], tmp3067090[6], tmp3067090[5], tmp3067090[4], tmp3067090[3], tmp3067090[2], tmp3067090[1], tmp3067090[0]};
    assign tmp3067098 = {tmp3067091[14], tmp3067091[13], tmp3067091[12], tmp3067091[11], tmp3067091[10], tmp3067091[9], tmp3067091[8], tmp3067091[7], tmp3067091[6], tmp3067091[5], tmp3067091[4], tmp3067091[3], tmp3067091[2], tmp3067091[1], tmp3067091[0]};
    assign tmp3067099 = tmp3067095 ^ tmp3067096;
    assign tmp3067100 = tmp3067097 + tmp3067098;
    assign tmp3067101 = {const_498225_0};
    assign tmp3067102 = {tmp3067101, const_498223_16520};
    assign tmp3067103 = tmp3067100 + tmp3067102;
    assign tmp3067104 = {tmp3067093[16], tmp3067093[15]};
    assign tmp3067105 = {tmp3067093[14], tmp3067093[13], tmp3067093[12], tmp3067093[11], tmp3067093[10], tmp3067093[9], tmp3067093[8], tmp3067093[7], tmp3067093[6], tmp3067093[5], tmp3067093[4], tmp3067093[3], tmp3067093[2], tmp3067093[1], tmp3067093[0]};
    assign tmp3067106 = {tmp3067104[1]};
    assign tmp3067107 = {tmp3067104[0]};
    assign tmp3067108 = tmp3067107 ? tmp3067105 : const_498226_0;
    assign tmp3067109 = {tmp3067104[0]};
    assign tmp3067110 = tmp3067109 ? const_498224_32767 : const_498224_32767;
    assign tmp3067111 = tmp3067106 ? tmp3067110 : tmp3067108;
    assign tmp3067112 = {tmp3067092, tmp3067111};
    assign tmp3067113 = mul_en;
    assign tmp3067115 = tmp3067113 ? tmp3067094 : tmp3067114;
    assign tmp3067117 = tmp3067513;
    assign tmp3067118 = tmp3067120;
    assign tmp3067119 = tmp3067121;
    assign tmp3067120 = {tmp3067114[15]};
    assign tmp3067121 = {tmp3067083[15]};
    assign tmp3067122 = tmp3067124;
    assign tmp3067123 = tmp3067125;
    assign tmp3067124 = {tmp3067114[14], tmp3067114[13], tmp3067114[12], tmp3067114[11], tmp3067114[10], tmp3067114[9], tmp3067114[8], tmp3067114[7]};
    assign tmp3067125 = {tmp3067083[14], tmp3067083[13], tmp3067083[12], tmp3067083[11], tmp3067083[10], tmp3067083[9], tmp3067083[8], tmp3067083[7]};
    assign tmp3067126 = tmp3067129;
    assign tmp3067127 = tmp3067131;
    assign tmp3067128 = {tmp3067114[6], tmp3067114[5], tmp3067114[4], tmp3067114[3], tmp3067114[2], tmp3067114[1], tmp3067114[0]};
    assign tmp3067129 = {const_498227_1, tmp3067128};
    assign tmp3067130 = {tmp3067083[6], tmp3067083[5], tmp3067083[4], tmp3067083[3], tmp3067083[2], tmp3067083[1], tmp3067083[0]};
    assign tmp3067131 = {const_498228_1, tmp3067130};
    assign tmp3067132 = tmp3067138;
    assign tmp3067133 = tmp3067139;
    assign tmp3067134 = tmp3067154;
    assign tmp3067135 = tmp3067142;
    assign tmp3067136 = tmp3067156;
    assign tmp3067137 = tmp3067158;
    assign tmp3067138 = float_adder_pipereg_0to1_sign_a_37883 ^ float_adder_pipereg_0to1_sign_b_37884;
    assign tmp3067139 = float_adder_pipereg_0to1_exp_a_37885 - float_adder_pipereg_0to1_exp_b_37886;
    assign tmp3067140 = {tmp3067133[8]};
    assign tmp3067141 = {tmp3067133[8]};
    assign tmp3067142 = tmp3067141 ? float_adder_pipereg_0to1_exp_b_37886 : float_adder_pipereg_0to1_exp_a_37885;
    assign tmp3067143 = {tmp3067133[7], tmp3067133[6], tmp3067133[5], tmp3067133[4], tmp3067133[3], tmp3067133[2], tmp3067133[1], tmp3067133[0]};
    assign tmp3067144 = {tmp3067133[8]};
    assign tmp3067145 = {tmp3067133[7], tmp3067133[6], tmp3067133[5], tmp3067133[4], tmp3067133[3], tmp3067133[2], tmp3067133[1], tmp3067133[0]};
    assign tmp3067146 = ~tmp3067145;
    assign tmp3067147 = {const_498230_0, const_498230_0, const_498230_0, const_498230_0, const_498230_0, const_498230_0, const_498230_0};
    assign tmp3067148 = {tmp3067147, const_498229_1};
    assign tmp3067149 = tmp3067146 + tmp3067148;
    assign tmp3067150 = {tmp3067149[7], tmp3067149[6], tmp3067149[5], tmp3067149[4], tmp3067149[3], tmp3067149[2], tmp3067149[1], tmp3067149[0]};
    assign tmp3067151 = {tmp3067144, tmp3067150};
    assign tmp3067152 = {const_498231_0};
    assign tmp3067153 = {tmp3067152, tmp3067143};
    assign tmp3067154 = tmp3067140 ? tmp3067151 : tmp3067153;
    assign tmp3067155 = {tmp3067133[8]};
    assign tmp3067156 = tmp3067155 ? float_adder_pipereg_0to1_mant_a_37887 : float_adder_pipereg_0to1_mant_b_37888;
    assign tmp3067157 = {tmp3067133[8]};
    assign tmp3067158 = tmp3067157 ? float_adder_pipereg_0to1_mant_b_37888 : float_adder_pipereg_0to1_mant_a_37887;
    assign tmp3067159 = tmp3067160;
    assign tmp3067160 = {float_adder_pipereg_1to2_signed_shift_37894[7], float_adder_pipereg_1to2_signed_shift_37894[6], float_adder_pipereg_1to2_signed_shift_37894[5], float_adder_pipereg_1to2_signed_shift_37894[4], float_adder_pipereg_1to2_signed_shift_37894[3], float_adder_pipereg_1to2_signed_shift_37894[2], float_adder_pipereg_1to2_signed_shift_37894[1], float_adder_pipereg_1to2_signed_shift_37894[0]};
    assign tmp3067161 = tmp3067167;
    assign tmp3067162 = {const_498233_0, const_498233_0, const_498233_0};
    assign tmp3067163 = {tmp3067162, const_498232_16};
    assign tmp3067164 = tmp3067159 > tmp3067163;
    assign tmp3067165 = {const_498235_0, const_498235_0, const_498235_0};
    assign tmp3067166 = {tmp3067165, const_498234_16};
    assign tmp3067167 = tmp3067164 ? tmp3067166 : tmp3067159;
    assign tmp3067168 = {float_adder_pipereg_1to2_mant_smaller_37895, const_498236_0};
    assign tmp3067169 = tmp3067213;
    assign tmp3067170 = {tmp3067168[14], tmp3067168[13], tmp3067168[12], tmp3067168[11], tmp3067168[10], tmp3067168[9], tmp3067168[8], tmp3067168[7], tmp3067168[6], tmp3067168[5], tmp3067168[4], tmp3067168[3], tmp3067168[2], tmp3067168[1], tmp3067168[0]};
    assign tmp3067171 = {tmp3067170, const_498237_0};
    assign tmp3067172 = {tmp3067168[15], tmp3067168[14], tmp3067168[13], tmp3067168[12], tmp3067168[11], tmp3067168[10], tmp3067168[9], tmp3067168[8], tmp3067168[7], tmp3067168[6], tmp3067168[5], tmp3067168[4], tmp3067168[3], tmp3067168[2], tmp3067168[1]};
    assign tmp3067173 = {const_498237_0, tmp3067172};
    assign tmp3067174 = const_498238_0 ? tmp3067171 : tmp3067173;
    assign tmp3067175 = {tmp3067161[0]};
    assign tmp3067176 = tmp3067175 ? tmp3067174 : tmp3067168;
    assign tmp3067177 = {const_498237_0, const_498237_0};
    assign tmp3067178 = {tmp3067177[1], tmp3067177[0]};
    assign tmp3067179 = {tmp3067176[13], tmp3067176[12], tmp3067176[11], tmp3067176[10], tmp3067176[9], tmp3067176[8], tmp3067176[7], tmp3067176[6], tmp3067176[5], tmp3067176[4], tmp3067176[3], tmp3067176[2], tmp3067176[1], tmp3067176[0]};
    assign tmp3067180 = {tmp3067179, tmp3067178};
    assign tmp3067181 = {tmp3067176[15], tmp3067176[14], tmp3067176[13], tmp3067176[12], tmp3067176[11], tmp3067176[10], tmp3067176[9], tmp3067176[8], tmp3067176[7], tmp3067176[6], tmp3067176[5], tmp3067176[4], tmp3067176[3], tmp3067176[2]};
    assign tmp3067182 = {tmp3067178, tmp3067181};
    assign tmp3067183 = const_498238_0 ? tmp3067180 : tmp3067182;
    assign tmp3067184 = {tmp3067161[1]};
    assign tmp3067185 = tmp3067184 ? tmp3067183 : tmp3067176;
    assign tmp3067186 = {tmp3067178, tmp3067178};
    assign tmp3067187 = {tmp3067186[3], tmp3067186[2], tmp3067186[1], tmp3067186[0]};
    assign tmp3067188 = {tmp3067185[11], tmp3067185[10], tmp3067185[9], tmp3067185[8], tmp3067185[7], tmp3067185[6], tmp3067185[5], tmp3067185[4], tmp3067185[3], tmp3067185[2], tmp3067185[1], tmp3067185[0]};
    assign tmp3067189 = {tmp3067188, tmp3067187};
    assign tmp3067190 = {tmp3067185[15], tmp3067185[14], tmp3067185[13], tmp3067185[12], tmp3067185[11], tmp3067185[10], tmp3067185[9], tmp3067185[8], tmp3067185[7], tmp3067185[6], tmp3067185[5], tmp3067185[4]};
    assign tmp3067191 = {tmp3067187, tmp3067190};
    assign tmp3067192 = const_498238_0 ? tmp3067189 : tmp3067191;
    assign tmp3067193 = {tmp3067161[2]};
    assign tmp3067194 = tmp3067193 ? tmp3067192 : tmp3067185;
    assign tmp3067195 = {tmp3067187, tmp3067187};
    assign tmp3067196 = {tmp3067195[7], tmp3067195[6], tmp3067195[5], tmp3067195[4], tmp3067195[3], tmp3067195[2], tmp3067195[1], tmp3067195[0]};
    assign tmp3067197 = {tmp3067194[7], tmp3067194[6], tmp3067194[5], tmp3067194[4], tmp3067194[3], tmp3067194[2], tmp3067194[1], tmp3067194[0]};
    assign tmp3067198 = {tmp3067197, tmp3067196};
    assign tmp3067199 = {tmp3067194[15], tmp3067194[14], tmp3067194[13], tmp3067194[12], tmp3067194[11], tmp3067194[10], tmp3067194[9], tmp3067194[8]};
    assign tmp3067200 = {tmp3067196, tmp3067199};
    assign tmp3067201 = const_498238_0 ? tmp3067198 : tmp3067200;
    assign tmp3067202 = {tmp3067161[3]};
    assign tmp3067203 = tmp3067202 ? tmp3067201 : tmp3067194;
    assign tmp3067204 = {tmp3067196, tmp3067196};
    assign tmp3067205 = {tmp3067204[15], tmp3067204[14], tmp3067204[13], tmp3067204[12], tmp3067204[11], tmp3067204[10], tmp3067204[9], tmp3067204[8], tmp3067204[7], tmp3067204[6], tmp3067204[5], tmp3067204[4], tmp3067204[3], tmp3067204[2], tmp3067204[1], tmp3067204[0]};
    assign tmp3067206 = {tmp3067161[4]};
    assign tmp3067207 = tmp3067206 ? tmp3067205 : tmp3067203;
    assign tmp3067208 = {tmp3067161[5]};
    assign tmp3067209 = tmp3067208 ? tmp3067205 : tmp3067207;
    assign tmp3067210 = {tmp3067161[6]};
    assign tmp3067211 = tmp3067210 ? tmp3067205 : tmp3067209;
    assign tmp3067212 = {tmp3067161[7]};
    assign tmp3067213 = tmp3067212 ? tmp3067205 : tmp3067211;
    assign tmp3067214 = {tmp3067169[15], tmp3067169[14], tmp3067169[13], tmp3067169[12], tmp3067169[11], tmp3067169[10], tmp3067169[9], tmp3067169[8]};
    assign tmp3067215 = {tmp3067169[7], tmp3067169[6], tmp3067169[5], tmp3067169[4], tmp3067169[3], tmp3067169[2], tmp3067169[1], tmp3067169[0]};
    assign tmp3067216 = tmp3067219;
    assign tmp3067217 = tmp3067220;
    assign tmp3067218 = tmp3067242;
    assign tmp3067219 = {tmp3067215[7]};
    assign tmp3067220 = {tmp3067215[6]};
    assign tmp3067221 = {tmp3067215[5], tmp3067215[4], tmp3067215[3], tmp3067215[2], tmp3067215[1], tmp3067215[0]};
    assign tmp3067222 = {tmp3067221[2], tmp3067221[1], tmp3067221[0]};
    assign tmp3067223 = {tmp3067222[0]};
    assign tmp3067224 = {tmp3067223};
    assign tmp3067225 = {tmp3067222[2], tmp3067222[1]};
    assign tmp3067226 = {tmp3067225[0]};
    assign tmp3067227 = {tmp3067226};
    assign tmp3067228 = {tmp3067225[1]};
    assign tmp3067229 = {tmp3067228};
    assign tmp3067230 = tmp3067227 | tmp3067229;
    assign tmp3067231 = tmp3067224 | tmp3067230;
    assign tmp3067232 = {tmp3067221[5], tmp3067221[4], tmp3067221[3]};
    assign tmp3067233 = {tmp3067232[0]};
    assign tmp3067234 = {tmp3067233};
    assign tmp3067235 = {tmp3067232[2], tmp3067232[1]};
    assign tmp3067236 = {tmp3067235[0]};
    assign tmp3067237 = {tmp3067236};
    assign tmp3067238 = {tmp3067235[1]};
    assign tmp3067239 = {tmp3067238};
    assign tmp3067240 = tmp3067237 | tmp3067239;
    assign tmp3067241 = tmp3067234 | tmp3067240;
    assign tmp3067242 = tmp3067231 | tmp3067241;
    assign tmp3067243 = tmp3067258;
    assign tmp3067244 = {const_498239_0};
    assign tmp3067245 = {tmp3067244, float_adder_pipereg_2to3_mant_larger_37903};
    assign tmp3067246 = {const_498240_0};
    assign tmp3067247 = {tmp3067246, float_adder_pipereg_2to3_aligned_mant_msb_37904};
    assign tmp3067248 = tmp3067245 - tmp3067247;
    assign tmp3067249 = {const_498241_0};
    assign tmp3067250 = {tmp3067249, float_adder_pipereg_2to3_mant_larger_37903};
    assign tmp3067251 = {const_498242_0};
    assign tmp3067252 = {tmp3067251, float_adder_pipereg_2to3_aligned_mant_msb_37904};
    assign tmp3067253 = tmp3067250 + tmp3067252;
    assign tmp3067254 = ~float_adder_pipereg_2to3_sign_xor_37900;
    assign tmp3067255 = {const_498244_0, const_498244_0, const_498244_0, const_498244_0, const_498244_0, const_498244_0, const_498244_0, const_498244_0, const_498244_0};
    assign tmp3067256 = {tmp3067255, const_498243_0};
    assign tmp3067257 = float_adder_pipereg_2to3_sign_xor_37900 ? tmp3067248 : tmp3067256;
    assign tmp3067258 = tmp3067254 ? tmp3067253 : tmp3067257;
    assign tmp3067259 = tmp3067260;
    assign tmp3067260 = {tmp3067243[9]};
    assign tmp3067261 = tmp3067269;
    assign tmp3067262 = ~tmp3067243;
    assign tmp3067263 = {const_498246_0, const_498246_0, const_498246_0, const_498246_0, const_498246_0, const_498246_0, const_498246_0, const_498246_0, const_498246_0};
    assign tmp3067264 = {tmp3067263, const_498245_1};
    assign tmp3067265 = tmp3067262 + tmp3067264;
    assign tmp3067266 = {const_498247_0};
    assign tmp3067267 = {tmp3067266, tmp3067243};
    assign tmp3067268 = tmp3067259 ? tmp3067265 : tmp3067267;
    assign tmp3067269 = {tmp3067268[8], tmp3067268[7], tmp3067268[6], tmp3067268[5], tmp3067268[4], tmp3067268[3], tmp3067268[2], tmp3067268[1], tmp3067268[0]};
    assign tmp3067270 = {tmp3067261[8]};
    assign tmp3067271 = tmp3067403;
    assign tmp3067272 = {tmp3067261[7], tmp3067261[6], tmp3067261[5], tmp3067261[4], tmp3067261[3], tmp3067261[2], tmp3067261[1], tmp3067261[0]};
    assign tmp3067273 = {tmp3067272[7], tmp3067272[6]};
    assign tmp3067274 = {tmp3067272[5], tmp3067272[4]};
    assign tmp3067275 = {tmp3067272[3], tmp3067272[2]};
    assign tmp3067276 = {tmp3067272[1], tmp3067272[0]};
    assign tmp3067277 = tmp3067293;
    assign tmp3067278 = {const_498249_0};
    assign tmp3067279 = {tmp3067278, const_498248_0};
    assign tmp3067280 = tmp3067273 == tmp3067279;
    assign tmp3067281 = {const_498252_0};
    assign tmp3067282 = {tmp3067281, const_498251_1};
    assign tmp3067283 = tmp3067273 == tmp3067282;
    assign tmp3067284 = ~tmp3067280;
    assign tmp3067285 = tmp3067284 & tmp3067283;
    assign tmp3067286 = ~tmp3067280;
    assign tmp3067287 = ~tmp3067283;
    assign tmp3067288 = tmp3067286 & tmp3067287;
    assign tmp3067289 = {const_498256_0};
    assign tmp3067290 = {tmp3067289, const_498255_0};
    assign tmp3067291 = tmp3067280 ? const_498250_2 : tmp3067290;
    assign tmp3067292 = tmp3067285 ? const_498253_1 : tmp3067291;
    assign tmp3067293 = tmp3067288 ? const_498254_0 : tmp3067292;
    assign tmp3067294 = tmp3067310;
    assign tmp3067295 = {const_498258_0};
    assign tmp3067296 = {tmp3067295, const_498257_0};
    assign tmp3067297 = tmp3067274 == tmp3067296;
    assign tmp3067298 = {const_498261_0};
    assign tmp3067299 = {tmp3067298, const_498260_1};
    assign tmp3067300 = tmp3067274 == tmp3067299;
    assign tmp3067301 = ~tmp3067297;
    assign tmp3067302 = tmp3067301 & tmp3067300;
    assign tmp3067303 = ~tmp3067297;
    assign tmp3067304 = ~tmp3067300;
    assign tmp3067305 = tmp3067303 & tmp3067304;
    assign tmp3067306 = {const_498265_0};
    assign tmp3067307 = {tmp3067306, const_498264_0};
    assign tmp3067308 = tmp3067297 ? const_498259_2 : tmp3067307;
    assign tmp3067309 = tmp3067302 ? const_498262_1 : tmp3067308;
    assign tmp3067310 = tmp3067305 ? const_498263_0 : tmp3067309;
    assign tmp3067311 = tmp3067327;
    assign tmp3067312 = {const_498267_0};
    assign tmp3067313 = {tmp3067312, const_498266_0};
    assign tmp3067314 = tmp3067275 == tmp3067313;
    assign tmp3067315 = {const_498270_0};
    assign tmp3067316 = {tmp3067315, const_498269_1};
    assign tmp3067317 = tmp3067275 == tmp3067316;
    assign tmp3067318 = ~tmp3067314;
    assign tmp3067319 = tmp3067318 & tmp3067317;
    assign tmp3067320 = ~tmp3067314;
    assign tmp3067321 = ~tmp3067317;
    assign tmp3067322 = tmp3067320 & tmp3067321;
    assign tmp3067323 = {const_498274_0};
    assign tmp3067324 = {tmp3067323, const_498273_0};
    assign tmp3067325 = tmp3067314 ? const_498268_2 : tmp3067324;
    assign tmp3067326 = tmp3067319 ? const_498271_1 : tmp3067325;
    assign tmp3067327 = tmp3067322 ? const_498272_0 : tmp3067326;
    assign tmp3067328 = tmp3067344;
    assign tmp3067329 = {const_498276_0};
    assign tmp3067330 = {tmp3067329, const_498275_0};
    assign tmp3067331 = tmp3067276 == tmp3067330;
    assign tmp3067332 = {const_498279_0};
    assign tmp3067333 = {tmp3067332, const_498278_1};
    assign tmp3067334 = tmp3067276 == tmp3067333;
    assign tmp3067335 = ~tmp3067331;
    assign tmp3067336 = tmp3067335 & tmp3067334;
    assign tmp3067337 = ~tmp3067331;
    assign tmp3067338 = ~tmp3067334;
    assign tmp3067339 = tmp3067337 & tmp3067338;
    assign tmp3067340 = {const_498283_0};
    assign tmp3067341 = {tmp3067340, const_498282_0};
    assign tmp3067342 = tmp3067331 ? const_498277_2 : tmp3067341;
    assign tmp3067343 = tmp3067336 ? const_498280_1 : tmp3067342;
    assign tmp3067344 = tmp3067339 ? const_498281_0 : tmp3067343;
    assign tmp3067345 = tmp3067361;
    assign tmp3067346 = {tmp3067277[1]};
    assign tmp3067347 = {tmp3067294[1]};
    assign tmp3067348 = tmp3067346 & tmp3067347;
    assign tmp3067349 = {tmp3067294[0]};
    assign tmp3067350 = {const_498285_1, tmp3067349};
    assign tmp3067351 = ~tmp3067348;
    assign tmp3067352 = tmp3067351 & tmp3067346;
    assign tmp3067353 = {const_498286_0, tmp3067277};
    assign tmp3067354 = ~tmp3067348;
    assign tmp3067355 = ~tmp3067346;
    assign tmp3067356 = tmp3067354 & tmp3067355;
    assign tmp3067357 = {const_498288_0, const_498288_0};
    assign tmp3067358 = {tmp3067357, const_498287_0};
    assign tmp3067359 = tmp3067348 ? const_498284_4 : tmp3067358;
    assign tmp3067360 = tmp3067352 ? tmp3067350 : tmp3067359;
    assign tmp3067361 = tmp3067356 ? tmp3067353 : tmp3067360;
    assign tmp3067362 = tmp3067378;
    assign tmp3067363 = {tmp3067311[1]};
    assign tmp3067364 = {tmp3067328[1]};
    assign tmp3067365 = tmp3067363 & tmp3067364;
    assign tmp3067366 = {tmp3067328[0]};
    assign tmp3067367 = {const_498290_1, tmp3067366};
    assign tmp3067368 = ~tmp3067365;
    assign tmp3067369 = tmp3067368 & tmp3067363;
    assign tmp3067370 = {const_498291_0, tmp3067311};
    assign tmp3067371 = ~tmp3067365;
    assign tmp3067372 = ~tmp3067363;
    assign tmp3067373 = tmp3067371 & tmp3067372;
    assign tmp3067374 = {const_498293_0, const_498293_0};
    assign tmp3067375 = {tmp3067374, const_498292_0};
    assign tmp3067376 = tmp3067365 ? const_498289_4 : tmp3067375;
    assign tmp3067377 = tmp3067369 ? tmp3067367 : tmp3067376;
    assign tmp3067378 = tmp3067373 ? tmp3067370 : tmp3067377;
    assign tmp3067379 = tmp3067380;
    assign tmp3067380 = tmp3067396;
    assign tmp3067381 = {tmp3067345[2]};
    assign tmp3067382 = {tmp3067362[2]};
    assign tmp3067383 = tmp3067381 & tmp3067382;
    assign tmp3067384 = {tmp3067362[1], tmp3067362[0]};
    assign tmp3067385 = {const_498295_1, tmp3067384};
    assign tmp3067386 = ~tmp3067383;
    assign tmp3067387 = tmp3067386 & tmp3067381;
    assign tmp3067388 = {const_498296_0, tmp3067345};
    assign tmp3067389 = ~tmp3067383;
    assign tmp3067390 = ~tmp3067381;
    assign tmp3067391 = tmp3067389 & tmp3067390;
    assign tmp3067392 = {const_498298_0, const_498298_0, const_498298_0};
    assign tmp3067393 = {tmp3067392, const_498297_0};
    assign tmp3067394 = tmp3067383 ? const_498294_8 : tmp3067393;
    assign tmp3067395 = tmp3067387 ? tmp3067385 : tmp3067394;
    assign tmp3067396 = tmp3067391 ? tmp3067388 : tmp3067395;
    assign tmp3067397 = {const_498300_0, const_498300_0, const_498300_0};
    assign tmp3067398 = {tmp3067397, const_498299_1};
    assign tmp3067399 = tmp3067379 + tmp3067398;
    assign tmp3067400 = {const_498302_0, const_498302_0, const_498302_0, const_498302_0};
    assign tmp3067401 = {tmp3067400, const_498301_0};
    assign tmp3067402 = tmp3067270 ? tmp3067401 : tmp3067399;
    assign tmp3067403 = {tmp3067402[3], tmp3067402[2], tmp3067402[1], tmp3067402[0]};
    assign tmp3067404 = tmp3067452;
    assign tmp3067405 = {const_498303_0, const_498303_0, const_498303_0, const_498303_0, const_498303_0};
    assign tmp3067406 = {tmp3067405, float_adder_pipereg_3to4_lzc_37918};
    assign tmp3067407 = {float_adder_pipereg_3to4_mant_sum_37916[7], float_adder_pipereg_3to4_mant_sum_37916[6], float_adder_pipereg_3to4_mant_sum_37916[5], float_adder_pipereg_3to4_mant_sum_37916[4], float_adder_pipereg_3to4_mant_sum_37916[3], float_adder_pipereg_3to4_mant_sum_37916[2], float_adder_pipereg_3to4_mant_sum_37916[1], float_adder_pipereg_3to4_mant_sum_37916[0]};
    assign tmp3067408 = {tmp3067407, const_498304_0};
    assign tmp3067409 = {float_adder_pipereg_3to4_mant_sum_37916[8], float_adder_pipereg_3to4_mant_sum_37916[7], float_adder_pipereg_3to4_mant_sum_37916[6], float_adder_pipereg_3to4_mant_sum_37916[5], float_adder_pipereg_3to4_mant_sum_37916[4], float_adder_pipereg_3to4_mant_sum_37916[3], float_adder_pipereg_3to4_mant_sum_37916[2], float_adder_pipereg_3to4_mant_sum_37916[1]};
    assign tmp3067410 = {const_498304_0, tmp3067409};
    assign tmp3067411 = const_498305_1 ? tmp3067408 : tmp3067410;
    assign tmp3067412 = {tmp3067406[0]};
    assign tmp3067413 = tmp3067412 ? tmp3067411 : float_adder_pipereg_3to4_mant_sum_37916;
    assign tmp3067414 = {const_498304_0, const_498304_0};
    assign tmp3067415 = {tmp3067414[1], tmp3067414[0]};
    assign tmp3067416 = {tmp3067413[6], tmp3067413[5], tmp3067413[4], tmp3067413[3], tmp3067413[2], tmp3067413[1], tmp3067413[0]};
    assign tmp3067417 = {tmp3067416, tmp3067415};
    assign tmp3067418 = {tmp3067413[8], tmp3067413[7], tmp3067413[6], tmp3067413[5], tmp3067413[4], tmp3067413[3], tmp3067413[2]};
    assign tmp3067419 = {tmp3067415, tmp3067418};
    assign tmp3067420 = const_498305_1 ? tmp3067417 : tmp3067419;
    assign tmp3067421 = {tmp3067406[1]};
    assign tmp3067422 = tmp3067421 ? tmp3067420 : tmp3067413;
    assign tmp3067423 = {tmp3067415, tmp3067415};
    assign tmp3067424 = {tmp3067423[3], tmp3067423[2], tmp3067423[1], tmp3067423[0]};
    assign tmp3067425 = {tmp3067422[4], tmp3067422[3], tmp3067422[2], tmp3067422[1], tmp3067422[0]};
    assign tmp3067426 = {tmp3067425, tmp3067424};
    assign tmp3067427 = {tmp3067422[8], tmp3067422[7], tmp3067422[6], tmp3067422[5], tmp3067422[4]};
    assign tmp3067428 = {tmp3067424, tmp3067427};
    assign tmp3067429 = const_498305_1 ? tmp3067426 : tmp3067428;
    assign tmp3067430 = {tmp3067406[2]};
    assign tmp3067431 = tmp3067430 ? tmp3067429 : tmp3067422;
    assign tmp3067432 = {tmp3067424, tmp3067424};
    assign tmp3067433 = {tmp3067432[7], tmp3067432[6], tmp3067432[5], tmp3067432[4], tmp3067432[3], tmp3067432[2], tmp3067432[1], tmp3067432[0]};
    assign tmp3067434 = {tmp3067431[0]};
    assign tmp3067435 = {tmp3067434, tmp3067433};
    assign tmp3067436 = {tmp3067431[8]};
    assign tmp3067437 = {tmp3067433, tmp3067436};
    assign tmp3067438 = const_498305_1 ? tmp3067435 : tmp3067437;
    assign tmp3067439 = {tmp3067406[3]};
    assign tmp3067440 = tmp3067439 ? tmp3067438 : tmp3067431;
    assign tmp3067441 = {tmp3067433, tmp3067433};
    assign tmp3067442 = {tmp3067441[8], tmp3067441[7], tmp3067441[6], tmp3067441[5], tmp3067441[4], tmp3067441[3], tmp3067441[2], tmp3067441[1], tmp3067441[0]};
    assign tmp3067443 = {tmp3067406[4]};
    assign tmp3067444 = tmp3067443 ? tmp3067442 : tmp3067440;
    assign tmp3067445 = {tmp3067406[5]};
    assign tmp3067446 = tmp3067445 ? tmp3067442 : tmp3067444;
    assign tmp3067447 = {tmp3067406[6]};
    assign tmp3067448 = tmp3067447 ? tmp3067442 : tmp3067446;
    assign tmp3067449 = {tmp3067406[7]};
    assign tmp3067450 = tmp3067449 ? tmp3067442 : tmp3067448;
    assign tmp3067451 = {tmp3067406[8]};
    assign tmp3067452 = tmp3067451 ? tmp3067442 : tmp3067450;
    assign tmp3067453 = tmp3067462;
    assign tmp3067454 = {tmp3067404[1]};
    assign tmp3067455 = float_adder_pipereg_3to4_round_37915 | float_adder_pipereg_3to4_sticky_37913;
    assign tmp3067456 = float_adder_pipereg_3to4_guard_37914 & tmp3067455;
    assign tmp3067457 = ~float_adder_pipereg_3to4_round_37915;
    assign tmp3067458 = float_adder_pipereg_3to4_guard_37914 & tmp3067457;
    assign tmp3067459 = ~float_adder_pipereg_3to4_sticky_37913;
    assign tmp3067460 = tmp3067458 & tmp3067459;
    assign tmp3067461 = tmp3067460 & tmp3067454;
    assign tmp3067462 = tmp3067456 | tmp3067461;
    assign tmp3067463 = tmp3067467;
    assign tmp3067464 = {const_498306_0, const_498306_0, const_498306_0, const_498306_0, const_498306_0, const_498306_0, const_498306_0, const_498306_0};
    assign tmp3067465 = {tmp3067464, tmp3067453};
    assign tmp3067466 = tmp3067404 + tmp3067465;
    assign tmp3067467 = {tmp3067466[8], tmp3067466[7], tmp3067466[6], tmp3067466[5], tmp3067466[4], tmp3067466[3], tmp3067466[2], tmp3067466[1], tmp3067466[0]};
    assign tmp3067468 = tmp3067469;
    assign tmp3067469 = {tmp3067463[8]};
    assign tmp3067470 = tmp3067473;
    assign tmp3067471 = {tmp3067463[7], tmp3067463[6], tmp3067463[5], tmp3067463[4], tmp3067463[3], tmp3067463[2], tmp3067463[1]};
    assign tmp3067472 = {tmp3067463[6], tmp3067463[5], tmp3067463[4], tmp3067463[3], tmp3067463[2], tmp3067463[1], tmp3067463[0]};
    assign tmp3067473 = tmp3067468 ? tmp3067471 : tmp3067472;
    assign tmp3067474 = tmp3067478;
    assign tmp3067475 = {const_498307_0, const_498307_0, const_498307_0, const_498307_0};
    assign tmp3067476 = {tmp3067475, float_adder_pipereg_3to4_lzc_37918};
    assign tmp3067477 = float_adder_pipereg_3to4_exp_larger_37911 - tmp3067476;
    assign tmp3067478 = {tmp3067477[7], tmp3067477[6], tmp3067477[5], tmp3067477[4], tmp3067477[3], tmp3067477[2], tmp3067477[1], tmp3067477[0]};
    assign tmp3067479 = tmp3067483;
    assign tmp3067480 = {const_498308_0, const_498308_0, const_498308_0, const_498308_0, const_498308_0, const_498308_0, const_498308_0};
    assign tmp3067481 = {tmp3067480, tmp3067468};
    assign tmp3067482 = tmp3067474 + tmp3067481;
    assign tmp3067483 = {tmp3067482[7], tmp3067482[6], tmp3067482[5], tmp3067482[4], tmp3067482[3], tmp3067482[2], tmp3067482[1], tmp3067482[0]};
    assign tmp3067484 = tmp3067507;
    assign tmp3067485 = float_adder_pipereg_3to4_sign_a_37909 ^ float_adder_pipereg_3to4_sign_b_37910;
    assign tmp3067486 = ~tmp3067485;
    assign tmp3067487 = {float_adder_pipereg_3to4_signed_shift_37912[7], float_adder_pipereg_3to4_signed_shift_37912[6], float_adder_pipereg_3to4_signed_shift_37912[5], float_adder_pipereg_3to4_signed_shift_37912[4], float_adder_pipereg_3to4_signed_shift_37912[3], float_adder_pipereg_3to4_signed_shift_37912[2], float_adder_pipereg_3to4_signed_shift_37912[1], float_adder_pipereg_3to4_signed_shift_37912[0]};
    assign tmp3067488 = {const_498310_0, const_498310_0, const_498310_0, const_498310_0, const_498310_0, const_498310_0, const_498310_0};
    assign tmp3067489 = {tmp3067488, const_498309_0};
    assign tmp3067490 = tmp3067487 == tmp3067489;
    assign tmp3067491 = float_adder_pipereg_3to4_is_neg_37917 ^ float_adder_pipereg_3to4_sign_a_37909;
    assign tmp3067492 = ~tmp3067486;
    assign tmp3067493 = tmp3067492 & tmp3067490;
    assign tmp3067494 = {float_adder_pipereg_3to4_signed_shift_37912[8]};
    assign tmp3067495 = ~tmp3067486;
    assign tmp3067496 = ~tmp3067490;
    assign tmp3067497 = tmp3067495 & tmp3067496;
    assign tmp3067498 = tmp3067497 & tmp3067494;
    assign tmp3067499 = ~tmp3067486;
    assign tmp3067500 = ~tmp3067490;
    assign tmp3067501 = tmp3067499 & tmp3067500;
    assign tmp3067502 = ~tmp3067494;
    assign tmp3067503 = tmp3067501 & tmp3067502;
    assign tmp3067504 = tmp3067486 ? float_adder_pipereg_3to4_sign_a_37909 : const_498311_0;
    assign tmp3067505 = tmp3067493 ? tmp3067491 : tmp3067504;
    assign tmp3067506 = tmp3067498 ? float_adder_pipereg_3to4_sign_b_37910 : tmp3067505;
    assign tmp3067507 = tmp3067503 ? float_adder_pipereg_3to4_sign_a_37909 : tmp3067506;
    assign tmp3067508 = {tmp3067484, tmp3067479, tmp3067470};
    assign tmp3067509 = ~float_adder_pipereg_3to4_w_en_37908;
    assign tmp3067510 = {const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0, const_498314_0};
    assign tmp3067511 = {tmp3067510, const_498313_0};
    assign tmp3067512 = float_adder_pipereg_3to4_w_en_37908 ? tmp3067508 : tmp3067511;
    assign tmp3067513 = tmp3067509 ? const_498312_0 : tmp3067512;
    assign tmp3067514 = tmp3067085 ? tmp3067081 : tmp3067087;
    assign tmp3067515 = tmp3067084 ? tmp3067082 : tmp3067088;
    assign tmp3067516 = tmp3067086 ? tmp3067117 : tmp3067089;

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            float_adder_pipereg_0to1_exp_a_37885 <= 0;
            float_adder_pipereg_0to1_exp_b_37886 <= 0;
            float_adder_pipereg_0to1_mant_a_37887 <= 0;
            float_adder_pipereg_0to1_mant_b_37888 <= 0;
            float_adder_pipereg_0to1_sign_a_37883 <= 0;
            float_adder_pipereg_0to1_sign_b_37884 <= 0;
            float_adder_pipereg_0to1_w_en_37882 <= 0;
            float_adder_pipereg_1to2_exp_larger_37893 <= 0;
            float_adder_pipereg_1to2_mant_larger_37896 <= 0;
            float_adder_pipereg_1to2_mant_smaller_37895 <= 0;
            float_adder_pipereg_1to2_sign_a_37890 <= 0;
            float_adder_pipereg_1to2_sign_b_37891 <= 0;
            float_adder_pipereg_1to2_sign_xor_37892 <= 0;
            float_adder_pipereg_1to2_signed_shift_37894 <= 0;
            float_adder_pipereg_1to2_w_en_37889 <= 0;
            float_adder_pipereg_2to3_aligned_mant_msb_37904 <= 0;
            float_adder_pipereg_2to3_exp_larger_37901 <= 0;
            float_adder_pipereg_2to3_guard_37906 <= 0;
            float_adder_pipereg_2to3_mant_larger_37903 <= 0;
            float_adder_pipereg_2to3_round_37907 <= 0;
            float_adder_pipereg_2to3_sign_a_37898 <= 0;
            float_adder_pipereg_2to3_sign_b_37899 <= 0;
            float_adder_pipereg_2to3_sign_xor_37900 <= 0;
            float_adder_pipereg_2to3_signed_shift_37902 <= 0;
            float_adder_pipereg_2to3_sticky_37905 <= 0;
            float_adder_pipereg_2to3_w_en_37897 <= 0;
            float_adder_pipereg_3to4_exp_larger_37911 <= 0;
            float_adder_pipereg_3to4_guard_37914 <= 0;
            float_adder_pipereg_3to4_is_neg_37917 <= 0;
            float_adder_pipereg_3to4_lzc_37918 <= 0;
            float_adder_pipereg_3to4_mant_sum_37916 <= 0;
            float_adder_pipereg_3to4_round_37915 <= 0;
            float_adder_pipereg_3to4_sign_a_37909 <= 0;
            float_adder_pipereg_3to4_sign_b_37910 <= 0;
            float_adder_pipereg_3to4_signed_shift_37912 <= 0;
            float_adder_pipereg_3to4_sticky_37913 <= 0;
            float_adder_pipereg_3to4_w_en_37908 <= 0;
            tmp3067087 <= 0;
            tmp3067088 <= 0;
            tmp3067089 <= 0;
            tmp3067090 <= 0;
            tmp3067091 <= 0;
            tmp3067092 <= 0;
            tmp3067093 <= 0;
            tmp3067094 <= 0;
            tmp3067114 <= 0;
        end
        else begin
            float_adder_pipereg_0to1_exp_a_37885 <= tmp3067122;
            float_adder_pipereg_0to1_exp_b_37886 <= tmp3067123;
            float_adder_pipereg_0to1_mant_a_37887 <= tmp3067126;
            float_adder_pipereg_0to1_mant_b_37888 <= tmp3067127;
            float_adder_pipereg_0to1_sign_a_37883 <= tmp3067118;
            float_adder_pipereg_0to1_sign_b_37884 <= tmp3067119;
            float_adder_pipereg_0to1_w_en_37882 <= adder_w_en_in3067116;
            float_adder_pipereg_1to2_exp_larger_37893 <= tmp3067135;
            float_adder_pipereg_1to2_mant_larger_37896 <= tmp3067137;
            float_adder_pipereg_1to2_mant_smaller_37895 <= tmp3067136;
            float_adder_pipereg_1to2_sign_a_37890 <= float_adder_pipereg_0to1_sign_a_37883;
            float_adder_pipereg_1to2_sign_b_37891 <= float_adder_pipereg_0to1_sign_b_37884;
            float_adder_pipereg_1to2_sign_xor_37892 <= tmp3067132;
            float_adder_pipereg_1to2_signed_shift_37894 <= tmp3067134;
            float_adder_pipereg_1to2_w_en_37889 <= float_adder_pipereg_0to1_w_en_37882;
            float_adder_pipereg_2to3_aligned_mant_msb_37904 <= tmp3067214;
            float_adder_pipereg_2to3_exp_larger_37901 <= float_adder_pipereg_1to2_exp_larger_37893;
            float_adder_pipereg_2to3_guard_37906 <= tmp3067216;
            float_adder_pipereg_2to3_mant_larger_37903 <= float_adder_pipereg_1to2_mant_larger_37896;
            float_adder_pipereg_2to3_round_37907 <= tmp3067217;
            float_adder_pipereg_2to3_sign_a_37898 <= float_adder_pipereg_1to2_sign_a_37890;
            float_adder_pipereg_2to3_sign_b_37899 <= float_adder_pipereg_1to2_sign_b_37891;
            float_adder_pipereg_2to3_sign_xor_37900 <= float_adder_pipereg_1to2_sign_xor_37892;
            float_adder_pipereg_2to3_signed_shift_37902 <= float_adder_pipereg_1to2_signed_shift_37894;
            float_adder_pipereg_2to3_sticky_37905 <= tmp3067218;
            float_adder_pipereg_2to3_w_en_37897 <= float_adder_pipereg_1to2_w_en_37889;
            float_adder_pipereg_3to4_exp_larger_37911 <= float_adder_pipereg_2to3_exp_larger_37901;
            float_adder_pipereg_3to4_guard_37914 <= float_adder_pipereg_2to3_guard_37906;
            float_adder_pipereg_3to4_is_neg_37917 <= tmp3067259;
            float_adder_pipereg_3to4_lzc_37918 <= tmp3067271;
            float_adder_pipereg_3to4_mant_sum_37916 <= tmp3067261;
            float_adder_pipereg_3to4_round_37915 <= float_adder_pipereg_2to3_round_37907;
            float_adder_pipereg_3to4_sign_a_37909 <= float_adder_pipereg_2to3_sign_a_37898;
            float_adder_pipereg_3to4_sign_b_37910 <= float_adder_pipereg_2to3_sign_b_37899;
            float_adder_pipereg_3to4_signed_shift_37912 <= float_adder_pipereg_2to3_signed_shift_37902;
            float_adder_pipereg_3to4_sticky_37913 <= float_adder_pipereg_2to3_sticky_37905;
            float_adder_pipereg_3to4_w_en_37908 <= float_adder_pipereg_2to3_w_en_37897;
            tmp3067087 <= tmp3067514;
            tmp3067088 <= tmp3067515;
            tmp3067089 <= tmp3067516;
            tmp3067090 <= tmp3067087;
            tmp3067091 <= tmp3067088;
            tmp3067092 <= tmp3067099;
            tmp3067093 <= tmp3067103;
            tmp3067094 <= tmp3067112;
            tmp3067114 <= tmp3067115;
        end
    end

endmodule

