// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, mant_smaller, shift_amount, out6362, out6364, out6365, out6366);
    input clk;
    input rst;
    input[7:0] mant_smaller;
    input[7:0] shift_amount;
    output[7:0] out6362;
    output out6364;
    output out6365;
    output out6366;

    wire[4:0] const_1152_16;
    wire const_1153_0;
    wire[4:0] const_1154_16;
    wire const_1155_0;
    wire[7:0] const_1156_0;
    wire const_1157_0;
    wire const_1158_0;
    wire[7:0] tmp6309;
    wire[2:0] tmp6310;
    wire[7:0] tmp6311;
    wire tmp6312;
    wire[2:0] tmp6313;
    wire[7:0] tmp6314;
    wire[7:0] tmp6315;
    wire[15:0] tmp6316;
    wire[15:0] tmp6317;
    wire[14:0] tmp6318;
    wire[15:0] tmp6319;
    wire[14:0] tmp6320;
    wire[15:0] tmp6321;
    wire[15:0] tmp6322;
    wire tmp6323;
    wire[15:0] tmp6324;
    wire[1:0] tmp6325;
    wire[1:0] tmp6326;
    wire[13:0] tmp6327;
    wire[15:0] tmp6328;
    wire[13:0] tmp6329;
    wire[15:0] tmp6330;
    wire[15:0] tmp6331;
    wire tmp6332;
    wire[15:0] tmp6333;
    wire[3:0] tmp6334;
    wire[3:0] tmp6335;
    wire[11:0] tmp6336;
    wire[15:0] tmp6337;
    wire[11:0] tmp6338;
    wire[15:0] tmp6339;
    wire[15:0] tmp6340;
    wire tmp6341;
    wire[15:0] tmp6342;
    wire[7:0] tmp6343;
    wire[7:0] tmp6344;
    wire[7:0] tmp6345;
    wire[15:0] tmp6346;
    wire[7:0] tmp6347;
    wire[15:0] tmp6348;
    wire[15:0] tmp6349;
    wire tmp6350;
    wire[15:0] tmp6351;
    wire[15:0] tmp6352;
    wire[15:0] tmp6353;
    wire tmp6354;
    wire[15:0] tmp6355;
    wire tmp6356;
    wire[15:0] tmp6357;
    wire tmp6358;
    wire[15:0] tmp6359;
    wire tmp6360;
    wire[15:0] tmp6361;
    wire[7:0] tmp6362;
    wire[7:0] tmp6363;
    wire tmp6364;
    wire tmp6365;
    wire tmp6366;
    wire tmp6367;
    wire tmp6368;
    wire[5:0] tmp6369;
    wire[2:0] tmp6370;
    wire tmp6371;
    wire tmp6372;
    wire[1:0] tmp6373;
    wire tmp6374;
    wire tmp6375;
    wire tmp6376;
    wire tmp6377;
    wire tmp6378;
    wire tmp6379;
    wire[2:0] tmp6380;
    wire tmp6381;
    wire tmp6382;
    wire[1:0] tmp6383;
    wire tmp6384;
    wire tmp6385;
    wire tmp6386;
    wire tmp6387;
    wire tmp6388;
    wire tmp6389;
    wire tmp6390;

    // Combinational
    assign const_1152_16 = 16;
    assign const_1153_0 = 0;
    assign const_1154_16 = 16;
    assign const_1155_0 = 0;
    assign const_1156_0 = 0;
    assign const_1157_0 = 0;
    assign const_1158_0 = 0;
    assign out6362 = tmp6362;
    assign out6364 = tmp6364;
    assign out6365 = tmp6365;
    assign out6366 = tmp6366;
    assign tmp6309 = tmp6315;
    assign tmp6310 = {const_1153_0, const_1153_0, const_1153_0};
    assign tmp6311 = {tmp6310, const_1152_16};
    assign tmp6312 = shift_amount > tmp6311;
    assign tmp6313 = {const_1155_0, const_1155_0, const_1155_0};
    assign tmp6314 = {tmp6313, const_1154_16};
    assign tmp6315 = tmp6312 ? tmp6314 : shift_amount;
    assign tmp6316 = {mant_smaller, const_1156_0};
    assign tmp6317 = tmp6361;
    assign tmp6318 = {tmp6316[14], tmp6316[13], tmp6316[12], tmp6316[11], tmp6316[10], tmp6316[9], tmp6316[8], tmp6316[7], tmp6316[6], tmp6316[5], tmp6316[4], tmp6316[3], tmp6316[2], tmp6316[1], tmp6316[0]};
    assign tmp6319 = {tmp6318, const_1157_0};
    assign tmp6320 = {tmp6316[15], tmp6316[14], tmp6316[13], tmp6316[12], tmp6316[11], tmp6316[10], tmp6316[9], tmp6316[8], tmp6316[7], tmp6316[6], tmp6316[5], tmp6316[4], tmp6316[3], tmp6316[2], tmp6316[1]};
    assign tmp6321 = {const_1157_0, tmp6320};
    assign tmp6322 = const_1158_0 ? tmp6319 : tmp6321;
    assign tmp6323 = {tmp6309[0]};
    assign tmp6324 = tmp6323 ? tmp6322 : tmp6316;
    assign tmp6325 = {const_1157_0, const_1157_0};
    assign tmp6326 = {tmp6325[1], tmp6325[0]};
    assign tmp6327 = {tmp6324[13], tmp6324[12], tmp6324[11], tmp6324[10], tmp6324[9], tmp6324[8], tmp6324[7], tmp6324[6], tmp6324[5], tmp6324[4], tmp6324[3], tmp6324[2], tmp6324[1], tmp6324[0]};
    assign tmp6328 = {tmp6327, tmp6326};
    assign tmp6329 = {tmp6324[15], tmp6324[14], tmp6324[13], tmp6324[12], tmp6324[11], tmp6324[10], tmp6324[9], tmp6324[8], tmp6324[7], tmp6324[6], tmp6324[5], tmp6324[4], tmp6324[3], tmp6324[2]};
    assign tmp6330 = {tmp6326, tmp6329};
    assign tmp6331 = const_1158_0 ? tmp6328 : tmp6330;
    assign tmp6332 = {tmp6309[1]};
    assign tmp6333 = tmp6332 ? tmp6331 : tmp6324;
    assign tmp6334 = {tmp6326, tmp6326};
    assign tmp6335 = {tmp6334[3], tmp6334[2], tmp6334[1], tmp6334[0]};
    assign tmp6336 = {tmp6333[11], tmp6333[10], tmp6333[9], tmp6333[8], tmp6333[7], tmp6333[6], tmp6333[5], tmp6333[4], tmp6333[3], tmp6333[2], tmp6333[1], tmp6333[0]};
    assign tmp6337 = {tmp6336, tmp6335};
    assign tmp6338 = {tmp6333[15], tmp6333[14], tmp6333[13], tmp6333[12], tmp6333[11], tmp6333[10], tmp6333[9], tmp6333[8], tmp6333[7], tmp6333[6], tmp6333[5], tmp6333[4]};
    assign tmp6339 = {tmp6335, tmp6338};
    assign tmp6340 = const_1158_0 ? tmp6337 : tmp6339;
    assign tmp6341 = {tmp6309[2]};
    assign tmp6342 = tmp6341 ? tmp6340 : tmp6333;
    assign tmp6343 = {tmp6335, tmp6335};
    assign tmp6344 = {tmp6343[7], tmp6343[6], tmp6343[5], tmp6343[4], tmp6343[3], tmp6343[2], tmp6343[1], tmp6343[0]};
    assign tmp6345 = {tmp6342[7], tmp6342[6], tmp6342[5], tmp6342[4], tmp6342[3], tmp6342[2], tmp6342[1], tmp6342[0]};
    assign tmp6346 = {tmp6345, tmp6344};
    assign tmp6347 = {tmp6342[15], tmp6342[14], tmp6342[13], tmp6342[12], tmp6342[11], tmp6342[10], tmp6342[9], tmp6342[8]};
    assign tmp6348 = {tmp6344, tmp6347};
    assign tmp6349 = const_1158_0 ? tmp6346 : tmp6348;
    assign tmp6350 = {tmp6309[3]};
    assign tmp6351 = tmp6350 ? tmp6349 : tmp6342;
    assign tmp6352 = {tmp6344, tmp6344};
    assign tmp6353 = {tmp6352[15], tmp6352[14], tmp6352[13], tmp6352[12], tmp6352[11], tmp6352[10], tmp6352[9], tmp6352[8], tmp6352[7], tmp6352[6], tmp6352[5], tmp6352[4], tmp6352[3], tmp6352[2], tmp6352[1], tmp6352[0]};
    assign tmp6354 = {tmp6309[4]};
    assign tmp6355 = tmp6354 ? tmp6353 : tmp6351;
    assign tmp6356 = {tmp6309[5]};
    assign tmp6357 = tmp6356 ? tmp6353 : tmp6355;
    assign tmp6358 = {tmp6309[6]};
    assign tmp6359 = tmp6358 ? tmp6353 : tmp6357;
    assign tmp6360 = {tmp6309[7]};
    assign tmp6361 = tmp6360 ? tmp6353 : tmp6359;
    assign tmp6362 = {tmp6317[15], tmp6317[14], tmp6317[13], tmp6317[12], tmp6317[11], tmp6317[10], tmp6317[9], tmp6317[8]};
    assign tmp6363 = {tmp6317[7], tmp6317[6], tmp6317[5], tmp6317[4], tmp6317[3], tmp6317[2], tmp6317[1], tmp6317[0]};
    assign tmp6364 = tmp6367;
    assign tmp6365 = tmp6368;
    assign tmp6366 = tmp6390;
    assign tmp6367 = {tmp6363[7]};
    assign tmp6368 = {tmp6363[6]};
    assign tmp6369 = {tmp6363[5], tmp6363[4], tmp6363[3], tmp6363[2], tmp6363[1], tmp6363[0]};
    assign tmp6370 = {tmp6369[2], tmp6369[1], tmp6369[0]};
    assign tmp6371 = {tmp6370[0]};
    assign tmp6372 = {tmp6371};
    assign tmp6373 = {tmp6370[2], tmp6370[1]};
    assign tmp6374 = {tmp6373[0]};
    assign tmp6375 = {tmp6374};
    assign tmp6376 = {tmp6373[1]};
    assign tmp6377 = {tmp6376};
    assign tmp6378 = tmp6375 | tmp6377;
    assign tmp6379 = tmp6372 | tmp6378;
    assign tmp6380 = {tmp6369[5], tmp6369[4], tmp6369[3]};
    assign tmp6381 = {tmp6380[0]};
    assign tmp6382 = {tmp6381};
    assign tmp6383 = {tmp6380[2], tmp6380[1]};
    assign tmp6384 = {tmp6383[0]};
    assign tmp6385 = {tmp6384};
    assign tmp6386 = {tmp6383[1]};
    assign tmp6387 = {tmp6386};
    assign tmp6388 = tmp6385 | tmp6387;
    assign tmp6389 = tmp6382 | tmp6388;
    assign tmp6390 = tmp6379 | tmp6389;

endmodule

