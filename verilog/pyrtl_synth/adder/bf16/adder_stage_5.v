// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, abs_mantissa, exp_diff, exp_larger, guard_bit, is_neg, lzc, round_bit, sign_a, sign_b, sticky_bit, out6856, out6865, out6870);
    input clk;
    input rst;
    input[8:0] abs_mantissa;
    input[8:0] exp_diff;
    input[7:0] exp_larger;
    input guard_bit;
    input is_neg;
    input[3:0] lzc;
    input round_bit;
    input sign_a;
    input sign_b;
    input sticky_bit;
    output[6:0] out6856;
    output[7:0] out6865;
    output out6870;

    wire const_1288_0;
    wire const_1289_0;
    wire const_1290_1;
    wire const_1291_0;
    wire const_1292_0;
    wire const_1293_0;
    wire const_1294_0;
    wire const_1295_0;
    wire const_1296_0;
    wire[8:0] tmp6790;
    wire[4:0] tmp6791;
    wire[8:0] tmp6792;
    wire[7:0] tmp6793;
    wire[8:0] tmp6794;
    wire[7:0] tmp6795;
    wire[8:0] tmp6796;
    wire[8:0] tmp6797;
    wire tmp6798;
    wire[8:0] tmp6799;
    wire[1:0] tmp6800;
    wire[1:0] tmp6801;
    wire[6:0] tmp6802;
    wire[8:0] tmp6803;
    wire[6:0] tmp6804;
    wire[8:0] tmp6805;
    wire[8:0] tmp6806;
    wire tmp6807;
    wire[8:0] tmp6808;
    wire[3:0] tmp6809;
    wire[3:0] tmp6810;
    wire[4:0] tmp6811;
    wire[8:0] tmp6812;
    wire[4:0] tmp6813;
    wire[8:0] tmp6814;
    wire[8:0] tmp6815;
    wire tmp6816;
    wire[8:0] tmp6817;
    wire[7:0] tmp6818;
    wire[7:0] tmp6819;
    wire tmp6820;
    wire[8:0] tmp6821;
    wire tmp6822;
    wire[8:0] tmp6823;
    wire[8:0] tmp6824;
    wire tmp6825;
    wire[8:0] tmp6826;
    wire[15:0] tmp6827;
    wire[8:0] tmp6828;
    wire tmp6829;
    wire[8:0] tmp6830;
    wire tmp6831;
    wire[8:0] tmp6832;
    wire tmp6833;
    wire[8:0] tmp6834;
    wire tmp6835;
    wire[8:0] tmp6836;
    wire tmp6837;
    wire[8:0] tmp6838;
    wire tmp6839;
    wire tmp6840;
    wire tmp6841;
    wire tmp6842;
    wire tmp6843;
    wire tmp6844;
    wire tmp6845;
    wire tmp6846;
    wire tmp6847;
    wire tmp6848;
    wire[8:0] tmp6849;
    wire[7:0] tmp6850;
    wire[8:0] tmp6851;
    wire[9:0] tmp6852;
    wire[8:0] tmp6853;
    wire tmp6854;
    wire tmp6855;
    wire[6:0] tmp6856;
    wire[6:0] tmp6857;
    wire[6:0] tmp6858;
    wire[6:0] tmp6859;
    wire[7:0] tmp6860;
    wire[3:0] tmp6861;
    wire[7:0] tmp6862;
    wire[8:0] tmp6863;
    wire[7:0] tmp6864;
    wire[7:0] tmp6865;
    wire[6:0] tmp6866;
    wire[7:0] tmp6867;
    wire[8:0] tmp6868;
    wire[7:0] tmp6869;
    wire tmp6870;
    wire tmp6871;
    wire tmp6872;
    wire[7:0] tmp6873;
    wire[6:0] tmp6874;
    wire[7:0] tmp6875;
    wire tmp6876;
    wire tmp6877;
    wire tmp6878;
    wire tmp6879;
    wire tmp6880;
    wire tmp6881;
    wire tmp6882;
    wire tmp6883;
    wire tmp6884;
    wire tmp6885;
    wire tmp6886;
    wire tmp6887;
    wire tmp6888;
    wire tmp6889;
    wire tmp6890;
    wire tmp6891;
    wire tmp6892;
    wire tmp6893;

    // Combinational
    assign const_1288_0 = 0;
    assign const_1289_0 = 0;
    assign const_1290_1 = 1;
    assign const_1291_0 = 0;
    assign const_1292_0 = 0;
    assign const_1293_0 = 0;
    assign const_1294_0 = 0;
    assign const_1295_0 = 0;
    assign const_1296_0 = 0;
    assign out6856 = tmp6856;
    assign out6865 = tmp6865;
    assign out6870 = tmp6870;
    assign tmp6790 = tmp6838;
    assign tmp6791 = {const_1288_0, const_1288_0, const_1288_0, const_1288_0, const_1288_0};
    assign tmp6792 = {tmp6791, lzc};
    assign tmp6793 = {abs_mantissa[7], abs_mantissa[6], abs_mantissa[5], abs_mantissa[4], abs_mantissa[3], abs_mantissa[2], abs_mantissa[1], abs_mantissa[0]};
    assign tmp6794 = {tmp6793, const_1289_0};
    assign tmp6795 = {abs_mantissa[8], abs_mantissa[7], abs_mantissa[6], abs_mantissa[5], abs_mantissa[4], abs_mantissa[3], abs_mantissa[2], abs_mantissa[1]};
    assign tmp6796 = {const_1289_0, tmp6795};
    assign tmp6797 = const_1290_1 ? tmp6794 : tmp6796;
    assign tmp6798 = {tmp6792[0]};
    assign tmp6799 = tmp6798 ? tmp6797 : abs_mantissa;
    assign tmp6800 = {const_1289_0, const_1289_0};
    assign tmp6801 = {tmp6800[1], tmp6800[0]};
    assign tmp6802 = {tmp6799[6], tmp6799[5], tmp6799[4], tmp6799[3], tmp6799[2], tmp6799[1], tmp6799[0]};
    assign tmp6803 = {tmp6802, tmp6801};
    assign tmp6804 = {tmp6799[8], tmp6799[7], tmp6799[6], tmp6799[5], tmp6799[4], tmp6799[3], tmp6799[2]};
    assign tmp6805 = {tmp6801, tmp6804};
    assign tmp6806 = const_1290_1 ? tmp6803 : tmp6805;
    assign tmp6807 = {tmp6792[1]};
    assign tmp6808 = tmp6807 ? tmp6806 : tmp6799;
    assign tmp6809 = {tmp6801, tmp6801};
    assign tmp6810 = {tmp6809[3], tmp6809[2], tmp6809[1], tmp6809[0]};
    assign tmp6811 = {tmp6808[4], tmp6808[3], tmp6808[2], tmp6808[1], tmp6808[0]};
    assign tmp6812 = {tmp6811, tmp6810};
    assign tmp6813 = {tmp6808[8], tmp6808[7], tmp6808[6], tmp6808[5], tmp6808[4]};
    assign tmp6814 = {tmp6810, tmp6813};
    assign tmp6815 = const_1290_1 ? tmp6812 : tmp6814;
    assign tmp6816 = {tmp6792[2]};
    assign tmp6817 = tmp6816 ? tmp6815 : tmp6808;
    assign tmp6818 = {tmp6810, tmp6810};
    assign tmp6819 = {tmp6818[7], tmp6818[6], tmp6818[5], tmp6818[4], tmp6818[3], tmp6818[2], tmp6818[1], tmp6818[0]};
    assign tmp6820 = {tmp6817[0]};
    assign tmp6821 = {tmp6820, tmp6819};
    assign tmp6822 = {tmp6817[8]};
    assign tmp6823 = {tmp6819, tmp6822};
    assign tmp6824 = const_1290_1 ? tmp6821 : tmp6823;
    assign tmp6825 = {tmp6792[3]};
    assign tmp6826 = tmp6825 ? tmp6824 : tmp6817;
    assign tmp6827 = {tmp6819, tmp6819};
    assign tmp6828 = {tmp6827[8], tmp6827[7], tmp6827[6], tmp6827[5], tmp6827[4], tmp6827[3], tmp6827[2], tmp6827[1], tmp6827[0]};
    assign tmp6829 = {tmp6792[4]};
    assign tmp6830 = tmp6829 ? tmp6828 : tmp6826;
    assign tmp6831 = {tmp6792[5]};
    assign tmp6832 = tmp6831 ? tmp6828 : tmp6830;
    assign tmp6833 = {tmp6792[6]};
    assign tmp6834 = tmp6833 ? tmp6828 : tmp6832;
    assign tmp6835 = {tmp6792[7]};
    assign tmp6836 = tmp6835 ? tmp6828 : tmp6834;
    assign tmp6837 = {tmp6792[8]};
    assign tmp6838 = tmp6837 ? tmp6828 : tmp6836;
    assign tmp6839 = tmp6848;
    assign tmp6840 = {tmp6790[1]};
    assign tmp6841 = round_bit | sticky_bit;
    assign tmp6842 = guard_bit & tmp6841;
    assign tmp6843 = ~round_bit;
    assign tmp6844 = guard_bit & tmp6843;
    assign tmp6845 = ~sticky_bit;
    assign tmp6846 = tmp6844 & tmp6845;
    assign tmp6847 = tmp6846 & tmp6840;
    assign tmp6848 = tmp6842 | tmp6847;
    assign tmp6849 = tmp6853;
    assign tmp6850 = {const_1291_0, const_1291_0, const_1291_0, const_1291_0, const_1291_0, const_1291_0, const_1291_0, const_1291_0};
    assign tmp6851 = {tmp6850, tmp6839};
    assign tmp6852 = tmp6790 + tmp6851;
    assign tmp6853 = {tmp6852[8], tmp6852[7], tmp6852[6], tmp6852[5], tmp6852[4], tmp6852[3], tmp6852[2], tmp6852[1], tmp6852[0]};
    assign tmp6854 = tmp6855;
    assign tmp6855 = {tmp6849[8]};
    assign tmp6856 = tmp6859;
    assign tmp6857 = {tmp6849[7], tmp6849[6], tmp6849[5], tmp6849[4], tmp6849[3], tmp6849[2], tmp6849[1]};
    assign tmp6858 = {tmp6849[6], tmp6849[5], tmp6849[4], tmp6849[3], tmp6849[2], tmp6849[1], tmp6849[0]};
    assign tmp6859 = tmp6854 ? tmp6857 : tmp6858;
    assign tmp6860 = tmp6864;
    assign tmp6861 = {const_1292_0, const_1292_0, const_1292_0, const_1292_0};
    assign tmp6862 = {tmp6861, lzc};
    assign tmp6863 = exp_larger - tmp6862;
    assign tmp6864 = {tmp6863[7], tmp6863[6], tmp6863[5], tmp6863[4], tmp6863[3], tmp6863[2], tmp6863[1], tmp6863[0]};
    assign tmp6865 = tmp6869;
    assign tmp6866 = {const_1293_0, const_1293_0, const_1293_0, const_1293_0, const_1293_0, const_1293_0, const_1293_0};
    assign tmp6867 = {tmp6866, tmp6854};
    assign tmp6868 = tmp6860 + tmp6867;
    assign tmp6869 = {tmp6868[7], tmp6868[6], tmp6868[5], tmp6868[4], tmp6868[3], tmp6868[2], tmp6868[1], tmp6868[0]};
    assign tmp6870 = tmp6893;
    assign tmp6871 = sign_a ^ sign_b;
    assign tmp6872 = ~tmp6871;
    assign tmp6873 = {exp_diff[7], exp_diff[6], exp_diff[5], exp_diff[4], exp_diff[3], exp_diff[2], exp_diff[1], exp_diff[0]};
    assign tmp6874 = {const_1295_0, const_1295_0, const_1295_0, const_1295_0, const_1295_0, const_1295_0, const_1295_0};
    assign tmp6875 = {tmp6874, const_1294_0};
    assign tmp6876 = tmp6873 == tmp6875;
    assign tmp6877 = is_neg ^ sign_a;
    assign tmp6878 = ~tmp6872;
    assign tmp6879 = tmp6878 & tmp6876;
    assign tmp6880 = {exp_diff[8]};
    assign tmp6881 = ~tmp6872;
    assign tmp6882 = ~tmp6876;
    assign tmp6883 = tmp6881 & tmp6882;
    assign tmp6884 = tmp6883 & tmp6880;
    assign tmp6885 = ~tmp6872;
    assign tmp6886 = ~tmp6876;
    assign tmp6887 = tmp6885 & tmp6886;
    assign tmp6888 = ~tmp6880;
    assign tmp6889 = tmp6887 & tmp6888;
    assign tmp6890 = tmp6872 ? sign_a : const_1296_0;
    assign tmp6891 = tmp6879 ? tmp6877 : tmp6890;
    assign tmp6892 = tmp6884 ? sign_b : tmp6891;
    assign tmp6893 = tmp6889 ? sign_a : tmp6892;

endmodule

