// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, mant_aligned, mant_unchanged, s_xor, out1591, out1592, out1594);
    input clk;
    input rst;
    input[3:0] mant_aligned;
    input[3:0] mant_unchanged;
    input s_xor;
    output[4:0] out1591;
    output out1592;
    output[3:0] out1594;

    reg[4:0] tmp1591;
    reg tmp1592;

    wire const_295_0;
    wire const_296_1;
    wire const_297_0;
    wire const_298_0;
    wire const_299_0;
    wire const_300_0;
    wire const_301_0;
    wire const_302_1;
    wire const_303_0;
    wire const_304_0;
    wire const_305_0;
    wire const_306_0;
    wire[1:0] const_307_2;
    wire const_308_1;
    wire const_309_0;
    wire[1:0] const_310_1;
    wire[1:0] const_311_0;
    wire const_312_0;
    wire const_313_0;
    wire const_314_0;
    wire const_315_0;
    wire[1:0] const_316_2;
    wire const_317_1;
    wire const_318_0;
    wire[1:0] const_319_1;
    wire[1:0] const_320_0;
    wire const_321_0;
    wire const_322_0;
    wire[2:0] const_323_4;
    wire[1:0] const_324_1;
    wire const_325_0;
    wire const_326_0;
    wire const_327_0;
    wire const_328_0;
    wire const_329_1;
    wire const_330_0;
    wire const_331_0;
    wire const_332_0;
    wire[5:0] tmp1532;
    wire tmp1533;
    wire[4:0] tmp1534;
    wire[4:0] tmp1535;
    wire[3:0] tmp1536;
    wire[2:0] tmp1537;
    wire[3:0] tmp1538;
    wire[4:0] tmp1539;
    wire tmp1540;
    wire[3:0] tmp1541;
    wire[4:0] tmp1542;
    wire[4:0] tmp1543;
    wire[4:0] tmp1544;
    wire tmp1545;
    wire tmp1546;
    wire tmp1547;
    wire tmp1548;
    wire tmp1549;
    wire[4:0] tmp1550;
    wire tmp1551;
    wire tmp1552;
    wire tmp1553;
    wire tmp1554;
    wire tmp1555;
    wire tmp1556;
    wire tmp1557;
    wire tmp1558;
    wire tmp1559;
    wire tmp1560;
    wire tmp1561;
    wire tmp1562;
    wire tmp1563;
    wire tmp1564;
    wire tmp1565;
    wire tmp1566;
    wire tmp1567;
    wire tmp1568;
    wire tmp1569;
    wire tmp1570;
    wire tmp1571;
    wire tmp1572;
    wire tmp1573;
    wire tmp1574;
    wire tmp1575;
    wire[5:0] tmp1576;
    wire tmp1577;
    wire[5:0] tmp1578;
    wire[5:0] tmp1579;
    wire tmp1580;
    wire tmp1581;
    wire[4:0] tmp1582;
    wire[5:0] tmp1583;
    wire[4:0] tmp1584;
    wire[5:0] tmp1585;
    wire[6:0] tmp1586;
    wire tmp1587;
    wire[6:0] tmp1588;
    wire[6:0] tmp1589;
    wire[4:0] tmp1590;
    wire tmp1593;
    wire[3:0] tmp1594;
    wire[3:0] tmp1595;
    wire[1:0] tmp1596;
    wire[1:0] tmp1597;
    wire[1:0] tmp1598;
    wire tmp1599;
    wire[1:0] tmp1600;
    wire tmp1601;
    wire tmp1602;
    wire[1:0] tmp1603;
    wire tmp1604;
    wire tmp1605;
    wire tmp1606;
    wire tmp1607;
    wire tmp1608;
    wire tmp1609;
    wire tmp1610;
    wire[1:0] tmp1611;
    wire[1:0] tmp1612;
    wire[1:0] tmp1613;
    wire[1:0] tmp1614;
    wire[1:0] tmp1615;
    wire tmp1616;
    wire[1:0] tmp1617;
    wire tmp1618;
    wire tmp1619;
    wire[1:0] tmp1620;
    wire tmp1621;
    wire tmp1622;
    wire tmp1623;
    wire tmp1624;
    wire tmp1625;
    wire tmp1626;
    wire tmp1627;
    wire[1:0] tmp1628;
    wire[1:0] tmp1629;
    wire[1:0] tmp1630;
    wire[1:0] tmp1631;
    wire[3:0] tmp1632;
    wire[2:0] tmp1633;
    wire tmp1634;
    wire tmp1635;
    wire tmp1636;
    wire tmp1637;
    wire[2:0] tmp1638;
    wire tmp1639;
    wire tmp1640;
    wire[2:0] tmp1641;
    wire tmp1642;
    wire tmp1643;
    wire tmp1644;
    wire[1:0] tmp1645;
    wire[2:0] tmp1646;
    wire[2:0] tmp1647;
    wire[2:0] tmp1648;
    wire[2:0] tmp1649;
    wire tmp1650;
    wire[3:0] tmp1651;
    wire[2:0] tmp1652;
    wire[3:0] tmp1653;
    wire[4:0] tmp1654;
    wire[3:0] tmp1655;
    wire[4:0] tmp1656;
    wire[4:0] tmp1657;
    wire[3:0] tmp1658;

    // Combinational
    assign const_295_0 = 0;
    assign const_296_1 = 1;
    assign const_297_0 = 0;
    assign const_298_0 = 0;
    assign const_299_0 = 0;
    assign const_300_0 = 0;
    assign const_301_0 = 0;
    assign const_302_1 = 1;
    assign const_303_0 = 0;
    assign const_304_0 = 0;
    assign const_305_0 = 0;
    assign const_306_0 = 0;
    assign const_307_2 = 2;
    assign const_308_1 = 1;
    assign const_309_0 = 0;
    assign const_310_1 = 1;
    assign const_311_0 = 0;
    assign const_312_0 = 0;
    assign const_313_0 = 0;
    assign const_314_0 = 0;
    assign const_315_0 = 0;
    assign const_316_2 = 2;
    assign const_317_1 = 1;
    assign const_318_0 = 0;
    assign const_319_1 = 1;
    assign const_320_0 = 0;
    assign const_321_0 = 0;
    assign const_322_0 = 0;
    assign const_323_4 = 4;
    assign const_324_1 = 1;
    assign const_325_0 = 0;
    assign const_326_0 = 0;
    assign const_327_0 = 0;
    assign const_328_0 = 0;
    assign const_329_1 = 1;
    assign const_330_0 = 0;
    assign const_331_0 = 0;
    assign const_332_0 = 0;
    assign out1591 = tmp1591;
    assign out1592 = tmp1592;
    assign out1594 = tmp1594;
    assign tmp1532 = tmp1579;
    assign tmp1533 = {const_295_0};
    assign tmp1534 = {tmp1533, mant_unchanged};
    assign tmp1535 = tmp1543;
    assign tmp1536 = ~mant_aligned;
    assign tmp1537 = {const_297_0, const_297_0, const_297_0};
    assign tmp1538 = {tmp1537, const_296_1};
    assign tmp1539 = tmp1536 + tmp1538;
    assign tmp1540 = {tmp1539[4]};
    assign tmp1541 = {const_299_0, const_299_0, const_299_0, const_299_0};
    assign tmp1542 = {tmp1541, const_298_0};
    assign tmp1543 = s_xor ? tmp1539 : tmp1542;
    assign tmp1544 = tmp1534 ^ tmp1535;
    assign tmp1545 = {tmp1544[0]};
    assign tmp1546 = {tmp1544[1]};
    assign tmp1547 = {tmp1544[2]};
    assign tmp1548 = {tmp1544[3]};
    assign tmp1549 = {tmp1544[4]};
    assign tmp1550 = tmp1534 & tmp1535;
    assign tmp1551 = {tmp1550[0]};
    assign tmp1552 = {tmp1550[1]};
    assign tmp1553 = {tmp1550[2]};
    assign tmp1554 = {tmp1550[3]};
    assign tmp1555 = {tmp1550[4]};
    assign tmp1556 = tmp1549 & tmp1554;
    assign tmp1557 = tmp1555 | tmp1556;
    assign tmp1558 = tmp1549 & tmp1548;
    assign tmp1559 = tmp1548 & tmp1553;
    assign tmp1560 = tmp1554 | tmp1559;
    assign tmp1561 = tmp1548 & tmp1547;
    assign tmp1562 = tmp1547 & tmp1552;
    assign tmp1563 = tmp1553 | tmp1562;
    assign tmp1564 = tmp1547 & tmp1546;
    assign tmp1565 = tmp1546 & tmp1551;
    assign tmp1566 = tmp1552 | tmp1565;
    assign tmp1567 = tmp1558 & tmp1563;
    assign tmp1568 = tmp1557 | tmp1567;
    assign tmp1569 = tmp1558 & tmp1564;
    assign tmp1570 = tmp1561 & tmp1566;
    assign tmp1571 = tmp1560 | tmp1570;
    assign tmp1572 = tmp1564 & tmp1551;
    assign tmp1573 = tmp1563 | tmp1572;
    assign tmp1574 = tmp1569 & tmp1551;
    assign tmp1575 = tmp1568 | tmp1574;
    assign tmp1576 = {tmp1575, tmp1571, tmp1573, tmp1566, tmp1551, const_300_0};
    assign tmp1577 = {const_301_0};
    assign tmp1578 = {tmp1577, tmp1544};
    assign tmp1579 = tmp1576 ^ tmp1578;
    assign tmp1580 = tmp1581;
    assign tmp1581 = {tmp1532[5]};
    assign tmp1582 = tmp1590;
    assign tmp1583 = ~tmp1532;
    assign tmp1584 = {const_303_0, const_303_0, const_303_0, const_303_0, const_303_0};
    assign tmp1585 = {tmp1584, const_302_1};
    assign tmp1586 = tmp1583 + tmp1585;
    assign tmp1587 = {const_304_0};
    assign tmp1588 = {tmp1587, tmp1532};
    assign tmp1589 = tmp1580 ? tmp1586 : tmp1588;
    assign tmp1590 = {tmp1589[4], tmp1589[3], tmp1589[2], tmp1589[1], tmp1589[0]};
    assign tmp1593 = {tmp1591[4]};
    assign tmp1594 = tmp1658;
    assign tmp1595 = {tmp1591[3], tmp1591[2], tmp1591[1], tmp1591[0]};
    assign tmp1596 = {tmp1595[3], tmp1595[2]};
    assign tmp1597 = {tmp1595[1], tmp1595[0]};
    assign tmp1598 = tmp1614;
    assign tmp1599 = {const_306_0};
    assign tmp1600 = {tmp1599, const_305_0};
    assign tmp1601 = tmp1596 == tmp1600;
    assign tmp1602 = {const_309_0};
    assign tmp1603 = {tmp1602, const_308_1};
    assign tmp1604 = tmp1596 == tmp1603;
    assign tmp1605 = ~tmp1601;
    assign tmp1606 = tmp1605 & tmp1604;
    assign tmp1607 = ~tmp1601;
    assign tmp1608 = ~tmp1604;
    assign tmp1609 = tmp1607 & tmp1608;
    assign tmp1610 = {const_313_0};
    assign tmp1611 = {tmp1610, const_312_0};
    assign tmp1612 = tmp1601 ? const_307_2 : tmp1611;
    assign tmp1613 = tmp1606 ? const_310_1 : tmp1612;
    assign tmp1614 = tmp1609 ? const_311_0 : tmp1613;
    assign tmp1615 = tmp1631;
    assign tmp1616 = {const_315_0};
    assign tmp1617 = {tmp1616, const_314_0};
    assign tmp1618 = tmp1597 == tmp1617;
    assign tmp1619 = {const_318_0};
    assign tmp1620 = {tmp1619, const_317_1};
    assign tmp1621 = tmp1597 == tmp1620;
    assign tmp1622 = ~tmp1618;
    assign tmp1623 = tmp1622 & tmp1621;
    assign tmp1624 = ~tmp1618;
    assign tmp1625 = ~tmp1621;
    assign tmp1626 = tmp1624 & tmp1625;
    assign tmp1627 = {const_322_0};
    assign tmp1628 = {tmp1627, const_321_0};
    assign tmp1629 = tmp1618 ? const_316_2 : tmp1628;
    assign tmp1630 = tmp1623 ? const_319_1 : tmp1629;
    assign tmp1631 = tmp1626 ? const_320_0 : tmp1630;
    assign tmp1632 = tmp1651;
    assign tmp1633 = tmp1649;
    assign tmp1634 = {tmp1598[1]};
    assign tmp1635 = {tmp1615[1]};
    assign tmp1636 = tmp1634 & tmp1635;
    assign tmp1637 = {tmp1615[0]};
    assign tmp1638 = {const_324_1, tmp1637};
    assign tmp1639 = ~tmp1636;
    assign tmp1640 = tmp1639 & tmp1634;
    assign tmp1641 = {const_325_0, tmp1598};
    assign tmp1642 = ~tmp1636;
    assign tmp1643 = ~tmp1634;
    assign tmp1644 = tmp1642 & tmp1643;
    assign tmp1645 = {const_327_0, const_327_0};
    assign tmp1646 = {tmp1645, const_326_0};
    assign tmp1647 = tmp1636 ? const_323_4 : tmp1646;
    assign tmp1648 = tmp1640 ? tmp1638 : tmp1647;
    assign tmp1649 = tmp1644 ? tmp1641 : tmp1648;
    assign tmp1650 = {const_328_0};
    assign tmp1651 = {tmp1650, tmp1633};
    assign tmp1652 = {const_330_0, const_330_0, const_330_0};
    assign tmp1653 = {tmp1652, const_329_1};
    assign tmp1654 = tmp1632 + tmp1653;
    assign tmp1655 = {const_332_0, const_332_0, const_332_0, const_332_0};
    assign tmp1656 = {tmp1655, const_331_0};
    assign tmp1657 = tmp1593 ? tmp1656 : tmp1654;
    assign tmp1658 = {tmp1657[3], tmp1657[2], tmp1657[1], tmp1657[0]};

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            tmp1591 <= 0;
            tmp1592 <= 0;
        end
        else begin
            tmp1591 <= tmp1582;
            tmp1592 <= tmp1580;
        end
    end

endmodule

