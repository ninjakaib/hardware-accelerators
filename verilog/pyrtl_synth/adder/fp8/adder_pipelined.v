// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, adder_w_en_in636, float_a, float_b, out637);
    input clk;
    input rst;
    input adder_w_en_in636;
    input[7:0] float_a;
    input[7:0] float_b;
    output[7:0] out637;

    reg[3:0] float_adder_pipereg_0to1_exp_a_3;
    reg[3:0] float_adder_pipereg_0to1_exp_b_4;
    reg[3:0] float_adder_pipereg_0to1_mant_a_5;
    reg[3:0] float_adder_pipereg_0to1_mant_b_6;
    reg float_adder_pipereg_0to1_sign_a_1;
    reg float_adder_pipereg_0to1_sign_b_2;
    reg float_adder_pipereg_0to1_w_en_0;
    reg[3:0] float_adder_pipereg_1to2_exp_larger_11;
    reg[3:0] float_adder_pipereg_1to2_mant_larger_14;
    reg[3:0] float_adder_pipereg_1to2_mant_smaller_13;
    reg float_adder_pipereg_1to2_sign_a_8;
    reg float_adder_pipereg_1to2_sign_b_9;
    reg float_adder_pipereg_1to2_sign_xor_10;
    reg[4:0] float_adder_pipereg_1to2_signed_shift_12;
    reg float_adder_pipereg_1to2_w_en_7;
    reg[3:0] float_adder_pipereg_2to3_aligned_mant_msb_22;
    reg[3:0] float_adder_pipereg_2to3_exp_larger_19;
    reg float_adder_pipereg_2to3_guard_24;
    reg[3:0] float_adder_pipereg_2to3_mant_larger_21;
    reg float_adder_pipereg_2to3_round_25;
    reg float_adder_pipereg_2to3_sign_a_16;
    reg float_adder_pipereg_2to3_sign_b_17;
    reg float_adder_pipereg_2to3_sign_xor_18;
    reg[4:0] float_adder_pipereg_2to3_signed_shift_20;
    reg float_adder_pipereg_2to3_sticky_23;
    reg float_adder_pipereg_2to3_w_en_15;
    reg[3:0] float_adder_pipereg_3to4_exp_larger_29;
    reg float_adder_pipereg_3to4_guard_32;
    reg float_adder_pipereg_3to4_is_neg_35;
    reg[3:0] float_adder_pipereg_3to4_lzc_36;
    reg[4:0] float_adder_pipereg_3to4_mant_sum_34;
    reg float_adder_pipereg_3to4_round_33;
    reg float_adder_pipereg_3to4_sign_a_27;
    reg float_adder_pipereg_3to4_sign_b_28;
    reg[4:0] float_adder_pipereg_3to4_signed_shift_30;
    reg float_adder_pipereg_3to4_sticky_31;
    reg float_adder_pipereg_3to4_w_en_26;

    wire const_116_1;
    wire const_117_1;
    wire const_118_1;
    wire const_119_0;
    wire const_120_0;
    wire[3:0] const_121_8;
    wire[3:0] const_122_8;
    wire[3:0] const_123_0;
    wire const_124_0;
    wire const_125_0;
    wire const_126_0;
    wire const_127_0;
    wire const_128_0;
    wire const_129_0;
    wire const_130_0;
    wire const_131_0;
    wire const_132_1;
    wire const_133_0;
    wire const_134_0;
    wire const_135_0;
    wire const_136_0;
    wire[1:0] const_137_2;
    wire const_138_1;
    wire const_139_0;
    wire[1:0] const_140_1;
    wire[1:0] const_141_0;
    wire const_142_0;
    wire const_143_0;
    wire const_144_0;
    wire const_145_0;
    wire[1:0] const_146_2;
    wire const_147_1;
    wire const_148_0;
    wire[1:0] const_149_1;
    wire[1:0] const_150_0;
    wire const_151_0;
    wire const_152_0;
    wire[2:0] const_153_4;
    wire[1:0] const_154_1;
    wire const_155_0;
    wire const_156_0;
    wire const_157_0;
    wire const_158_0;
    wire const_159_1;
    wire const_160_0;
    wire const_161_0;
    wire const_162_0;
    wire const_163_0;
    wire const_164_0;
    wire const_165_1;
    wire const_166_0;
    wire const_167_0;
    wire const_168_0;
    wire const_169_0;
    wire const_170_0;
    wire[7:0] const_171_0;
    wire const_172_0;
    wire const_173_0;
    wire[7:0] tmp637;
    wire tmp638;
    wire tmp639;
    wire tmp640;
    wire tmp641;
    wire[3:0] tmp642;
    wire[3:0] tmp643;
    wire[3:0] tmp644;
    wire[3:0] tmp645;
    wire[3:0] tmp646;
    wire[3:0] tmp647;
    wire[2:0] tmp648;
    wire[3:0] tmp649;
    wire[2:0] tmp650;
    wire[3:0] tmp651;
    wire tmp652;
    wire[4:0] tmp653;
    wire[4:0] tmp654;
    wire[3:0] tmp655;
    wire[3:0] tmp656;
    wire[3:0] tmp657;
    wire tmp658;
    wire[4:0] tmp659;
    wire tmp660;
    wire tmp661;
    wire[3:0] tmp662;
    wire[3:0] tmp663;
    wire tmp664;
    wire[3:0] tmp665;
    wire[3:0] tmp666;
    wire[2:0] tmp667;
    wire[3:0] tmp668;
    wire[4:0] tmp669;
    wire[3:0] tmp670;
    wire[4:0] tmp671;
    wire tmp672;
    wire[4:0] tmp673;
    wire[4:0] tmp674;
    wire tmp675;
    wire[3:0] tmp676;
    wire tmp677;
    wire[3:0] tmp678;
    wire[3:0] tmp679;
    wire[3:0] tmp680;
    wire[3:0] tmp681;
    wire tmp682;
    wire[3:0] tmp683;
    wire[7:0] tmp684;
    wire[7:0] tmp685;
    wire[6:0] tmp686;
    wire[7:0] tmp687;
    wire[6:0] tmp688;
    wire[7:0] tmp689;
    wire[7:0] tmp690;
    wire tmp691;
    wire[7:0] tmp692;
    wire[1:0] tmp693;
    wire[1:0] tmp694;
    wire[5:0] tmp695;
    wire[7:0] tmp696;
    wire[5:0] tmp697;
    wire[7:0] tmp698;
    wire[7:0] tmp699;
    wire tmp700;
    wire[7:0] tmp701;
    wire[3:0] tmp702;
    wire[3:0] tmp703;
    wire[3:0] tmp704;
    wire[7:0] tmp705;
    wire[3:0] tmp706;
    wire[7:0] tmp707;
    wire[7:0] tmp708;
    wire tmp709;
    wire[7:0] tmp710;
    wire[7:0] tmp711;
    wire[7:0] tmp712;
    wire tmp713;
    wire[7:0] tmp714;
    wire[3:0] tmp715;
    wire[3:0] tmp716;
    wire tmp717;
    wire tmp718;
    wire tmp719;
    wire tmp720;
    wire tmp721;
    wire[1:0] tmp722;
    wire tmp723;
    wire tmp724;
    wire tmp725;
    wire tmp726;
    wire tmp727;
    wire[5:0] tmp728;
    wire tmp729;
    wire[4:0] tmp730;
    wire tmp731;
    wire[4:0] tmp732;
    wire[5:0] tmp733;
    wire tmp734;
    wire[4:0] tmp735;
    wire tmp736;
    wire[4:0] tmp737;
    wire[5:0] tmp738;
    wire tmp739;
    wire[4:0] tmp740;
    wire[5:0] tmp741;
    wire[5:0] tmp742;
    wire[5:0] tmp743;
    wire tmp744;
    wire tmp745;
    wire[4:0] tmp746;
    wire[5:0] tmp747;
    wire[4:0] tmp748;
    wire[5:0] tmp749;
    wire[6:0] tmp750;
    wire tmp751;
    wire[6:0] tmp752;
    wire[6:0] tmp753;
    wire[4:0] tmp754;
    wire tmp755;
    wire[3:0] tmp756;
    wire[3:0] tmp757;
    wire[1:0] tmp758;
    wire[1:0] tmp759;
    wire[1:0] tmp760;
    wire tmp761;
    wire[1:0] tmp762;
    wire tmp763;
    wire tmp764;
    wire[1:0] tmp765;
    wire tmp766;
    wire tmp767;
    wire tmp768;
    wire tmp769;
    wire tmp770;
    wire tmp771;
    wire tmp772;
    wire[1:0] tmp773;
    wire[1:0] tmp774;
    wire[1:0] tmp775;
    wire[1:0] tmp776;
    wire[1:0] tmp777;
    wire tmp778;
    wire[1:0] tmp779;
    wire tmp780;
    wire tmp781;
    wire[1:0] tmp782;
    wire tmp783;
    wire tmp784;
    wire tmp785;
    wire tmp786;
    wire tmp787;
    wire tmp788;
    wire tmp789;
    wire[1:0] tmp790;
    wire[1:0] tmp791;
    wire[1:0] tmp792;
    wire[1:0] tmp793;
    wire[3:0] tmp794;
    wire[2:0] tmp795;
    wire tmp796;
    wire tmp797;
    wire tmp798;
    wire tmp799;
    wire[2:0] tmp800;
    wire tmp801;
    wire tmp802;
    wire[2:0] tmp803;
    wire tmp804;
    wire tmp805;
    wire tmp806;
    wire[1:0] tmp807;
    wire[2:0] tmp808;
    wire[2:0] tmp809;
    wire[2:0] tmp810;
    wire[2:0] tmp811;
    wire tmp812;
    wire[3:0] tmp813;
    wire[2:0] tmp814;
    wire[3:0] tmp815;
    wire[4:0] tmp816;
    wire[3:0] tmp817;
    wire[4:0] tmp818;
    wire[4:0] tmp819;
    wire[3:0] tmp820;
    wire[4:0] tmp821;
    wire tmp822;
    wire[4:0] tmp823;
    wire[3:0] tmp824;
    wire[4:0] tmp825;
    wire[3:0] tmp826;
    wire[4:0] tmp827;
    wire[4:0] tmp828;
    wire tmp829;
    wire[4:0] tmp830;
    wire[1:0] tmp831;
    wire[1:0] tmp832;
    wire[2:0] tmp833;
    wire[4:0] tmp834;
    wire[2:0] tmp835;
    wire[4:0] tmp836;
    wire[4:0] tmp837;
    wire tmp838;
    wire[4:0] tmp839;
    wire[3:0] tmp840;
    wire[3:0] tmp841;
    wire tmp842;
    wire[4:0] tmp843;
    wire tmp844;
    wire[4:0] tmp845;
    wire[4:0] tmp846;
    wire tmp847;
    wire[4:0] tmp848;
    wire[7:0] tmp849;
    wire[4:0] tmp850;
    wire tmp851;
    wire[4:0] tmp852;
    wire tmp853;
    wire[4:0] tmp854;
    wire tmp855;
    wire tmp856;
    wire tmp857;
    wire tmp858;
    wire tmp859;
    wire tmp860;
    wire tmp861;
    wire tmp862;
    wire tmp863;
    wire tmp864;
    wire[4:0] tmp865;
    wire[3:0] tmp866;
    wire[4:0] tmp867;
    wire[5:0] tmp868;
    wire[4:0] tmp869;
    wire tmp870;
    wire tmp871;
    wire[2:0] tmp872;
    wire[2:0] tmp873;
    wire[2:0] tmp874;
    wire[2:0] tmp875;
    wire[3:0] tmp876;
    wire[4:0] tmp877;
    wire[3:0] tmp878;
    wire[3:0] tmp879;
    wire[2:0] tmp880;
    wire[3:0] tmp881;
    wire[4:0] tmp882;
    wire[3:0] tmp883;
    wire tmp884;
    wire tmp885;
    wire tmp886;
    wire[3:0] tmp887;
    wire[2:0] tmp888;
    wire[3:0] tmp889;
    wire tmp890;
    wire tmp891;
    wire tmp892;
    wire tmp893;
    wire tmp894;
    wire tmp895;
    wire tmp896;
    wire tmp897;
    wire tmp898;
    wire tmp899;
    wire tmp900;
    wire tmp901;
    wire tmp902;
    wire tmp903;
    wire tmp904;
    wire tmp905;
    wire tmp906;
    wire tmp907;
    wire[7:0] tmp908;
    wire tmp909;
    wire[6:0] tmp910;
    wire[7:0] tmp911;
    wire[7:0] tmp912;
    wire[7:0] tmp913;

    // Combinational
    assign const_116_1 = 1;
    assign const_117_1 = 1;
    assign const_118_1 = 1;
    assign const_119_0 = 0;
    assign const_120_0 = 0;
    assign const_121_8 = 8;
    assign const_122_8 = 8;
    assign const_123_0 = 0;
    assign const_124_0 = 0;
    assign const_125_0 = 0;
    assign const_126_0 = 0;
    assign const_127_0 = 0;
    assign const_128_0 = 0;
    assign const_129_0 = 0;
    assign const_130_0 = 0;
    assign const_131_0 = 0;
    assign const_132_1 = 1;
    assign const_133_0 = 0;
    assign const_134_0 = 0;
    assign const_135_0 = 0;
    assign const_136_0 = 0;
    assign const_137_2 = 2;
    assign const_138_1 = 1;
    assign const_139_0 = 0;
    assign const_140_1 = 1;
    assign const_141_0 = 0;
    assign const_142_0 = 0;
    assign const_143_0 = 0;
    assign const_144_0 = 0;
    assign const_145_0 = 0;
    assign const_146_2 = 2;
    assign const_147_1 = 1;
    assign const_148_0 = 0;
    assign const_149_1 = 1;
    assign const_150_0 = 0;
    assign const_151_0 = 0;
    assign const_152_0 = 0;
    assign const_153_4 = 4;
    assign const_154_1 = 1;
    assign const_155_0 = 0;
    assign const_156_0 = 0;
    assign const_157_0 = 0;
    assign const_158_0 = 0;
    assign const_159_1 = 1;
    assign const_160_0 = 0;
    assign const_161_0 = 0;
    assign const_162_0 = 0;
    assign const_163_0 = 0;
    assign const_164_0 = 0;
    assign const_165_1 = 1;
    assign const_166_0 = 0;
    assign const_167_0 = 0;
    assign const_168_0 = 0;
    assign const_169_0 = 0;
    assign const_170_0 = 0;
    assign const_171_0 = 0;
    assign const_172_0 = 0;
    assign const_173_0 = 0;
    assign out637 = tmp637;
    assign tmp637 = tmp913;
    assign tmp638 = tmp640;
    assign tmp639 = tmp641;
    assign tmp640 = {float_a[7]};
    assign tmp641 = {float_b[7]};
    assign tmp642 = tmp644;
    assign tmp643 = tmp645;
    assign tmp644 = {float_a[6], float_a[5], float_a[4], float_a[3]};
    assign tmp645 = {float_b[6], float_b[5], float_b[4], float_b[3]};
    assign tmp646 = tmp649;
    assign tmp647 = tmp651;
    assign tmp648 = {float_a[2], float_a[1], float_a[0]};
    assign tmp649 = {const_116_1, tmp648};
    assign tmp650 = {float_b[2], float_b[1], float_b[0]};
    assign tmp651 = {const_117_1, tmp650};
    assign tmp652 = tmp658;
    assign tmp653 = tmp659;
    assign tmp654 = tmp674;
    assign tmp655 = tmp662;
    assign tmp656 = tmp676;
    assign tmp657 = tmp678;
    assign tmp658 = float_adder_pipereg_0to1_sign_a_1 ^ float_adder_pipereg_0to1_sign_b_2;
    assign tmp659 = float_adder_pipereg_0to1_exp_a_3 - float_adder_pipereg_0to1_exp_b_4;
    assign tmp660 = {tmp653[4]};
    assign tmp661 = {tmp653[4]};
    assign tmp662 = tmp661 ? float_adder_pipereg_0to1_exp_b_4 : float_adder_pipereg_0to1_exp_a_3;
    assign tmp663 = {tmp653[3], tmp653[2], tmp653[1], tmp653[0]};
    assign tmp664 = {tmp653[4]};
    assign tmp665 = {tmp653[3], tmp653[2], tmp653[1], tmp653[0]};
    assign tmp666 = ~tmp665;
    assign tmp667 = {const_119_0, const_119_0, const_119_0};
    assign tmp668 = {tmp667, const_118_1};
    assign tmp669 = tmp666 + tmp668;
    assign tmp670 = {tmp669[3], tmp669[2], tmp669[1], tmp669[0]};
    assign tmp671 = {tmp664, tmp670};
    assign tmp672 = {const_120_0};
    assign tmp673 = {tmp672, tmp663};
    assign tmp674 = tmp660 ? tmp671 : tmp673;
    assign tmp675 = {tmp653[4]};
    assign tmp676 = tmp675 ? float_adder_pipereg_0to1_mant_a_5 : float_adder_pipereg_0to1_mant_b_6;
    assign tmp677 = {tmp653[4]};
    assign tmp678 = tmp677 ? float_adder_pipereg_0to1_mant_b_6 : float_adder_pipereg_0to1_mant_a_5;
    assign tmp679 = tmp680;
    assign tmp680 = {float_adder_pipereg_1to2_signed_shift_12[3], float_adder_pipereg_1to2_signed_shift_12[2], float_adder_pipereg_1to2_signed_shift_12[1], float_adder_pipereg_1to2_signed_shift_12[0]};
    assign tmp681 = tmp683;
    assign tmp682 = tmp679 > const_121_8;
    assign tmp683 = tmp682 ? const_122_8 : tmp679;
    assign tmp684 = {float_adder_pipereg_1to2_mant_smaller_13, const_123_0};
    assign tmp685 = tmp714;
    assign tmp686 = {tmp684[6], tmp684[5], tmp684[4], tmp684[3], tmp684[2], tmp684[1], tmp684[0]};
    assign tmp687 = {tmp686, const_124_0};
    assign tmp688 = {tmp684[7], tmp684[6], tmp684[5], tmp684[4], tmp684[3], tmp684[2], tmp684[1]};
    assign tmp689 = {const_124_0, tmp688};
    assign tmp690 = const_125_0 ? tmp687 : tmp689;
    assign tmp691 = {tmp681[0]};
    assign tmp692 = tmp691 ? tmp690 : tmp684;
    assign tmp693 = {const_124_0, const_124_0};
    assign tmp694 = {tmp693[1], tmp693[0]};
    assign tmp695 = {tmp692[5], tmp692[4], tmp692[3], tmp692[2], tmp692[1], tmp692[0]};
    assign tmp696 = {tmp695, tmp694};
    assign tmp697 = {tmp692[7], tmp692[6], tmp692[5], tmp692[4], tmp692[3], tmp692[2]};
    assign tmp698 = {tmp694, tmp697};
    assign tmp699 = const_125_0 ? tmp696 : tmp698;
    assign tmp700 = {tmp681[1]};
    assign tmp701 = tmp700 ? tmp699 : tmp692;
    assign tmp702 = {tmp694, tmp694};
    assign tmp703 = {tmp702[3], tmp702[2], tmp702[1], tmp702[0]};
    assign tmp704 = {tmp701[3], tmp701[2], tmp701[1], tmp701[0]};
    assign tmp705 = {tmp704, tmp703};
    assign tmp706 = {tmp701[7], tmp701[6], tmp701[5], tmp701[4]};
    assign tmp707 = {tmp703, tmp706};
    assign tmp708 = const_125_0 ? tmp705 : tmp707;
    assign tmp709 = {tmp681[2]};
    assign tmp710 = tmp709 ? tmp708 : tmp701;
    assign tmp711 = {tmp703, tmp703};
    assign tmp712 = {tmp711[7], tmp711[6], tmp711[5], tmp711[4], tmp711[3], tmp711[2], tmp711[1], tmp711[0]};
    assign tmp713 = {tmp681[3]};
    assign tmp714 = tmp713 ? tmp712 : tmp710;
    assign tmp715 = {tmp685[7], tmp685[6], tmp685[5], tmp685[4]};
    assign tmp716 = {tmp685[3], tmp685[2], tmp685[1], tmp685[0]};
    assign tmp717 = tmp720;
    assign tmp718 = tmp721;
    assign tmp719 = tmp727;
    assign tmp720 = {tmp716[3]};
    assign tmp721 = {tmp716[2]};
    assign tmp722 = {tmp716[1], tmp716[0]};
    assign tmp723 = {tmp722[0]};
    assign tmp724 = {tmp723};
    assign tmp725 = {tmp722[1]};
    assign tmp726 = {tmp725};
    assign tmp727 = tmp724 | tmp726;
    assign tmp728 = tmp743;
    assign tmp729 = {const_126_0};
    assign tmp730 = {tmp729, float_adder_pipereg_2to3_mant_larger_21};
    assign tmp731 = {const_127_0};
    assign tmp732 = {tmp731, float_adder_pipereg_2to3_aligned_mant_msb_22};
    assign tmp733 = tmp730 - tmp732;
    assign tmp734 = {const_128_0};
    assign tmp735 = {tmp734, float_adder_pipereg_2to3_mant_larger_21};
    assign tmp736 = {const_129_0};
    assign tmp737 = {tmp736, float_adder_pipereg_2to3_aligned_mant_msb_22};
    assign tmp738 = tmp735 + tmp737;
    assign tmp739 = ~float_adder_pipereg_2to3_sign_xor_18;
    assign tmp740 = {const_131_0, const_131_0, const_131_0, const_131_0, const_131_0};
    assign tmp741 = {tmp740, const_130_0};
    assign tmp742 = float_adder_pipereg_2to3_sign_xor_18 ? tmp733 : tmp741;
    assign tmp743 = tmp739 ? tmp738 : tmp742;
    assign tmp744 = tmp745;
    assign tmp745 = {tmp728[5]};
    assign tmp746 = tmp754;
    assign tmp747 = ~tmp728;
    assign tmp748 = {const_133_0, const_133_0, const_133_0, const_133_0, const_133_0};
    assign tmp749 = {tmp748, const_132_1};
    assign tmp750 = tmp747 + tmp749;
    assign tmp751 = {const_134_0};
    assign tmp752 = {tmp751, tmp728};
    assign tmp753 = tmp744 ? tmp750 : tmp752;
    assign tmp754 = {tmp753[4], tmp753[3], tmp753[2], tmp753[1], tmp753[0]};
    assign tmp755 = {tmp746[4]};
    assign tmp756 = tmp820;
    assign tmp757 = {tmp746[3], tmp746[2], tmp746[1], tmp746[0]};
    assign tmp758 = {tmp757[3], tmp757[2]};
    assign tmp759 = {tmp757[1], tmp757[0]};
    assign tmp760 = tmp776;
    assign tmp761 = {const_136_0};
    assign tmp762 = {tmp761, const_135_0};
    assign tmp763 = tmp758 == tmp762;
    assign tmp764 = {const_139_0};
    assign tmp765 = {tmp764, const_138_1};
    assign tmp766 = tmp758 == tmp765;
    assign tmp767 = ~tmp763;
    assign tmp768 = tmp767 & tmp766;
    assign tmp769 = ~tmp763;
    assign tmp770 = ~tmp766;
    assign tmp771 = tmp769 & tmp770;
    assign tmp772 = {const_143_0};
    assign tmp773 = {tmp772, const_142_0};
    assign tmp774 = tmp763 ? const_137_2 : tmp773;
    assign tmp775 = tmp768 ? const_140_1 : tmp774;
    assign tmp776 = tmp771 ? const_141_0 : tmp775;
    assign tmp777 = tmp793;
    assign tmp778 = {const_145_0};
    assign tmp779 = {tmp778, const_144_0};
    assign tmp780 = tmp759 == tmp779;
    assign tmp781 = {const_148_0};
    assign tmp782 = {tmp781, const_147_1};
    assign tmp783 = tmp759 == tmp782;
    assign tmp784 = ~tmp780;
    assign tmp785 = tmp784 & tmp783;
    assign tmp786 = ~tmp780;
    assign tmp787 = ~tmp783;
    assign tmp788 = tmp786 & tmp787;
    assign tmp789 = {const_152_0};
    assign tmp790 = {tmp789, const_151_0};
    assign tmp791 = tmp780 ? const_146_2 : tmp790;
    assign tmp792 = tmp785 ? const_149_1 : tmp791;
    assign tmp793 = tmp788 ? const_150_0 : tmp792;
    assign tmp794 = tmp813;
    assign tmp795 = tmp811;
    assign tmp796 = {tmp760[1]};
    assign tmp797 = {tmp777[1]};
    assign tmp798 = tmp796 & tmp797;
    assign tmp799 = {tmp777[0]};
    assign tmp800 = {const_154_1, tmp799};
    assign tmp801 = ~tmp798;
    assign tmp802 = tmp801 & tmp796;
    assign tmp803 = {const_155_0, tmp760};
    assign tmp804 = ~tmp798;
    assign tmp805 = ~tmp796;
    assign tmp806 = tmp804 & tmp805;
    assign tmp807 = {const_157_0, const_157_0};
    assign tmp808 = {tmp807, const_156_0};
    assign tmp809 = tmp798 ? const_153_4 : tmp808;
    assign tmp810 = tmp802 ? tmp800 : tmp809;
    assign tmp811 = tmp806 ? tmp803 : tmp810;
    assign tmp812 = {const_158_0};
    assign tmp813 = {tmp812, tmp795};
    assign tmp814 = {const_160_0, const_160_0, const_160_0};
    assign tmp815 = {tmp814, const_159_1};
    assign tmp816 = tmp794 + tmp815;
    assign tmp817 = {const_162_0, const_162_0, const_162_0, const_162_0};
    assign tmp818 = {tmp817, const_161_0};
    assign tmp819 = tmp755 ? tmp818 : tmp816;
    assign tmp820 = {tmp819[3], tmp819[2], tmp819[1], tmp819[0]};
    assign tmp821 = tmp854;
    assign tmp822 = {const_163_0};
    assign tmp823 = {tmp822, float_adder_pipereg_3to4_lzc_36};
    assign tmp824 = {float_adder_pipereg_3to4_mant_sum_34[3], float_adder_pipereg_3to4_mant_sum_34[2], float_adder_pipereg_3to4_mant_sum_34[1], float_adder_pipereg_3to4_mant_sum_34[0]};
    assign tmp825 = {tmp824, const_164_0};
    assign tmp826 = {float_adder_pipereg_3to4_mant_sum_34[4], float_adder_pipereg_3to4_mant_sum_34[3], float_adder_pipereg_3to4_mant_sum_34[2], float_adder_pipereg_3to4_mant_sum_34[1]};
    assign tmp827 = {const_164_0, tmp826};
    assign tmp828 = const_165_1 ? tmp825 : tmp827;
    assign tmp829 = {tmp823[0]};
    assign tmp830 = tmp829 ? tmp828 : float_adder_pipereg_3to4_mant_sum_34;
    assign tmp831 = {const_164_0, const_164_0};
    assign tmp832 = {tmp831[1], tmp831[0]};
    assign tmp833 = {tmp830[2], tmp830[1], tmp830[0]};
    assign tmp834 = {tmp833, tmp832};
    assign tmp835 = {tmp830[4], tmp830[3], tmp830[2]};
    assign tmp836 = {tmp832, tmp835};
    assign tmp837 = const_165_1 ? tmp834 : tmp836;
    assign tmp838 = {tmp823[1]};
    assign tmp839 = tmp838 ? tmp837 : tmp830;
    assign tmp840 = {tmp832, tmp832};
    assign tmp841 = {tmp840[3], tmp840[2], tmp840[1], tmp840[0]};
    assign tmp842 = {tmp839[0]};
    assign tmp843 = {tmp842, tmp841};
    assign tmp844 = {tmp839[4]};
    assign tmp845 = {tmp841, tmp844};
    assign tmp846 = const_165_1 ? tmp843 : tmp845;
    assign tmp847 = {tmp823[2]};
    assign tmp848 = tmp847 ? tmp846 : tmp839;
    assign tmp849 = {tmp841, tmp841};
    assign tmp850 = {tmp849[4], tmp849[3], tmp849[2], tmp849[1], tmp849[0]};
    assign tmp851 = {tmp823[3]};
    assign tmp852 = tmp851 ? tmp850 : tmp848;
    assign tmp853 = {tmp823[4]};
    assign tmp854 = tmp853 ? tmp850 : tmp852;
    assign tmp855 = tmp864;
    assign tmp856 = {tmp821[1]};
    assign tmp857 = float_adder_pipereg_3to4_round_33 | float_adder_pipereg_3to4_sticky_31;
    assign tmp858 = float_adder_pipereg_3to4_guard_32 & tmp857;
    assign tmp859 = ~float_adder_pipereg_3to4_round_33;
    assign tmp860 = float_adder_pipereg_3to4_guard_32 & tmp859;
    assign tmp861 = ~float_adder_pipereg_3to4_sticky_31;
    assign tmp862 = tmp860 & tmp861;
    assign tmp863 = tmp862 & tmp856;
    assign tmp864 = tmp858 | tmp863;
    assign tmp865 = tmp869;
    assign tmp866 = {const_166_0, const_166_0, const_166_0, const_166_0};
    assign tmp867 = {tmp866, tmp855};
    assign tmp868 = tmp821 + tmp867;
    assign tmp869 = {tmp868[4], tmp868[3], tmp868[2], tmp868[1], tmp868[0]};
    assign tmp870 = tmp871;
    assign tmp871 = {tmp865[4]};
    assign tmp872 = tmp875;
    assign tmp873 = {tmp865[3], tmp865[2], tmp865[1]};
    assign tmp874 = {tmp865[2], tmp865[1], tmp865[0]};
    assign tmp875 = tmp870 ? tmp873 : tmp874;
    assign tmp876 = tmp878;
    assign tmp877 = float_adder_pipereg_3to4_exp_larger_29 - float_adder_pipereg_3to4_lzc_36;
    assign tmp878 = {tmp877[3], tmp877[2], tmp877[1], tmp877[0]};
    assign tmp879 = tmp883;
    assign tmp880 = {const_167_0, const_167_0, const_167_0};
    assign tmp881 = {tmp880, tmp870};
    assign tmp882 = tmp876 + tmp881;
    assign tmp883 = {tmp882[3], tmp882[2], tmp882[1], tmp882[0]};
    assign tmp884 = tmp907;
    assign tmp885 = float_adder_pipereg_3to4_sign_a_27 ^ float_adder_pipereg_3to4_sign_b_28;
    assign tmp886 = ~tmp885;
    assign tmp887 = {float_adder_pipereg_3to4_signed_shift_30[3], float_adder_pipereg_3to4_signed_shift_30[2], float_adder_pipereg_3to4_signed_shift_30[1], float_adder_pipereg_3to4_signed_shift_30[0]};
    assign tmp888 = {const_169_0, const_169_0, const_169_0};
    assign tmp889 = {tmp888, const_168_0};
    assign tmp890 = tmp887 == tmp889;
    assign tmp891 = float_adder_pipereg_3to4_is_neg_35 ^ float_adder_pipereg_3to4_sign_a_27;
    assign tmp892 = ~tmp886;
    assign tmp893 = tmp892 & tmp890;
    assign tmp894 = {float_adder_pipereg_3to4_signed_shift_30[4]};
    assign tmp895 = ~tmp886;
    assign tmp896 = ~tmp890;
    assign tmp897 = tmp895 & tmp896;
    assign tmp898 = tmp897 & tmp894;
    assign tmp899 = ~tmp886;
    assign tmp900 = ~tmp890;
    assign tmp901 = tmp899 & tmp900;
    assign tmp902 = ~tmp894;
    assign tmp903 = tmp901 & tmp902;
    assign tmp904 = tmp886 ? float_adder_pipereg_3to4_sign_a_27 : const_170_0;
    assign tmp905 = tmp893 ? tmp891 : tmp904;
    assign tmp906 = tmp898 ? float_adder_pipereg_3to4_sign_b_28 : tmp905;
    assign tmp907 = tmp903 ? float_adder_pipereg_3to4_sign_a_27 : tmp906;
    assign tmp908 = {tmp884, tmp879, tmp872};
    assign tmp909 = ~float_adder_pipereg_3to4_w_en_26;
    assign tmp910 = {const_173_0, const_173_0, const_173_0, const_173_0, const_173_0, const_173_0, const_173_0};
    assign tmp911 = {tmp910, const_172_0};
    assign tmp912 = float_adder_pipereg_3to4_w_en_26 ? tmp908 : tmp911;
    assign tmp913 = tmp909 ? const_171_0 : tmp912;

    // Registers
    always @(posedge clk)
    begin
        if (rst) begin
            float_adder_pipereg_0to1_exp_a_3 <= 0;
            float_adder_pipereg_0to1_exp_b_4 <= 0;
            float_adder_pipereg_0to1_mant_a_5 <= 0;
            float_adder_pipereg_0to1_mant_b_6 <= 0;
            float_adder_pipereg_0to1_sign_a_1 <= 0;
            float_adder_pipereg_0to1_sign_b_2 <= 0;
            float_adder_pipereg_0to1_w_en_0 <= 0;
            float_adder_pipereg_1to2_exp_larger_11 <= 0;
            float_adder_pipereg_1to2_mant_larger_14 <= 0;
            float_adder_pipereg_1to2_mant_smaller_13 <= 0;
            float_adder_pipereg_1to2_sign_a_8 <= 0;
            float_adder_pipereg_1to2_sign_b_9 <= 0;
            float_adder_pipereg_1to2_sign_xor_10 <= 0;
            float_adder_pipereg_1to2_signed_shift_12 <= 0;
            float_adder_pipereg_1to2_w_en_7 <= 0;
            float_adder_pipereg_2to3_aligned_mant_msb_22 <= 0;
            float_adder_pipereg_2to3_exp_larger_19 <= 0;
            float_adder_pipereg_2to3_guard_24 <= 0;
            float_adder_pipereg_2to3_mant_larger_21 <= 0;
            float_adder_pipereg_2to3_round_25 <= 0;
            float_adder_pipereg_2to3_sign_a_16 <= 0;
            float_adder_pipereg_2to3_sign_b_17 <= 0;
            float_adder_pipereg_2to3_sign_xor_18 <= 0;
            float_adder_pipereg_2to3_signed_shift_20 <= 0;
            float_adder_pipereg_2to3_sticky_23 <= 0;
            float_adder_pipereg_2to3_w_en_15 <= 0;
            float_adder_pipereg_3to4_exp_larger_29 <= 0;
            float_adder_pipereg_3to4_guard_32 <= 0;
            float_adder_pipereg_3to4_is_neg_35 <= 0;
            float_adder_pipereg_3to4_lzc_36 <= 0;
            float_adder_pipereg_3to4_mant_sum_34 <= 0;
            float_adder_pipereg_3to4_round_33 <= 0;
            float_adder_pipereg_3to4_sign_a_27 <= 0;
            float_adder_pipereg_3to4_sign_b_28 <= 0;
            float_adder_pipereg_3to4_signed_shift_30 <= 0;
            float_adder_pipereg_3to4_sticky_31 <= 0;
            float_adder_pipereg_3to4_w_en_26 <= 0;
        end
        else begin
            float_adder_pipereg_0to1_exp_a_3 <= tmp642;
            float_adder_pipereg_0to1_exp_b_4 <= tmp643;
            float_adder_pipereg_0to1_mant_a_5 <= tmp646;
            float_adder_pipereg_0to1_mant_b_6 <= tmp647;
            float_adder_pipereg_0to1_sign_a_1 <= tmp638;
            float_adder_pipereg_0to1_sign_b_2 <= tmp639;
            float_adder_pipereg_0to1_w_en_0 <= adder_w_en_in636;
            float_adder_pipereg_1to2_exp_larger_11 <= tmp655;
            float_adder_pipereg_1to2_mant_larger_14 <= tmp657;
            float_adder_pipereg_1to2_mant_smaller_13 <= tmp656;
            float_adder_pipereg_1to2_sign_a_8 <= float_adder_pipereg_0to1_sign_a_1;
            float_adder_pipereg_1to2_sign_b_9 <= float_adder_pipereg_0to1_sign_b_2;
            float_adder_pipereg_1to2_sign_xor_10 <= tmp652;
            float_adder_pipereg_1to2_signed_shift_12 <= tmp654;
            float_adder_pipereg_1to2_w_en_7 <= float_adder_pipereg_0to1_w_en_0;
            float_adder_pipereg_2to3_aligned_mant_msb_22 <= tmp715;
            float_adder_pipereg_2to3_exp_larger_19 <= float_adder_pipereg_1to2_exp_larger_11;
            float_adder_pipereg_2to3_guard_24 <= tmp717;
            float_adder_pipereg_2to3_mant_larger_21 <= float_adder_pipereg_1to2_mant_larger_14;
            float_adder_pipereg_2to3_round_25 <= tmp718;
            float_adder_pipereg_2to3_sign_a_16 <= float_adder_pipereg_1to2_sign_a_8;
            float_adder_pipereg_2to3_sign_b_17 <= float_adder_pipereg_1to2_sign_b_9;
            float_adder_pipereg_2to3_sign_xor_18 <= float_adder_pipereg_1to2_sign_xor_10;
            float_adder_pipereg_2to3_signed_shift_20 <= float_adder_pipereg_1to2_signed_shift_12;
            float_adder_pipereg_2to3_sticky_23 <= tmp719;
            float_adder_pipereg_2to3_w_en_15 <= float_adder_pipereg_1to2_w_en_7;
            float_adder_pipereg_3to4_exp_larger_29 <= float_adder_pipereg_2to3_exp_larger_19;
            float_adder_pipereg_3to4_guard_32 <= float_adder_pipereg_2to3_guard_24;
            float_adder_pipereg_3to4_is_neg_35 <= tmp744;
            float_adder_pipereg_3to4_lzc_36 <= tmp756;
            float_adder_pipereg_3to4_mant_sum_34 <= tmp746;
            float_adder_pipereg_3to4_round_33 <= float_adder_pipereg_2to3_round_25;
            float_adder_pipereg_3to4_sign_a_27 <= float_adder_pipereg_2to3_sign_a_16;
            float_adder_pipereg_3to4_sign_b_28 <= float_adder_pipereg_2to3_sign_b_17;
            float_adder_pipereg_3to4_signed_shift_30 <= float_adder_pipereg_2to3_signed_shift_20;
            float_adder_pipereg_3to4_sticky_31 <= float_adder_pipereg_2to3_sticky_23;
            float_adder_pipereg_3to4_w_en_26 <= float_adder_pipereg_2to3_w_en_15;
        end
    end

endmodule

