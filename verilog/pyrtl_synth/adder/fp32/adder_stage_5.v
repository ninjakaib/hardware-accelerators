// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, abs_mantissa, exp_diff, exp_larger, guard_bit, is_neg, lzc, round_bit, sign_a, sign_b, sticky_bit, out18156, out18165, out18170);
    input clk;
    input rst;
    input[24:0] abs_mantissa;
    input[8:0] exp_diff;
    input[7:0] exp_larger;
    input guard_bit;
    input is_neg;
    input[3:0] lzc;
    input round_bit;
    input sign_a;
    input sign_b;
    input sticky_bit;
    output[22:0] out18156;
    output[7:0] out18165;
    output out18170;

    wire const_3255_0;
    wire const_3256_0;
    wire const_3257_1;
    wire const_3258_0;
    wire const_3259_0;
    wire const_3260_0;
    wire const_3261_0;
    wire const_3262_0;
    wire const_3263_0;
    wire[24:0] tmp18051;
    wire[20:0] tmp18052;
    wire[24:0] tmp18053;
    wire[23:0] tmp18054;
    wire[24:0] tmp18055;
    wire[23:0] tmp18056;
    wire[24:0] tmp18057;
    wire[24:0] tmp18058;
    wire tmp18059;
    wire[24:0] tmp18060;
    wire[1:0] tmp18061;
    wire[1:0] tmp18062;
    wire[22:0] tmp18063;
    wire[24:0] tmp18064;
    wire[22:0] tmp18065;
    wire[24:0] tmp18066;
    wire[24:0] tmp18067;
    wire tmp18068;
    wire[24:0] tmp18069;
    wire[3:0] tmp18070;
    wire[3:0] tmp18071;
    wire[20:0] tmp18072;
    wire[24:0] tmp18073;
    wire[20:0] tmp18074;
    wire[24:0] tmp18075;
    wire[24:0] tmp18076;
    wire tmp18077;
    wire[24:0] tmp18078;
    wire[7:0] tmp18079;
    wire[7:0] tmp18080;
    wire[16:0] tmp18081;
    wire[24:0] tmp18082;
    wire[16:0] tmp18083;
    wire[24:0] tmp18084;
    wire[24:0] tmp18085;
    wire tmp18086;
    wire[24:0] tmp18087;
    wire[15:0] tmp18088;
    wire[15:0] tmp18089;
    wire[8:0] tmp18090;
    wire[24:0] tmp18091;
    wire[8:0] tmp18092;
    wire[24:0] tmp18093;
    wire[24:0] tmp18094;
    wire tmp18095;
    wire[24:0] tmp18096;
    wire[31:0] tmp18097;
    wire[24:0] tmp18098;
    wire tmp18099;
    wire[24:0] tmp18100;
    wire tmp18101;
    wire[24:0] tmp18102;
    wire tmp18103;
    wire[24:0] tmp18104;
    wire tmp18105;
    wire[24:0] tmp18106;
    wire tmp18107;
    wire[24:0] tmp18108;
    wire tmp18109;
    wire[24:0] tmp18110;
    wire tmp18111;
    wire[24:0] tmp18112;
    wire tmp18113;
    wire[24:0] tmp18114;
    wire tmp18115;
    wire[24:0] tmp18116;
    wire tmp18117;
    wire[24:0] tmp18118;
    wire tmp18119;
    wire[24:0] tmp18120;
    wire tmp18121;
    wire[24:0] tmp18122;
    wire tmp18123;
    wire[24:0] tmp18124;
    wire tmp18125;
    wire[24:0] tmp18126;
    wire tmp18127;
    wire[24:0] tmp18128;
    wire tmp18129;
    wire[24:0] tmp18130;
    wire tmp18131;
    wire[24:0] tmp18132;
    wire tmp18133;
    wire[24:0] tmp18134;
    wire tmp18135;
    wire[24:0] tmp18136;
    wire tmp18137;
    wire[24:0] tmp18138;
    wire tmp18139;
    wire tmp18140;
    wire tmp18141;
    wire tmp18142;
    wire tmp18143;
    wire tmp18144;
    wire tmp18145;
    wire tmp18146;
    wire tmp18147;
    wire tmp18148;
    wire[24:0] tmp18149;
    wire[23:0] tmp18150;
    wire[24:0] tmp18151;
    wire[25:0] tmp18152;
    wire[24:0] tmp18153;
    wire tmp18154;
    wire tmp18155;
    wire[22:0] tmp18156;
    wire[22:0] tmp18157;
    wire[22:0] tmp18158;
    wire[22:0] tmp18159;
    wire[7:0] tmp18160;
    wire[3:0] tmp18161;
    wire[7:0] tmp18162;
    wire[8:0] tmp18163;
    wire[7:0] tmp18164;
    wire[7:0] tmp18165;
    wire[6:0] tmp18166;
    wire[7:0] tmp18167;
    wire[8:0] tmp18168;
    wire[7:0] tmp18169;
    wire tmp18170;
    wire tmp18171;
    wire tmp18172;
    wire[7:0] tmp18173;
    wire[6:0] tmp18174;
    wire[7:0] tmp18175;
    wire tmp18176;
    wire tmp18177;
    wire tmp18178;
    wire tmp18179;
    wire tmp18180;
    wire tmp18181;
    wire tmp18182;
    wire tmp18183;
    wire tmp18184;
    wire tmp18185;
    wire tmp18186;
    wire tmp18187;
    wire tmp18188;
    wire tmp18189;
    wire tmp18190;
    wire tmp18191;
    wire tmp18192;
    wire tmp18193;

    // Combinational
    assign const_3255_0 = 0;
    assign const_3256_0 = 0;
    assign const_3257_1 = 1;
    assign const_3258_0 = 0;
    assign const_3259_0 = 0;
    assign const_3260_0 = 0;
    assign const_3261_0 = 0;
    assign const_3262_0 = 0;
    assign const_3263_0 = 0;
    assign out18156 = tmp18156;
    assign out18165 = tmp18165;
    assign out18170 = tmp18170;
    assign tmp18051 = tmp18138;
    assign tmp18052 = {const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0, const_3255_0};
    assign tmp18053 = {tmp18052, lzc};
    assign tmp18054 = {abs_mantissa[23], abs_mantissa[22], abs_mantissa[21], abs_mantissa[20], abs_mantissa[19], abs_mantissa[18], abs_mantissa[17], abs_mantissa[16], abs_mantissa[15], abs_mantissa[14], abs_mantissa[13], abs_mantissa[12], abs_mantissa[11], abs_mantissa[10], abs_mantissa[9], abs_mantissa[8], abs_mantissa[7], abs_mantissa[6], abs_mantissa[5], abs_mantissa[4], abs_mantissa[3], abs_mantissa[2], abs_mantissa[1], abs_mantissa[0]};
    assign tmp18055 = {tmp18054, const_3256_0};
    assign tmp18056 = {abs_mantissa[24], abs_mantissa[23], abs_mantissa[22], abs_mantissa[21], abs_mantissa[20], abs_mantissa[19], abs_mantissa[18], abs_mantissa[17], abs_mantissa[16], abs_mantissa[15], abs_mantissa[14], abs_mantissa[13], abs_mantissa[12], abs_mantissa[11], abs_mantissa[10], abs_mantissa[9], abs_mantissa[8], abs_mantissa[7], abs_mantissa[6], abs_mantissa[5], abs_mantissa[4], abs_mantissa[3], abs_mantissa[2], abs_mantissa[1]};
    assign tmp18057 = {const_3256_0, tmp18056};
    assign tmp18058 = const_3257_1 ? tmp18055 : tmp18057;
    assign tmp18059 = {tmp18053[0]};
    assign tmp18060 = tmp18059 ? tmp18058 : abs_mantissa;
    assign tmp18061 = {const_3256_0, const_3256_0};
    assign tmp18062 = {tmp18061[1], tmp18061[0]};
    assign tmp18063 = {tmp18060[22], tmp18060[21], tmp18060[20], tmp18060[19], tmp18060[18], tmp18060[17], tmp18060[16], tmp18060[15], tmp18060[14], tmp18060[13], tmp18060[12], tmp18060[11], tmp18060[10], tmp18060[9], tmp18060[8], tmp18060[7], tmp18060[6], tmp18060[5], tmp18060[4], tmp18060[3], tmp18060[2], tmp18060[1], tmp18060[0]};
    assign tmp18064 = {tmp18063, tmp18062};
    assign tmp18065 = {tmp18060[24], tmp18060[23], tmp18060[22], tmp18060[21], tmp18060[20], tmp18060[19], tmp18060[18], tmp18060[17], tmp18060[16], tmp18060[15], tmp18060[14], tmp18060[13], tmp18060[12], tmp18060[11], tmp18060[10], tmp18060[9], tmp18060[8], tmp18060[7], tmp18060[6], tmp18060[5], tmp18060[4], tmp18060[3], tmp18060[2]};
    assign tmp18066 = {tmp18062, tmp18065};
    assign tmp18067 = const_3257_1 ? tmp18064 : tmp18066;
    assign tmp18068 = {tmp18053[1]};
    assign tmp18069 = tmp18068 ? tmp18067 : tmp18060;
    assign tmp18070 = {tmp18062, tmp18062};
    assign tmp18071 = {tmp18070[3], tmp18070[2], tmp18070[1], tmp18070[0]};
    assign tmp18072 = {tmp18069[20], tmp18069[19], tmp18069[18], tmp18069[17], tmp18069[16], tmp18069[15], tmp18069[14], tmp18069[13], tmp18069[12], tmp18069[11], tmp18069[10], tmp18069[9], tmp18069[8], tmp18069[7], tmp18069[6], tmp18069[5], tmp18069[4], tmp18069[3], tmp18069[2], tmp18069[1], tmp18069[0]};
    assign tmp18073 = {tmp18072, tmp18071};
    assign tmp18074 = {tmp18069[24], tmp18069[23], tmp18069[22], tmp18069[21], tmp18069[20], tmp18069[19], tmp18069[18], tmp18069[17], tmp18069[16], tmp18069[15], tmp18069[14], tmp18069[13], tmp18069[12], tmp18069[11], tmp18069[10], tmp18069[9], tmp18069[8], tmp18069[7], tmp18069[6], tmp18069[5], tmp18069[4]};
    assign tmp18075 = {tmp18071, tmp18074};
    assign tmp18076 = const_3257_1 ? tmp18073 : tmp18075;
    assign tmp18077 = {tmp18053[2]};
    assign tmp18078 = tmp18077 ? tmp18076 : tmp18069;
    assign tmp18079 = {tmp18071, tmp18071};
    assign tmp18080 = {tmp18079[7], tmp18079[6], tmp18079[5], tmp18079[4], tmp18079[3], tmp18079[2], tmp18079[1], tmp18079[0]};
    assign tmp18081 = {tmp18078[16], tmp18078[15], tmp18078[14], tmp18078[13], tmp18078[12], tmp18078[11], tmp18078[10], tmp18078[9], tmp18078[8], tmp18078[7], tmp18078[6], tmp18078[5], tmp18078[4], tmp18078[3], tmp18078[2], tmp18078[1], tmp18078[0]};
    assign tmp18082 = {tmp18081, tmp18080};
    assign tmp18083 = {tmp18078[24], tmp18078[23], tmp18078[22], tmp18078[21], tmp18078[20], tmp18078[19], tmp18078[18], tmp18078[17], tmp18078[16], tmp18078[15], tmp18078[14], tmp18078[13], tmp18078[12], tmp18078[11], tmp18078[10], tmp18078[9], tmp18078[8]};
    assign tmp18084 = {tmp18080, tmp18083};
    assign tmp18085 = const_3257_1 ? tmp18082 : tmp18084;
    assign tmp18086 = {tmp18053[3]};
    assign tmp18087 = tmp18086 ? tmp18085 : tmp18078;
    assign tmp18088 = {tmp18080, tmp18080};
    assign tmp18089 = {tmp18088[15], tmp18088[14], tmp18088[13], tmp18088[12], tmp18088[11], tmp18088[10], tmp18088[9], tmp18088[8], tmp18088[7], tmp18088[6], tmp18088[5], tmp18088[4], tmp18088[3], tmp18088[2], tmp18088[1], tmp18088[0]};
    assign tmp18090 = {tmp18087[8], tmp18087[7], tmp18087[6], tmp18087[5], tmp18087[4], tmp18087[3], tmp18087[2], tmp18087[1], tmp18087[0]};
    assign tmp18091 = {tmp18090, tmp18089};
    assign tmp18092 = {tmp18087[24], tmp18087[23], tmp18087[22], tmp18087[21], tmp18087[20], tmp18087[19], tmp18087[18], tmp18087[17], tmp18087[16]};
    assign tmp18093 = {tmp18089, tmp18092};
    assign tmp18094 = const_3257_1 ? tmp18091 : tmp18093;
    assign tmp18095 = {tmp18053[4]};
    assign tmp18096 = tmp18095 ? tmp18094 : tmp18087;
    assign tmp18097 = {tmp18089, tmp18089};
    assign tmp18098 = {tmp18097[24], tmp18097[23], tmp18097[22], tmp18097[21], tmp18097[20], tmp18097[19], tmp18097[18], tmp18097[17], tmp18097[16], tmp18097[15], tmp18097[14], tmp18097[13], tmp18097[12], tmp18097[11], tmp18097[10], tmp18097[9], tmp18097[8], tmp18097[7], tmp18097[6], tmp18097[5], tmp18097[4], tmp18097[3], tmp18097[2], tmp18097[1], tmp18097[0]};
    assign tmp18099 = {tmp18053[5]};
    assign tmp18100 = tmp18099 ? tmp18098 : tmp18096;
    assign tmp18101 = {tmp18053[6]};
    assign tmp18102 = tmp18101 ? tmp18098 : tmp18100;
    assign tmp18103 = {tmp18053[7]};
    assign tmp18104 = tmp18103 ? tmp18098 : tmp18102;
    assign tmp18105 = {tmp18053[8]};
    assign tmp18106 = tmp18105 ? tmp18098 : tmp18104;
    assign tmp18107 = {tmp18053[9]};
    assign tmp18108 = tmp18107 ? tmp18098 : tmp18106;
    assign tmp18109 = {tmp18053[10]};
    assign tmp18110 = tmp18109 ? tmp18098 : tmp18108;
    assign tmp18111 = {tmp18053[11]};
    assign tmp18112 = tmp18111 ? tmp18098 : tmp18110;
    assign tmp18113 = {tmp18053[12]};
    assign tmp18114 = tmp18113 ? tmp18098 : tmp18112;
    assign tmp18115 = {tmp18053[13]};
    assign tmp18116 = tmp18115 ? tmp18098 : tmp18114;
    assign tmp18117 = {tmp18053[14]};
    assign tmp18118 = tmp18117 ? tmp18098 : tmp18116;
    assign tmp18119 = {tmp18053[15]};
    assign tmp18120 = tmp18119 ? tmp18098 : tmp18118;
    assign tmp18121 = {tmp18053[16]};
    assign tmp18122 = tmp18121 ? tmp18098 : tmp18120;
    assign tmp18123 = {tmp18053[17]};
    assign tmp18124 = tmp18123 ? tmp18098 : tmp18122;
    assign tmp18125 = {tmp18053[18]};
    assign tmp18126 = tmp18125 ? tmp18098 : tmp18124;
    assign tmp18127 = {tmp18053[19]};
    assign tmp18128 = tmp18127 ? tmp18098 : tmp18126;
    assign tmp18129 = {tmp18053[20]};
    assign tmp18130 = tmp18129 ? tmp18098 : tmp18128;
    assign tmp18131 = {tmp18053[21]};
    assign tmp18132 = tmp18131 ? tmp18098 : tmp18130;
    assign tmp18133 = {tmp18053[22]};
    assign tmp18134 = tmp18133 ? tmp18098 : tmp18132;
    assign tmp18135 = {tmp18053[23]};
    assign tmp18136 = tmp18135 ? tmp18098 : tmp18134;
    assign tmp18137 = {tmp18053[24]};
    assign tmp18138 = tmp18137 ? tmp18098 : tmp18136;
    assign tmp18139 = tmp18148;
    assign tmp18140 = {tmp18051[1]};
    assign tmp18141 = round_bit | sticky_bit;
    assign tmp18142 = guard_bit & tmp18141;
    assign tmp18143 = ~round_bit;
    assign tmp18144 = guard_bit & tmp18143;
    assign tmp18145 = ~sticky_bit;
    assign tmp18146 = tmp18144 & tmp18145;
    assign tmp18147 = tmp18146 & tmp18140;
    assign tmp18148 = tmp18142 | tmp18147;
    assign tmp18149 = tmp18153;
    assign tmp18150 = {const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0, const_3258_0};
    assign tmp18151 = {tmp18150, tmp18139};
    assign tmp18152 = tmp18051 + tmp18151;
    assign tmp18153 = {tmp18152[24], tmp18152[23], tmp18152[22], tmp18152[21], tmp18152[20], tmp18152[19], tmp18152[18], tmp18152[17], tmp18152[16], tmp18152[15], tmp18152[14], tmp18152[13], tmp18152[12], tmp18152[11], tmp18152[10], tmp18152[9], tmp18152[8], tmp18152[7], tmp18152[6], tmp18152[5], tmp18152[4], tmp18152[3], tmp18152[2], tmp18152[1], tmp18152[0]};
    assign tmp18154 = tmp18155;
    assign tmp18155 = {tmp18149[24]};
    assign tmp18156 = tmp18159;
    assign tmp18157 = {tmp18149[23], tmp18149[22], tmp18149[21], tmp18149[20], tmp18149[19], tmp18149[18], tmp18149[17], tmp18149[16], tmp18149[15], tmp18149[14], tmp18149[13], tmp18149[12], tmp18149[11], tmp18149[10], tmp18149[9], tmp18149[8], tmp18149[7], tmp18149[6], tmp18149[5], tmp18149[4], tmp18149[3], tmp18149[2], tmp18149[1]};
    assign tmp18158 = {tmp18149[22], tmp18149[21], tmp18149[20], tmp18149[19], tmp18149[18], tmp18149[17], tmp18149[16], tmp18149[15], tmp18149[14], tmp18149[13], tmp18149[12], tmp18149[11], tmp18149[10], tmp18149[9], tmp18149[8], tmp18149[7], tmp18149[6], tmp18149[5], tmp18149[4], tmp18149[3], tmp18149[2], tmp18149[1], tmp18149[0]};
    assign tmp18159 = tmp18154 ? tmp18157 : tmp18158;
    assign tmp18160 = tmp18164;
    assign tmp18161 = {const_3259_0, const_3259_0, const_3259_0, const_3259_0};
    assign tmp18162 = {tmp18161, lzc};
    assign tmp18163 = exp_larger - tmp18162;
    assign tmp18164 = {tmp18163[7], tmp18163[6], tmp18163[5], tmp18163[4], tmp18163[3], tmp18163[2], tmp18163[1], tmp18163[0]};
    assign tmp18165 = tmp18169;
    assign tmp18166 = {const_3260_0, const_3260_0, const_3260_0, const_3260_0, const_3260_0, const_3260_0, const_3260_0};
    assign tmp18167 = {tmp18166, tmp18154};
    assign tmp18168 = tmp18160 + tmp18167;
    assign tmp18169 = {tmp18168[7], tmp18168[6], tmp18168[5], tmp18168[4], tmp18168[3], tmp18168[2], tmp18168[1], tmp18168[0]};
    assign tmp18170 = tmp18193;
    assign tmp18171 = sign_a ^ sign_b;
    assign tmp18172 = ~tmp18171;
    assign tmp18173 = {exp_diff[7], exp_diff[6], exp_diff[5], exp_diff[4], exp_diff[3], exp_diff[2], exp_diff[1], exp_diff[0]};
    assign tmp18174 = {const_3262_0, const_3262_0, const_3262_0, const_3262_0, const_3262_0, const_3262_0, const_3262_0};
    assign tmp18175 = {tmp18174, const_3261_0};
    assign tmp18176 = tmp18173 == tmp18175;
    assign tmp18177 = is_neg ^ sign_a;
    assign tmp18178 = ~tmp18172;
    assign tmp18179 = tmp18178 & tmp18176;
    assign tmp18180 = {exp_diff[8]};
    assign tmp18181 = ~tmp18172;
    assign tmp18182 = ~tmp18176;
    assign tmp18183 = tmp18181 & tmp18182;
    assign tmp18184 = tmp18183 & tmp18180;
    assign tmp18185 = ~tmp18172;
    assign tmp18186 = ~tmp18176;
    assign tmp18187 = tmp18185 & tmp18186;
    assign tmp18188 = ~tmp18180;
    assign tmp18189 = tmp18187 & tmp18188;
    assign tmp18190 = tmp18172 ? sign_a : const_3263_0;
    assign tmp18191 = tmp18179 ? tmp18177 : tmp18190;
    assign tmp18192 = tmp18184 ? sign_b : tmp18191;
    assign tmp18193 = tmp18189 ? sign_a : tmp18192;

endmodule

