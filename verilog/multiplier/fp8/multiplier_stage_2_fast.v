// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, float_a, float_b, out3497, out3499, out3500);
    input clk;
    input rst;
    input[7:0] float_a;
    input[7:0] float_b;
    output out3497;
    output[4:0] out3499;
    output[7:0] out3500;

    wire const_682_1;
    wire const_683_1;
    wire const_684_0;
    wire const_685_0;
    wire const_686_0;
    wire const_687_0;
    wire const_688_0;
    wire tmp3483;
    wire tmp3484;
    wire tmp3485;
    wire tmp3486;
    wire[3:0] tmp3487;
    wire[3:0] tmp3488;
    wire[3:0] tmp3489;
    wire[3:0] tmp3490;
    wire[3:0] tmp3491;
    wire[3:0] tmp3492;
    wire[2:0] tmp3493;
    wire[3:0] tmp3494;
    wire[2:0] tmp3495;
    wire[3:0] tmp3496;
    wire tmp3497;
    wire tmp3498;
    wire[4:0] tmp3499;
    wire[7:0] tmp3500;
    wire[3:0] tmp3501;
    wire tmp3502;
    wire tmp3503;
    wire tmp3504;
    wire tmp3505;
    wire[3:0] tmp3506;
    wire tmp3507;
    wire tmp3508;
    wire tmp3509;
    wire tmp3510;
    wire tmp3511;
    wire tmp3512;
    wire tmp3513;
    wire tmp3514;
    wire tmp3515;
    wire tmp3516;
    wire tmp3517;
    wire tmp3518;
    wire tmp3519;
    wire tmp3520;
    wire tmp3521;
    wire tmp3522;
    wire[4:0] tmp3523;
    wire tmp3524;
    wire[4:0] tmp3525;
    wire[4:0] tmp3526;
    wire tmp3527;
    wire tmp3528;
    wire tmp3529;
    wire tmp3530;
    wire tmp3531;
    wire tmp3532;
    wire tmp3533;
    wire tmp3534;
    wire tmp3535;
    wire tmp3536;
    wire tmp3537;
    wire tmp3538;
    wire tmp3539;
    wire tmp3540;
    wire tmp3541;
    wire tmp3542;
    wire tmp3543;
    wire tmp3544;
    wire tmp3545;
    wire tmp3546;
    wire tmp3547;
    wire tmp3548;
    wire tmp3549;
    wire tmp3550;
    wire tmp3551;
    wire tmp3552;
    wire tmp3553;
    wire tmp3554;
    wire tmp3555;
    wire tmp3556;
    wire tmp3557;
    wire tmp3558;
    wire tmp3559;
    wire tmp3560;
    wire tmp3561;
    wire tmp3562;
    wire tmp3563;
    wire tmp3564;
    wire tmp3565;
    wire tmp3566;
    wire tmp3567;
    wire tmp3568;
    wire tmp3569;
    wire tmp3570;
    wire tmp3571;
    wire tmp3572;
    wire tmp3573;
    wire tmp3574;
    wire tmp3575;
    wire tmp3576;
    wire tmp3577;
    wire tmp3578;
    wire tmp3579;
    wire tmp3580;
    wire tmp3581;
    wire tmp3582;
    wire tmp3583;
    wire tmp3584;
    wire tmp3585;
    wire tmp3586;
    wire tmp3587;
    wire tmp3588;
    wire tmp3589;
    wire tmp3590;
    wire tmp3591;
    wire tmp3592;
    wire tmp3593;
    wire tmp3594;
    wire tmp3595;
    wire tmp3596;
    wire tmp3597;
    wire tmp3598;
    wire tmp3599;
    wire tmp3600;
    wire tmp3601;
    wire tmp3602;
    wire[4:0] tmp3603;
    wire[4:0] tmp3604;
    wire[4:0] tmp3605;
    wire tmp3606;
    wire tmp3607;
    wire tmp3608;
    wire tmp3609;
    wire tmp3610;
    wire[4:0] tmp3611;
    wire tmp3612;
    wire tmp3613;
    wire tmp3614;
    wire tmp3615;
    wire tmp3616;
    wire tmp3617;
    wire tmp3618;
    wire tmp3619;
    wire tmp3620;
    wire tmp3621;
    wire tmp3622;
    wire tmp3623;
    wire tmp3624;
    wire tmp3625;
    wire tmp3626;
    wire tmp3627;
    wire tmp3628;
    wire tmp3629;
    wire tmp3630;
    wire tmp3631;
    wire tmp3632;
    wire tmp3633;
    wire tmp3634;
    wire tmp3635;
    wire tmp3636;
    wire[5:0] tmp3637;
    wire tmp3638;
    wire[5:0] tmp3639;
    wire[5:0] tmp3640;
    wire[8:0] tmp3641;
    wire[7:0] tmp3642;

    // Combinational
    assign const_682_1 = 1;
    assign const_683_1 = 1;
    assign const_684_0 = 0;
    assign const_685_0 = 0;
    assign const_686_0 = 0;
    assign const_687_0 = 0;
    assign const_688_0 = 0;
    assign out3497 = tmp3497;
    assign out3499 = tmp3499;
    assign out3500 = tmp3500;
    assign tmp3483 = tmp3485;
    assign tmp3484 = tmp3486;
    assign tmp3485 = {float_a[7]};
    assign tmp3486 = {float_b[7]};
    assign tmp3487 = tmp3489;
    assign tmp3488 = tmp3490;
    assign tmp3489 = {float_a[6], float_a[5], float_a[4], float_a[3]};
    assign tmp3490 = {float_b[6], float_b[5], float_b[4], float_b[3]};
    assign tmp3491 = tmp3494;
    assign tmp3492 = tmp3496;
    assign tmp3493 = {float_a[2], float_a[1], float_a[0]};
    assign tmp3494 = {const_682_1, tmp3493};
    assign tmp3495 = {float_b[2], float_b[1], float_b[0]};
    assign tmp3496 = {const_683_1, tmp3495};
    assign tmp3497 = tmp3498;
    assign tmp3498 = tmp3483 ^ tmp3484;
    assign tmp3499 = tmp3526;
    assign tmp3500 = tmp3642;
    assign tmp3501 = tmp3487 ^ tmp3488;
    assign tmp3502 = {tmp3501[0]};
    assign tmp3503 = {tmp3501[1]};
    assign tmp3504 = {tmp3501[2]};
    assign tmp3505 = {tmp3501[3]};
    assign tmp3506 = tmp3487 & tmp3488;
    assign tmp3507 = {tmp3506[0]};
    assign tmp3508 = {tmp3506[1]};
    assign tmp3509 = {tmp3506[2]};
    assign tmp3510 = {tmp3506[3]};
    assign tmp3511 = tmp3505 & tmp3509;
    assign tmp3512 = tmp3510 | tmp3511;
    assign tmp3513 = tmp3505 & tmp3504;
    assign tmp3514 = tmp3504 & tmp3508;
    assign tmp3515 = tmp3509 | tmp3514;
    assign tmp3516 = tmp3504 & tmp3503;
    assign tmp3517 = tmp3503 & tmp3507;
    assign tmp3518 = tmp3508 | tmp3517;
    assign tmp3519 = tmp3513 & tmp3518;
    assign tmp3520 = tmp3512 | tmp3519;
    assign tmp3521 = tmp3516 & tmp3507;
    assign tmp3522 = tmp3515 | tmp3521;
    assign tmp3523 = {tmp3520, tmp3522, tmp3518, tmp3507, const_684_0};
    assign tmp3524 = {const_685_0};
    assign tmp3525 = {tmp3524, tmp3501};
    assign tmp3526 = tmp3523 ^ tmp3525;
    assign tmp3527 = {tmp3491[0]};
    assign tmp3528 = {tmp3492[0]};
    assign tmp3529 = tmp3527 & tmp3528;
    assign tmp3530 = {tmp3492[1]};
    assign tmp3531 = tmp3527 & tmp3530;
    assign tmp3532 = {tmp3492[2]};
    assign tmp3533 = tmp3527 & tmp3532;
    assign tmp3534 = {tmp3492[3]};
    assign tmp3535 = tmp3527 & tmp3534;
    assign tmp3536 = {tmp3491[1]};
    assign tmp3537 = {tmp3492[0]};
    assign tmp3538 = tmp3536 & tmp3537;
    assign tmp3539 = {tmp3492[1]};
    assign tmp3540 = tmp3536 & tmp3539;
    assign tmp3541 = {tmp3492[2]};
    assign tmp3542 = tmp3536 & tmp3541;
    assign tmp3543 = {tmp3492[3]};
    assign tmp3544 = tmp3536 & tmp3543;
    assign tmp3545 = {tmp3491[2]};
    assign tmp3546 = {tmp3492[0]};
    assign tmp3547 = tmp3545 & tmp3546;
    assign tmp3548 = {tmp3492[1]};
    assign tmp3549 = tmp3545 & tmp3548;
    assign tmp3550 = {tmp3492[2]};
    assign tmp3551 = tmp3545 & tmp3550;
    assign tmp3552 = {tmp3492[3]};
    assign tmp3553 = tmp3545 & tmp3552;
    assign tmp3554 = {tmp3491[3]};
    assign tmp3555 = {tmp3492[0]};
    assign tmp3556 = tmp3554 & tmp3555;
    assign tmp3557 = {tmp3492[1]};
    assign tmp3558 = tmp3554 & tmp3557;
    assign tmp3559 = {tmp3492[2]};
    assign tmp3560 = tmp3554 & tmp3559;
    assign tmp3561 = {tmp3492[3]};
    assign tmp3562 = tmp3554 & tmp3561;
    assign tmp3563 = tmp3531 ^ tmp3538;
    assign tmp3564 = tmp3531 & tmp3538;
    assign tmp3565 = tmp3533 ^ tmp3540;
    assign tmp3566 = tmp3565 ^ tmp3547;
    assign tmp3567 = tmp3533 & tmp3540;
    assign tmp3568 = tmp3533 & tmp3547;
    assign tmp3569 = tmp3567 | tmp3568;
    assign tmp3570 = tmp3540 & tmp3547;
    assign tmp3571 = tmp3569 | tmp3570;
    assign tmp3572 = tmp3535 ^ tmp3542;
    assign tmp3573 = tmp3572 ^ tmp3549;
    assign tmp3574 = tmp3535 & tmp3542;
    assign tmp3575 = tmp3535 & tmp3549;
    assign tmp3576 = tmp3574 | tmp3575;
    assign tmp3577 = tmp3542 & tmp3549;
    assign tmp3578 = tmp3576 | tmp3577;
    assign tmp3579 = tmp3544 ^ tmp3551;
    assign tmp3580 = tmp3579 ^ tmp3558;
    assign tmp3581 = tmp3544 & tmp3551;
    assign tmp3582 = tmp3544 & tmp3558;
    assign tmp3583 = tmp3581 | tmp3582;
    assign tmp3584 = tmp3551 & tmp3558;
    assign tmp3585 = tmp3583 | tmp3584;
    assign tmp3586 = tmp3553 ^ tmp3560;
    assign tmp3587 = tmp3553 & tmp3560;
    assign tmp3588 = tmp3564 ^ tmp3566;
    assign tmp3589 = tmp3564 & tmp3566;
    assign tmp3590 = tmp3571 ^ tmp3573;
    assign tmp3591 = tmp3590 ^ tmp3556;
    assign tmp3592 = tmp3571 & tmp3573;
    assign tmp3593 = tmp3571 & tmp3556;
    assign tmp3594 = tmp3592 | tmp3593;
    assign tmp3595 = tmp3573 & tmp3556;
    assign tmp3596 = tmp3594 | tmp3595;
    assign tmp3597 = tmp3578 ^ tmp3580;
    assign tmp3598 = tmp3578 & tmp3580;
    assign tmp3599 = tmp3585 ^ tmp3586;
    assign tmp3600 = tmp3585 & tmp3586;
    assign tmp3601 = tmp3587 ^ tmp3562;
    assign tmp3602 = tmp3587 & tmp3562;
    assign tmp3603 = {tmp3602, tmp3600, tmp3598, tmp3596, tmp3589};
    assign tmp3604 = {const_686_0, tmp3601, tmp3599, tmp3597, tmp3591};
    assign tmp3605 = tmp3603 ^ tmp3604;
    assign tmp3606 = {tmp3605[0]};
    assign tmp3607 = {tmp3605[1]};
    assign tmp3608 = {tmp3605[2]};
    assign tmp3609 = {tmp3605[3]};
    assign tmp3610 = {tmp3605[4]};
    assign tmp3611 = tmp3603 & tmp3604;
    assign tmp3612 = {tmp3611[0]};
    assign tmp3613 = {tmp3611[1]};
    assign tmp3614 = {tmp3611[2]};
    assign tmp3615 = {tmp3611[3]};
    assign tmp3616 = {tmp3611[4]};
    assign tmp3617 = tmp3610 & tmp3615;
    assign tmp3618 = tmp3616 | tmp3617;
    assign tmp3619 = tmp3610 & tmp3609;
    assign tmp3620 = tmp3609 & tmp3614;
    assign tmp3621 = tmp3615 | tmp3620;
    assign tmp3622 = tmp3609 & tmp3608;
    assign tmp3623 = tmp3608 & tmp3613;
    assign tmp3624 = tmp3614 | tmp3623;
    assign tmp3625 = tmp3608 & tmp3607;
    assign tmp3626 = tmp3607 & tmp3612;
    assign tmp3627 = tmp3613 | tmp3626;
    assign tmp3628 = tmp3619 & tmp3624;
    assign tmp3629 = tmp3618 | tmp3628;
    assign tmp3630 = tmp3619 & tmp3625;
    assign tmp3631 = tmp3622 & tmp3627;
    assign tmp3632 = tmp3621 | tmp3631;
    assign tmp3633 = tmp3625 & tmp3612;
    assign tmp3634 = tmp3624 | tmp3633;
    assign tmp3635 = tmp3630 & tmp3612;
    assign tmp3636 = tmp3629 | tmp3635;
    assign tmp3637 = {tmp3636, tmp3632, tmp3634, tmp3627, tmp3612, const_687_0};
    assign tmp3638 = {const_688_0};
    assign tmp3639 = {tmp3638, tmp3605};
    assign tmp3640 = tmp3637 ^ tmp3639;
    assign tmp3641 = {tmp3640, tmp3588, tmp3563, tmp3529};
    assign tmp3642 = {tmp3641[7], tmp3641[6], tmp3641[5], tmp3641[4], tmp3641[3], tmp3641[2], tmp3641[1], tmp3641[0]};

endmodule

