// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, abs_mantissa, exp_diff, exp_larger, guard_bit, is_neg, lzc, round_bit, sign_a, sign_b, sticky_bit, out1710, out1717, out1722);
    input clk;
    input rst;
    input[4:0] abs_mantissa;
    input[4:0] exp_diff;
    input[3:0] exp_larger;
    input guard_bit;
    input is_neg;
    input[3:0] lzc;
    input round_bit;
    input sign_a;
    input sign_b;
    input sticky_bit;
    output[2:0] out1710;
    output[3:0] out1717;
    output out1722;

    wire const_333_0;
    wire const_334_0;
    wire const_335_1;
    wire const_336_0;
    wire const_337_0;
    wire const_338_0;
    wire const_339_0;
    wire const_340_0;
    wire[4:0] tmp1659;
    wire tmp1660;
    wire[4:0] tmp1661;
    wire[3:0] tmp1662;
    wire[4:0] tmp1663;
    wire[3:0] tmp1664;
    wire[4:0] tmp1665;
    wire[4:0] tmp1666;
    wire tmp1667;
    wire[4:0] tmp1668;
    wire[1:0] tmp1669;
    wire[1:0] tmp1670;
    wire[2:0] tmp1671;
    wire[4:0] tmp1672;
    wire[2:0] tmp1673;
    wire[4:0] tmp1674;
    wire[4:0] tmp1675;
    wire tmp1676;
    wire[4:0] tmp1677;
    wire[3:0] tmp1678;
    wire[3:0] tmp1679;
    wire tmp1680;
    wire[4:0] tmp1681;
    wire tmp1682;
    wire[4:0] tmp1683;
    wire[4:0] tmp1684;
    wire tmp1685;
    wire[4:0] tmp1686;
    wire[7:0] tmp1687;
    wire[4:0] tmp1688;
    wire tmp1689;
    wire[4:0] tmp1690;
    wire tmp1691;
    wire[4:0] tmp1692;
    wire tmp1693;
    wire tmp1694;
    wire tmp1695;
    wire tmp1696;
    wire tmp1697;
    wire tmp1698;
    wire tmp1699;
    wire tmp1700;
    wire tmp1701;
    wire tmp1702;
    wire[4:0] tmp1703;
    wire[3:0] tmp1704;
    wire[4:0] tmp1705;
    wire[5:0] tmp1706;
    wire[4:0] tmp1707;
    wire tmp1708;
    wire tmp1709;
    wire[2:0] tmp1710;
    wire[2:0] tmp1711;
    wire[2:0] tmp1712;
    wire[2:0] tmp1713;
    wire[3:0] tmp1714;
    wire[4:0] tmp1715;
    wire[3:0] tmp1716;
    wire[3:0] tmp1717;
    wire[2:0] tmp1718;
    wire[3:0] tmp1719;
    wire[4:0] tmp1720;
    wire[3:0] tmp1721;
    wire tmp1722;
    wire tmp1723;
    wire tmp1724;
    wire[3:0] tmp1725;
    wire[2:0] tmp1726;
    wire[3:0] tmp1727;
    wire tmp1728;
    wire tmp1729;
    wire tmp1730;
    wire tmp1731;
    wire tmp1732;
    wire tmp1733;
    wire tmp1734;
    wire tmp1735;
    wire tmp1736;
    wire tmp1737;
    wire tmp1738;
    wire tmp1739;
    wire tmp1740;
    wire tmp1741;
    wire tmp1742;
    wire tmp1743;
    wire tmp1744;
    wire tmp1745;

    // Combinational
    assign const_333_0 = 0;
    assign const_334_0 = 0;
    assign const_335_1 = 1;
    assign const_336_0 = 0;
    assign const_337_0 = 0;
    assign const_338_0 = 0;
    assign const_339_0 = 0;
    assign const_340_0 = 0;
    assign out1710 = tmp1710;
    assign out1717 = tmp1717;
    assign out1722 = tmp1722;
    assign tmp1659 = tmp1692;
    assign tmp1660 = {const_333_0};
    assign tmp1661 = {tmp1660, lzc};
    assign tmp1662 = {abs_mantissa[3], abs_mantissa[2], abs_mantissa[1], abs_mantissa[0]};
    assign tmp1663 = {tmp1662, const_334_0};
    assign tmp1664 = {abs_mantissa[4], abs_mantissa[3], abs_mantissa[2], abs_mantissa[1]};
    assign tmp1665 = {const_334_0, tmp1664};
    assign tmp1666 = const_335_1 ? tmp1663 : tmp1665;
    assign tmp1667 = {tmp1661[0]};
    assign tmp1668 = tmp1667 ? tmp1666 : abs_mantissa;
    assign tmp1669 = {const_334_0, const_334_0};
    assign tmp1670 = {tmp1669[1], tmp1669[0]};
    assign tmp1671 = {tmp1668[2], tmp1668[1], tmp1668[0]};
    assign tmp1672 = {tmp1671, tmp1670};
    assign tmp1673 = {tmp1668[4], tmp1668[3], tmp1668[2]};
    assign tmp1674 = {tmp1670, tmp1673};
    assign tmp1675 = const_335_1 ? tmp1672 : tmp1674;
    assign tmp1676 = {tmp1661[1]};
    assign tmp1677 = tmp1676 ? tmp1675 : tmp1668;
    assign tmp1678 = {tmp1670, tmp1670};
    assign tmp1679 = {tmp1678[3], tmp1678[2], tmp1678[1], tmp1678[0]};
    assign tmp1680 = {tmp1677[0]};
    assign tmp1681 = {tmp1680, tmp1679};
    assign tmp1682 = {tmp1677[4]};
    assign tmp1683 = {tmp1679, tmp1682};
    assign tmp1684 = const_335_1 ? tmp1681 : tmp1683;
    assign tmp1685 = {tmp1661[2]};
    assign tmp1686 = tmp1685 ? tmp1684 : tmp1677;
    assign tmp1687 = {tmp1679, tmp1679};
    assign tmp1688 = {tmp1687[4], tmp1687[3], tmp1687[2], tmp1687[1], tmp1687[0]};
    assign tmp1689 = {tmp1661[3]};
    assign tmp1690 = tmp1689 ? tmp1688 : tmp1686;
    assign tmp1691 = {tmp1661[4]};
    assign tmp1692 = tmp1691 ? tmp1688 : tmp1690;
    assign tmp1693 = tmp1702;
    assign tmp1694 = {tmp1659[1]};
    assign tmp1695 = round_bit | sticky_bit;
    assign tmp1696 = guard_bit & tmp1695;
    assign tmp1697 = ~round_bit;
    assign tmp1698 = guard_bit & tmp1697;
    assign tmp1699 = ~sticky_bit;
    assign tmp1700 = tmp1698 & tmp1699;
    assign tmp1701 = tmp1700 & tmp1694;
    assign tmp1702 = tmp1696 | tmp1701;
    assign tmp1703 = tmp1707;
    assign tmp1704 = {const_336_0, const_336_0, const_336_0, const_336_0};
    assign tmp1705 = {tmp1704, tmp1693};
    assign tmp1706 = tmp1659 + tmp1705;
    assign tmp1707 = {tmp1706[4], tmp1706[3], tmp1706[2], tmp1706[1], tmp1706[0]};
    assign tmp1708 = tmp1709;
    assign tmp1709 = {tmp1703[4]};
    assign tmp1710 = tmp1713;
    assign tmp1711 = {tmp1703[3], tmp1703[2], tmp1703[1]};
    assign tmp1712 = {tmp1703[2], tmp1703[1], tmp1703[0]};
    assign tmp1713 = tmp1708 ? tmp1711 : tmp1712;
    assign tmp1714 = tmp1716;
    assign tmp1715 = exp_larger - lzc;
    assign tmp1716 = {tmp1715[3], tmp1715[2], tmp1715[1], tmp1715[0]};
    assign tmp1717 = tmp1721;
    assign tmp1718 = {const_337_0, const_337_0, const_337_0};
    assign tmp1719 = {tmp1718, tmp1708};
    assign tmp1720 = tmp1714 + tmp1719;
    assign tmp1721 = {tmp1720[3], tmp1720[2], tmp1720[1], tmp1720[0]};
    assign tmp1722 = tmp1745;
    assign tmp1723 = sign_a ^ sign_b;
    assign tmp1724 = ~tmp1723;
    assign tmp1725 = {exp_diff[3], exp_diff[2], exp_diff[1], exp_diff[0]};
    assign tmp1726 = {const_339_0, const_339_0, const_339_0};
    assign tmp1727 = {tmp1726, const_338_0};
    assign tmp1728 = tmp1725 == tmp1727;
    assign tmp1729 = is_neg ^ sign_a;
    assign tmp1730 = ~tmp1724;
    assign tmp1731 = tmp1730 & tmp1728;
    assign tmp1732 = {exp_diff[4]};
    assign tmp1733 = ~tmp1724;
    assign tmp1734 = ~tmp1728;
    assign tmp1735 = tmp1733 & tmp1734;
    assign tmp1736 = tmp1735 & tmp1732;
    assign tmp1737 = ~tmp1724;
    assign tmp1738 = ~tmp1728;
    assign tmp1739 = tmp1737 & tmp1738;
    assign tmp1740 = ~tmp1732;
    assign tmp1741 = tmp1739 & tmp1740;
    assign tmp1742 = tmp1724 ? sign_a : const_340_0;
    assign tmp1743 = tmp1731 ? tmp1729 : tmp1742;
    assign tmp1744 = tmp1736 ? sign_b : tmp1743;
    assign tmp1745 = tmp1741 ? sign_a : tmp1744;

endmodule

