// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, float_a, float_b, out6159, out6161, out6162, out6163, out6164);
    input clk;
    input rst;
    input[15:0] float_a;
    input[15:0] float_b;
    output out6159;
    output[8:0] out6161;
    output[7:0] out6162;
    output[7:0] out6163;
    output[7:0] out6164;

    wire const_1137_1;
    wire const_1138_1;
    wire const_1139_1;
    wire const_1140_0;
    wire const_1141_0;
    wire tmp6145;
    wire tmp6146;
    wire tmp6147;
    wire tmp6148;
    wire[7:0] tmp6149;
    wire[7:0] tmp6150;
    wire[7:0] tmp6151;
    wire[7:0] tmp6152;
    wire[7:0] tmp6153;
    wire[7:0] tmp6154;
    wire[6:0] tmp6155;
    wire[7:0] tmp6156;
    wire[6:0] tmp6157;
    wire[7:0] tmp6158;
    wire tmp6159;
    wire[8:0] tmp6160;
    wire[8:0] tmp6161;
    wire[7:0] tmp6162;
    wire[7:0] tmp6163;
    wire[7:0] tmp6164;
    wire tmp6165;
    wire[8:0] tmp6166;
    wire tmp6167;
    wire tmp6168;
    wire[7:0] tmp6169;
    wire[7:0] tmp6170;
    wire tmp6171;
    wire[7:0] tmp6172;
    wire[7:0] tmp6173;
    wire[6:0] tmp6174;
    wire[7:0] tmp6175;
    wire[8:0] tmp6176;
    wire[7:0] tmp6177;
    wire[8:0] tmp6178;
    wire tmp6179;
    wire[8:0] tmp6180;
    wire[8:0] tmp6181;
    wire tmp6182;
    wire[7:0] tmp6183;
    wire tmp6184;
    wire[7:0] tmp6185;

    // Combinational
    assign const_1137_1 = 1;
    assign const_1138_1 = 1;
    assign const_1139_1 = 1;
    assign const_1140_0 = 0;
    assign const_1141_0 = 0;
    assign out6159 = tmp6159;
    assign out6161 = tmp6161;
    assign out6162 = tmp6162;
    assign out6163 = tmp6163;
    assign out6164 = tmp6164;
    assign tmp6145 = tmp6147;
    assign tmp6146 = tmp6148;
    assign tmp6147 = {float_a[15]};
    assign tmp6148 = {float_b[15]};
    assign tmp6149 = tmp6151;
    assign tmp6150 = tmp6152;
    assign tmp6151 = {float_a[14], float_a[13], float_a[12], float_a[11], float_a[10], float_a[9], float_a[8], float_a[7]};
    assign tmp6152 = {float_b[14], float_b[13], float_b[12], float_b[11], float_b[10], float_b[9], float_b[8], float_b[7]};
    assign tmp6153 = tmp6156;
    assign tmp6154 = tmp6158;
    assign tmp6155 = {float_a[6], float_a[5], float_a[4], float_a[3], float_a[2], float_a[1], float_a[0]};
    assign tmp6156 = {const_1137_1, tmp6155};
    assign tmp6157 = {float_b[6], float_b[5], float_b[4], float_b[3], float_b[2], float_b[1], float_b[0]};
    assign tmp6158 = {const_1138_1, tmp6157};
    assign tmp6159 = tmp6165;
    assign tmp6160 = tmp6166;
    assign tmp6161 = tmp6181;
    assign tmp6162 = tmp6169;
    assign tmp6163 = tmp6183;
    assign tmp6164 = tmp6185;
    assign tmp6165 = tmp6145 ^ tmp6146;
    assign tmp6166 = tmp6149 - tmp6150;
    assign tmp6167 = {tmp6160[8]};
    assign tmp6168 = {tmp6160[8]};
    assign tmp6169 = tmp6168 ? tmp6150 : tmp6149;
    assign tmp6170 = {tmp6160[7], tmp6160[6], tmp6160[5], tmp6160[4], tmp6160[3], tmp6160[2], tmp6160[1], tmp6160[0]};
    assign tmp6171 = {tmp6160[8]};
    assign tmp6172 = {tmp6160[7], tmp6160[6], tmp6160[5], tmp6160[4], tmp6160[3], tmp6160[2], tmp6160[1], tmp6160[0]};
    assign tmp6173 = ~tmp6172;
    assign tmp6174 = {const_1140_0, const_1140_0, const_1140_0, const_1140_0, const_1140_0, const_1140_0, const_1140_0};
    assign tmp6175 = {tmp6174, const_1139_1};
    assign tmp6176 = tmp6173 + tmp6175;
    assign tmp6177 = {tmp6176[7], tmp6176[6], tmp6176[5], tmp6176[4], tmp6176[3], tmp6176[2], tmp6176[1], tmp6176[0]};
    assign tmp6178 = {tmp6171, tmp6177};
    assign tmp6179 = {const_1141_0};
    assign tmp6180 = {tmp6179, tmp6170};
    assign tmp6181 = tmp6167 ? tmp6178 : tmp6180;
    assign tmp6182 = {tmp6160[8]};
    assign tmp6183 = tmp6182 ? tmp6153 : tmp6154;
    assign tmp6184 = {tmp6160[8]};
    assign tmp6185 = tmp6184 ? tmp6154 : tmp6153;

endmodule

