// Generated automatically via PyRTL
// As one initial test of synthesis, map to FPGA with:
//   yosys -p "synth_xilinx -top toplevel" thisfile.v

module toplevel(clk, rst, mant_aligned, mant_unchanged, s_xor, out6407, out6409, out6419);
    input clk;
    input rst;
    input[7:0] mant_aligned;
    input[7:0] mant_unchanged;
    input s_xor;
    output out6407;
    output[8:0] out6409;
    output[3:0] out6419;

    wire const_1159_0;
    wire const_1160_0;
    wire const_1161_0;
    wire const_1162_0;
    wire const_1163_0;
    wire const_1164_0;
    wire const_1165_1;
    wire const_1166_0;
    wire const_1167_0;
    wire const_1168_0;
    wire const_1169_0;
    wire[1:0] const_1170_2;
    wire const_1171_1;
    wire const_1172_0;
    wire[1:0] const_1173_1;
    wire[1:0] const_1174_0;
    wire const_1175_0;
    wire const_1176_0;
    wire const_1177_0;
    wire const_1178_0;
    wire[1:0] const_1179_2;
    wire const_1180_1;
    wire const_1181_0;
    wire[1:0] const_1182_1;
    wire[1:0] const_1183_0;
    wire const_1184_0;
    wire const_1185_0;
    wire const_1186_0;
    wire const_1187_0;
    wire[1:0] const_1188_2;
    wire const_1189_1;
    wire const_1190_0;
    wire[1:0] const_1191_1;
    wire[1:0] const_1192_0;
    wire const_1193_0;
    wire const_1194_0;
    wire const_1195_0;
    wire const_1196_0;
    wire[1:0] const_1197_2;
    wire const_1198_1;
    wire const_1199_0;
    wire[1:0] const_1200_1;
    wire[1:0] const_1201_0;
    wire const_1202_0;
    wire const_1203_0;
    wire[2:0] const_1204_4;
    wire[1:0] const_1205_1;
    wire const_1206_0;
    wire const_1207_0;
    wire const_1208_0;
    wire[2:0] const_1209_4;
    wire[1:0] const_1210_1;
    wire const_1211_0;
    wire const_1212_0;
    wire const_1213_0;
    wire[3:0] const_1214_8;
    wire[1:0] const_1215_1;
    wire const_1216_0;
    wire const_1217_0;
    wire const_1218_0;
    wire const_1219_1;
    wire const_1220_0;
    wire const_1221_0;
    wire const_1222_0;
    wire[9:0] tmp6391;
    wire tmp6392;
    wire[8:0] tmp6393;
    wire tmp6394;
    wire[8:0] tmp6395;
    wire[9:0] tmp6396;
    wire tmp6397;
    wire[8:0] tmp6398;
    wire tmp6399;
    wire[8:0] tmp6400;
    wire[9:0] tmp6401;
    wire tmp6402;
    wire[8:0] tmp6403;
    wire[9:0] tmp6404;
    wire[9:0] tmp6405;
    wire[9:0] tmp6406;
    wire tmp6407;
    wire tmp6408;
    wire[8:0] tmp6409;
    wire[9:0] tmp6410;
    wire[8:0] tmp6411;
    wire[9:0] tmp6412;
    wire[10:0] tmp6413;
    wire tmp6414;
    wire[10:0] tmp6415;
    wire[10:0] tmp6416;
    wire[8:0] tmp6417;
    wire tmp6418;
    wire[3:0] tmp6419;
    wire[7:0] tmp6420;
    wire[1:0] tmp6421;
    wire[1:0] tmp6422;
    wire[1:0] tmp6423;
    wire[1:0] tmp6424;
    wire[1:0] tmp6425;
    wire tmp6426;
    wire[1:0] tmp6427;
    wire tmp6428;
    wire tmp6429;
    wire[1:0] tmp6430;
    wire tmp6431;
    wire tmp6432;
    wire tmp6433;
    wire tmp6434;
    wire tmp6435;
    wire tmp6436;
    wire tmp6437;
    wire[1:0] tmp6438;
    wire[1:0] tmp6439;
    wire[1:0] tmp6440;
    wire[1:0] tmp6441;
    wire[1:0] tmp6442;
    wire tmp6443;
    wire[1:0] tmp6444;
    wire tmp6445;
    wire tmp6446;
    wire[1:0] tmp6447;
    wire tmp6448;
    wire tmp6449;
    wire tmp6450;
    wire tmp6451;
    wire tmp6452;
    wire tmp6453;
    wire tmp6454;
    wire[1:0] tmp6455;
    wire[1:0] tmp6456;
    wire[1:0] tmp6457;
    wire[1:0] tmp6458;
    wire[1:0] tmp6459;
    wire tmp6460;
    wire[1:0] tmp6461;
    wire tmp6462;
    wire tmp6463;
    wire[1:0] tmp6464;
    wire tmp6465;
    wire tmp6466;
    wire tmp6467;
    wire tmp6468;
    wire tmp6469;
    wire tmp6470;
    wire tmp6471;
    wire[1:0] tmp6472;
    wire[1:0] tmp6473;
    wire[1:0] tmp6474;
    wire[1:0] tmp6475;
    wire[1:0] tmp6476;
    wire tmp6477;
    wire[1:0] tmp6478;
    wire tmp6479;
    wire tmp6480;
    wire[1:0] tmp6481;
    wire tmp6482;
    wire tmp6483;
    wire tmp6484;
    wire tmp6485;
    wire tmp6486;
    wire tmp6487;
    wire tmp6488;
    wire[1:0] tmp6489;
    wire[1:0] tmp6490;
    wire[1:0] tmp6491;
    wire[1:0] tmp6492;
    wire[2:0] tmp6493;
    wire tmp6494;
    wire tmp6495;
    wire tmp6496;
    wire tmp6497;
    wire[2:0] tmp6498;
    wire tmp6499;
    wire tmp6500;
    wire[2:0] tmp6501;
    wire tmp6502;
    wire tmp6503;
    wire tmp6504;
    wire[1:0] tmp6505;
    wire[2:0] tmp6506;
    wire[2:0] tmp6507;
    wire[2:0] tmp6508;
    wire[2:0] tmp6509;
    wire[2:0] tmp6510;
    wire tmp6511;
    wire tmp6512;
    wire tmp6513;
    wire tmp6514;
    wire[2:0] tmp6515;
    wire tmp6516;
    wire tmp6517;
    wire[2:0] tmp6518;
    wire tmp6519;
    wire tmp6520;
    wire tmp6521;
    wire[1:0] tmp6522;
    wire[2:0] tmp6523;
    wire[2:0] tmp6524;
    wire[2:0] tmp6525;
    wire[2:0] tmp6526;
    wire[3:0] tmp6527;
    wire[3:0] tmp6528;
    wire tmp6529;
    wire tmp6530;
    wire tmp6531;
    wire[1:0] tmp6532;
    wire[3:0] tmp6533;
    wire tmp6534;
    wire tmp6535;
    wire[3:0] tmp6536;
    wire tmp6537;
    wire tmp6538;
    wire tmp6539;
    wire[2:0] tmp6540;
    wire[3:0] tmp6541;
    wire[3:0] tmp6542;
    wire[3:0] tmp6543;
    wire[3:0] tmp6544;
    wire[2:0] tmp6545;
    wire[3:0] tmp6546;
    wire[4:0] tmp6547;
    wire[3:0] tmp6548;
    wire[4:0] tmp6549;
    wire[4:0] tmp6550;
    wire[3:0] tmp6551;

    // Combinational
    assign const_1159_0 = 0;
    assign const_1160_0 = 0;
    assign const_1161_0 = 0;
    assign const_1162_0 = 0;
    assign const_1163_0 = 0;
    assign const_1164_0 = 0;
    assign const_1165_1 = 1;
    assign const_1166_0 = 0;
    assign const_1167_0 = 0;
    assign const_1168_0 = 0;
    assign const_1169_0 = 0;
    assign const_1170_2 = 2;
    assign const_1171_1 = 1;
    assign const_1172_0 = 0;
    assign const_1173_1 = 1;
    assign const_1174_0 = 0;
    assign const_1175_0 = 0;
    assign const_1176_0 = 0;
    assign const_1177_0 = 0;
    assign const_1178_0 = 0;
    assign const_1179_2 = 2;
    assign const_1180_1 = 1;
    assign const_1181_0 = 0;
    assign const_1182_1 = 1;
    assign const_1183_0 = 0;
    assign const_1184_0 = 0;
    assign const_1185_0 = 0;
    assign const_1186_0 = 0;
    assign const_1187_0 = 0;
    assign const_1188_2 = 2;
    assign const_1189_1 = 1;
    assign const_1190_0 = 0;
    assign const_1191_1 = 1;
    assign const_1192_0 = 0;
    assign const_1193_0 = 0;
    assign const_1194_0 = 0;
    assign const_1195_0 = 0;
    assign const_1196_0 = 0;
    assign const_1197_2 = 2;
    assign const_1198_1 = 1;
    assign const_1199_0 = 0;
    assign const_1200_1 = 1;
    assign const_1201_0 = 0;
    assign const_1202_0 = 0;
    assign const_1203_0 = 0;
    assign const_1204_4 = 4;
    assign const_1205_1 = 1;
    assign const_1206_0 = 0;
    assign const_1207_0 = 0;
    assign const_1208_0 = 0;
    assign const_1209_4 = 4;
    assign const_1210_1 = 1;
    assign const_1211_0 = 0;
    assign const_1212_0 = 0;
    assign const_1213_0 = 0;
    assign const_1214_8 = 8;
    assign const_1215_1 = 1;
    assign const_1216_0 = 0;
    assign const_1217_0 = 0;
    assign const_1218_0 = 0;
    assign const_1219_1 = 1;
    assign const_1220_0 = 0;
    assign const_1221_0 = 0;
    assign const_1222_0 = 0;
    assign out6407 = tmp6407;
    assign out6409 = tmp6409;
    assign out6419 = tmp6419;
    assign tmp6391 = tmp6406;
    assign tmp6392 = {const_1159_0};
    assign tmp6393 = {tmp6392, mant_unchanged};
    assign tmp6394 = {const_1160_0};
    assign tmp6395 = {tmp6394, mant_aligned};
    assign tmp6396 = tmp6393 - tmp6395;
    assign tmp6397 = {const_1161_0};
    assign tmp6398 = {tmp6397, mant_unchanged};
    assign tmp6399 = {const_1162_0};
    assign tmp6400 = {tmp6399, mant_aligned};
    assign tmp6401 = tmp6398 + tmp6400;
    assign tmp6402 = ~s_xor;
    assign tmp6403 = {const_1164_0, const_1164_0, const_1164_0, const_1164_0, const_1164_0, const_1164_0, const_1164_0, const_1164_0, const_1164_0};
    assign tmp6404 = {tmp6403, const_1163_0};
    assign tmp6405 = s_xor ? tmp6396 : tmp6404;
    assign tmp6406 = tmp6402 ? tmp6401 : tmp6405;
    assign tmp6407 = tmp6408;
    assign tmp6408 = {tmp6391[9]};
    assign tmp6409 = tmp6417;
    assign tmp6410 = ~tmp6391;
    assign tmp6411 = {const_1166_0, const_1166_0, const_1166_0, const_1166_0, const_1166_0, const_1166_0, const_1166_0, const_1166_0, const_1166_0};
    assign tmp6412 = {tmp6411, const_1165_1};
    assign tmp6413 = tmp6410 + tmp6412;
    assign tmp6414 = {const_1167_0};
    assign tmp6415 = {tmp6414, tmp6391};
    assign tmp6416 = tmp6407 ? tmp6413 : tmp6415;
    assign tmp6417 = {tmp6416[8], tmp6416[7], tmp6416[6], tmp6416[5], tmp6416[4], tmp6416[3], tmp6416[2], tmp6416[1], tmp6416[0]};
    assign tmp6418 = {tmp6409[8]};
    assign tmp6419 = tmp6551;
    assign tmp6420 = {tmp6409[7], tmp6409[6], tmp6409[5], tmp6409[4], tmp6409[3], tmp6409[2], tmp6409[1], tmp6409[0]};
    assign tmp6421 = {tmp6420[7], tmp6420[6]};
    assign tmp6422 = {tmp6420[5], tmp6420[4]};
    assign tmp6423 = {tmp6420[3], tmp6420[2]};
    assign tmp6424 = {tmp6420[1], tmp6420[0]};
    assign tmp6425 = tmp6441;
    assign tmp6426 = {const_1169_0};
    assign tmp6427 = {tmp6426, const_1168_0};
    assign tmp6428 = tmp6421 == tmp6427;
    assign tmp6429 = {const_1172_0};
    assign tmp6430 = {tmp6429, const_1171_1};
    assign tmp6431 = tmp6421 == tmp6430;
    assign tmp6432 = ~tmp6428;
    assign tmp6433 = tmp6432 & tmp6431;
    assign tmp6434 = ~tmp6428;
    assign tmp6435 = ~tmp6431;
    assign tmp6436 = tmp6434 & tmp6435;
    assign tmp6437 = {const_1176_0};
    assign tmp6438 = {tmp6437, const_1175_0};
    assign tmp6439 = tmp6428 ? const_1170_2 : tmp6438;
    assign tmp6440 = tmp6433 ? const_1173_1 : tmp6439;
    assign tmp6441 = tmp6436 ? const_1174_0 : tmp6440;
    assign tmp6442 = tmp6458;
    assign tmp6443 = {const_1178_0};
    assign tmp6444 = {tmp6443, const_1177_0};
    assign tmp6445 = tmp6422 == tmp6444;
    assign tmp6446 = {const_1181_0};
    assign tmp6447 = {tmp6446, const_1180_1};
    assign tmp6448 = tmp6422 == tmp6447;
    assign tmp6449 = ~tmp6445;
    assign tmp6450 = tmp6449 & tmp6448;
    assign tmp6451 = ~tmp6445;
    assign tmp6452 = ~tmp6448;
    assign tmp6453 = tmp6451 & tmp6452;
    assign tmp6454 = {const_1185_0};
    assign tmp6455 = {tmp6454, const_1184_0};
    assign tmp6456 = tmp6445 ? const_1179_2 : tmp6455;
    assign tmp6457 = tmp6450 ? const_1182_1 : tmp6456;
    assign tmp6458 = tmp6453 ? const_1183_0 : tmp6457;
    assign tmp6459 = tmp6475;
    assign tmp6460 = {const_1187_0};
    assign tmp6461 = {tmp6460, const_1186_0};
    assign tmp6462 = tmp6423 == tmp6461;
    assign tmp6463 = {const_1190_0};
    assign tmp6464 = {tmp6463, const_1189_1};
    assign tmp6465 = tmp6423 == tmp6464;
    assign tmp6466 = ~tmp6462;
    assign tmp6467 = tmp6466 & tmp6465;
    assign tmp6468 = ~tmp6462;
    assign tmp6469 = ~tmp6465;
    assign tmp6470 = tmp6468 & tmp6469;
    assign tmp6471 = {const_1194_0};
    assign tmp6472 = {tmp6471, const_1193_0};
    assign tmp6473 = tmp6462 ? const_1188_2 : tmp6472;
    assign tmp6474 = tmp6467 ? const_1191_1 : tmp6473;
    assign tmp6475 = tmp6470 ? const_1192_0 : tmp6474;
    assign tmp6476 = tmp6492;
    assign tmp6477 = {const_1196_0};
    assign tmp6478 = {tmp6477, const_1195_0};
    assign tmp6479 = tmp6424 == tmp6478;
    assign tmp6480 = {const_1199_0};
    assign tmp6481 = {tmp6480, const_1198_1};
    assign tmp6482 = tmp6424 == tmp6481;
    assign tmp6483 = ~tmp6479;
    assign tmp6484 = tmp6483 & tmp6482;
    assign tmp6485 = ~tmp6479;
    assign tmp6486 = ~tmp6482;
    assign tmp6487 = tmp6485 & tmp6486;
    assign tmp6488 = {const_1203_0};
    assign tmp6489 = {tmp6488, const_1202_0};
    assign tmp6490 = tmp6479 ? const_1197_2 : tmp6489;
    assign tmp6491 = tmp6484 ? const_1200_1 : tmp6490;
    assign tmp6492 = tmp6487 ? const_1201_0 : tmp6491;
    assign tmp6493 = tmp6509;
    assign tmp6494 = {tmp6425[1]};
    assign tmp6495 = {tmp6442[1]};
    assign tmp6496 = tmp6494 & tmp6495;
    assign tmp6497 = {tmp6442[0]};
    assign tmp6498 = {const_1205_1, tmp6497};
    assign tmp6499 = ~tmp6496;
    assign tmp6500 = tmp6499 & tmp6494;
    assign tmp6501 = {const_1206_0, tmp6425};
    assign tmp6502 = ~tmp6496;
    assign tmp6503 = ~tmp6494;
    assign tmp6504 = tmp6502 & tmp6503;
    assign tmp6505 = {const_1208_0, const_1208_0};
    assign tmp6506 = {tmp6505, const_1207_0};
    assign tmp6507 = tmp6496 ? const_1204_4 : tmp6506;
    assign tmp6508 = tmp6500 ? tmp6498 : tmp6507;
    assign tmp6509 = tmp6504 ? tmp6501 : tmp6508;
    assign tmp6510 = tmp6526;
    assign tmp6511 = {tmp6459[1]};
    assign tmp6512 = {tmp6476[1]};
    assign tmp6513 = tmp6511 & tmp6512;
    assign tmp6514 = {tmp6476[0]};
    assign tmp6515 = {const_1210_1, tmp6514};
    assign tmp6516 = ~tmp6513;
    assign tmp6517 = tmp6516 & tmp6511;
    assign tmp6518 = {const_1211_0, tmp6459};
    assign tmp6519 = ~tmp6513;
    assign tmp6520 = ~tmp6511;
    assign tmp6521 = tmp6519 & tmp6520;
    assign tmp6522 = {const_1213_0, const_1213_0};
    assign tmp6523 = {tmp6522, const_1212_0};
    assign tmp6524 = tmp6513 ? const_1209_4 : tmp6523;
    assign tmp6525 = tmp6517 ? tmp6515 : tmp6524;
    assign tmp6526 = tmp6521 ? tmp6518 : tmp6525;
    assign tmp6527 = tmp6528;
    assign tmp6528 = tmp6544;
    assign tmp6529 = {tmp6493[2]};
    assign tmp6530 = {tmp6510[2]};
    assign tmp6531 = tmp6529 & tmp6530;
    assign tmp6532 = {tmp6510[1], tmp6510[0]};
    assign tmp6533 = {const_1215_1, tmp6532};
    assign tmp6534 = ~tmp6531;
    assign tmp6535 = tmp6534 & tmp6529;
    assign tmp6536 = {const_1216_0, tmp6493};
    assign tmp6537 = ~tmp6531;
    assign tmp6538 = ~tmp6529;
    assign tmp6539 = tmp6537 & tmp6538;
    assign tmp6540 = {const_1218_0, const_1218_0, const_1218_0};
    assign tmp6541 = {tmp6540, const_1217_0};
    assign tmp6542 = tmp6531 ? const_1214_8 : tmp6541;
    assign tmp6543 = tmp6535 ? tmp6533 : tmp6542;
    assign tmp6544 = tmp6539 ? tmp6536 : tmp6543;
    assign tmp6545 = {const_1220_0, const_1220_0, const_1220_0};
    assign tmp6546 = {tmp6545, const_1219_1};
    assign tmp6547 = tmp6527 + tmp6546;
    assign tmp6548 = {const_1222_0, const_1222_0, const_1222_0, const_1222_0};
    assign tmp6549 = {tmp6548, const_1221_0};
    assign tmp6550 = tmp6418 ? tmp6549 : tmp6547;
    assign tmp6551 = {tmp6550[3], tmp6550[2], tmp6550[1], tmp6550[0]};

endmodule

