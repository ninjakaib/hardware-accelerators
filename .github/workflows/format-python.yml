name: Format Pull Request Python Code

on:
  workflow_dispatch:
  # pull_request:
  #   branches: [main]
  #   paths:
  #     - "**.py"
  #     - "**.ipynb"

jobs:
  format-python:
    # Skip running on PR's created by github-actions bot to prevent loops
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install 'black[jupyter]'

      - name: Run black
        run: black .

      - name: Commit changes and update .git-blame-ignore-revs
        run: |
          # Check if there are formatting changes
          if git diff --quiet; then
            echo "No formatting changes made"
            exit 0
          fi

          # Configure git with the built-in token
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # First commit: formatting changes
          git add -A
          git commit -m "Apply black formatting"

          # Get the commit hash of the formatting commit
          FORMAT_COMMIT=$(git rev-parse HEAD)

          # Second commit: update .git-blame-ignore-revs
          if [ -f .git-blame-ignore-revs ]; then
            if ! grep -q "$FORMAT_COMMIT" .git-blame-ignore-revs; then
              echo "# Black formatting commit" >> .git-blame-ignore-revs
              echo "$FORMAT_COMMIT" >> .git-blame-ignore-revs
            fi
          else
            echo "# Commits to ignore in git blame" > .git-blame-ignore-revs
            echo "# Black formatting commits" >> .git-blame-ignore-revs
            echo "$FORMAT_COMMIT" >> .git-blame-ignore-revs
          fi

          # Only create a second commit if .git-blame-ignore-revs was modified
          if ! git diff --quiet; then
            git add .git-blame-ignore-revs
            git commit -m "Update .git-blame-ignore-revs with formatting commit"
          fi

          # Push changes back to the PR branch
          git push
